<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="movieinformation_OnLoadUnload">
		<onload condition="Skin.HasSetting(Trailer_Autoplay) + String.IsEqual(Window(home).Property(Trailer_Autoplay),true)">PlayerControl(Stop)</onload>
		<onload condition="Skin.HasSetting(Trailer_Autoplay) + String.IsEqual(Window(home).Property(Trailer_Autoplay),true)">ClearProperty(Trailer_Autoplay,home)</onload>
		<onload condition="!String.IsEmpty(Window(home).Property(Infoscreen_Transition))">ClearProperty(Infoscreen_Transition,home)</onload>
		<onload condition="!String.Contains(ListItem.Path,themoviedb.helper)">SetProperty(SelectedItem,$INFO[ListItem.DBID],movieinformation)</onload>
		<onload condition="String.Contains(ListItem.Path,themoviedb.helper)">SetProperty(SelectedItem,$INFO[ListItem.Property(tmdb_id)],movieinformation)</onload>
		<onload condition="System.AddonIsEnabled(plugin.video.themoviedb.helper)">RunScript(plugin.video.themoviedb.helper,split_value=$INFO[ListItem.Genre],separator=' ',property=GenreSplit)</onload>
		<onload condition="System.AddonIsEnabled(plugin.video.themoviedb.helper) + String.IsEqual(ListItem.DBType,episode)">RunScript(plugin.video.themoviedb.helper,split_value=$INFO[ListItem.Writer],property=WriterSplit)</onload>
		<onload condition="System.AddonIsEnabled(plugin.video.themoviedb.helper) + String.Contains(ListItem.Path,themoviedb.helper)">RunScript(plugin.video.themoviedb.helper,split_value=$INFO[ListItem.Studio],property=StudioSplit)</onload>
		<onload>SetProperty(ResetScroll," ")</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,1,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true) + Window.IsVisible(videos)">SetProperty(ContainerPath_1,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true) + Window.IsVisible(home)">SetProperty(ContainerPath_1,HOME,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_2,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_3,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_4,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_5,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_6,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_7,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_8,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_9,movieinformation)</onload>
		<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_10,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_10)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_9)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_10,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_9)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_8)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_9,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_8)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_7)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_8,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_7)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_6)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_7,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_6)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_5)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_6,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_5)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_4)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_5,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_4)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_3)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_4,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_3)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_2)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_3,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_2)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_1)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_2,$INFO[Container.FolderPath],movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_2)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_1)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,2,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_3)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_2)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,3,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_4)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_3)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,4,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_5)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_4)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,5,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_6)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_5)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,6,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_7)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_6)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,7,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_8)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_7)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,8,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_9)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_8)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,9,movieinformation)</onload>
		<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_10)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_9)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,10,movieinformation)</onload>
		<onload condition="Integer.IsGreater(Container(3000).CurrentItem,1)">Control.Move(3000,$INFO[Container(3000).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3000).CurrentItem,1)">Control.Move(3000,1)</onload>
		<onload condition="Integer.IsGreater(Container(50).CurrentItem,1)">Control.Move(50,$INFO[Container(50).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(50).CurrentItem,1)">Control.Move(50,1)</onload>
		<onload condition="Integer.IsGreater(Container(3201).CurrentItem,1)">Control.Move(3201,$INFO[Container(3201).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3201).CurrentItem,1)">Control.Move(3201,1)</onload>
		<onload condition="Integer.IsGreater(Container(3202).CurrentItem,1)">Control.Move(3202,$INFO[Container(3202).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3202).CurrentItem,1)">Control.Move(3202,1)</onload>
		<onload condition="Integer.IsGreater(Container(3203).CurrentItem,1)">Control.Move(3203,$INFO[Container(3203).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3203).CurrentItem,1)">Control.Move(3203,1)</onload>
		<onload condition="Integer.IsGreater(Container(3204).CurrentItem,1)">Control.Move(3204,$INFO[Container(3204).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3204).CurrentItem,1)">Control.Move(3204,1)</onload>
		<onload condition="Integer.IsGreater(Container(3205).CurrentItem,1)">Control.Move(3205,$INFO[Container(3205).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3205).CurrentItem,1)">Control.Move(3205,1)</onload>
		<onload condition="Integer.IsGreater(Container(3206).CurrentItem,1)">Control.Move(3206,$INFO[Container(3206).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3206).CurrentItem,1)">Control.Move(3206,1)</onload>
		<onload condition="Integer.IsGreater(Container(3207).CurrentItem,1)">Control.Move(3208,$INFO[Container(3207).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3207).CurrentItem,1)">Control.Move(3208,1)</onload>
		<onload condition="Integer.IsGreater(Container(3208).CurrentItem,1)">Control.Move(8080,$INFO[Container(3208).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3208).CurrentItem,1)">Control.Move(8080,1)</onload>
		<onload condition="Integer.IsGreater(Container(3209).CurrentItem,1)">Control.Move(3209,$INFO[Container(3209).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3209).CurrentItem,1)">Control.Move(3209,1)</onload>
		<onload condition="String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(SentFromInfo,movieinformation)</onload>
		<onload condition="String.IsEqual(window(movieinformation).property(Refresh),true)">ClearProperty(Refresh,movieinformation)</onload>
		<onload condition="String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true)">ClearProperty(Breadcrumb_GoToPrevious,movieinformation)</onload>
		<onload condition="String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true)">ClearProperty(Breadcrumb_GoToNext,movieinformation)</onload>
		<onload condition="String.IsEqual(ListItem.DBType,tvshow) + String.IsEmpty(window(movieinformation).property(TVShowPath))">SetProperty(TVShowPath,videodb://tvshows/titles/$INFO[ListItem.DBID]/,movieinformation)</onload>
		<onunload condition="!String.IsEmpty(window(movieinformation).property(TVShowPath))">ClearProperty(TVShowPath,movieinformation)</onunload>
		<onunload>ClearProperty(GenreSplit.0,home)</onunload>
		<onunload>ClearProperty(WriterSplit.0,home)</onunload>
		<onunload>ClearProperty(WriterSplit.1,home)</onunload>
		<onunload>ClearProperty(StudioSplit.0,home)</onunload>
	</include>

	<include name="musicinformation_OnLoadUnload">
		<onload condition="System.AddonIsEnabled(plugin.video.themoviedb.helper)">RunScript(plugin.video.themoviedb.helper,split_value=$INFO[ListItem.Genre],separator='/',property=GenreSplit)</onload>
		<onload condition="String.IsEqual(ListItem.DBType,artist)">SetProperty(Info_Type,artist,musicinformation)</onload>
		<onload condition="String.IsEqual(ListItem.DBType,album)">SetProperty(Info_Type,album,musicinformation)</onload>
		<onload>SetProperty(ArtistDBID,$INFO[ListItem.DBID],musicinformation)</onload>
		<onload>SetProperty(ResetScroll," ")</onload>
		<onload condition="Integer.IsGreater(Container(3000).CurrentItem,1)">Control.Move(3000,$INFO[Container(3000).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3000).CurrentItem,1)">Control.Move(3000,1)</onload>
		<onload condition="Integer.IsGreater(Container(50).CurrentItem,1)">Control.Move(50,$INFO[Container(50).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(50).CurrentItem,1)">Control.Move(50,1)</onload>
		<onload condition="Integer.IsGreater(Container(3201).CurrentItem,1)">Control.Move(3201,$INFO[Container(3201).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3201).CurrentItem,1)">Control.Move(3201,1)</onload>
		<onload condition="Integer.IsGreater(Container(3202).CurrentItem,1)">Control.Move(3202,$INFO[Container(3202).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3202).CurrentItem,1)">Control.Move(3202,1)</onload>
		<onload condition="Integer.IsGreater(Container(3203).CurrentItem,1)">Control.Move(3203,$INFO[Container(3203).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3203).CurrentItem,1)">Control.Move(3203,1)</onload>
		<onload condition="Integer.IsGreater(Container(3204).CurrentItem,1)">Control.Move(3204,$INFO[Container(3204).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3204).CurrentItem,1)">Control.Move(3204,1)</onload>
		<onload condition="Integer.IsGreater(Container(3205).CurrentItem,1)">Control.Move(3205,$INFO[Container(3205).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3205).CurrentItem,1)">Control.Move(3205,1)</onload>
		<onload condition="Integer.IsGreater(Container(3206).CurrentItem,1)">Control.Move(3206,$INFO[Container(3206).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3206).CurrentItem,1)">Control.Move(3206,1)</onload>
		<onload condition="Integer.IsGreater(Container(3207).CurrentItem,1)">Control.Move(3208,$INFO[Container(3207).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3207).CurrentItem,1)">Control.Move(3208,1)</onload>
		<onload condition="Integer.IsGreater(Container(3208).CurrentItem,1)">Control.Move(8080,$INFO[Container(3208).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3208).CurrentItem,1)">Control.Move(8080,1)</onload>
		<onload condition="Integer.IsGreater(Container(3209).CurrentItem,1)">Control.Move(3209,$INFO[Container(3209).CurrentItem,-])</onload>
		<onload condition="Integer.IsGreater(Container(3209).CurrentItem,1)">Control.Move(3209,1)</onload>
		<onunload>ClearProperty(GenreSplit.0,home)</onunload>
	</include>

	<include name="skinsettings_OnLoadUnload">
		<include content="Object_Include" condition="Window.Is(interfacesettings)">
			<defaultcontrol always="true">3002</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(mediasettings)">
			<defaultcontrol always="true">3003</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(playersettings)">
			<defaultcontrol always="true">3004</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(systemsettings)">
			<defaultcontrol always="true">3005</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(servicesettings)">
			<defaultcontrol always="true">3006</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(gamesettings)">
			<defaultcontrol always="true">3007</defaultcontrol>
		</include>
		<include content="Object_Include" condition="Window.Is(pvrsettings)">
			<defaultcontrol always="true">3008</defaultcontrol>
		</include>
	</include>

</includes>
