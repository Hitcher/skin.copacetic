<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<!-- HEXES -->
	<!-- RGB -->
	<variable name="Dark_Hex">
		<value>000000</value>
	</variable>
	<variable name="White_Hex">
		<value>ffffff</value>
	</variable>
	<variable name="Light_Hex">
		<value>ebedee</value>
	</variable>
	<variable name="Accent_Hex">
		<value>ff5174</value>
	</variable>
	<variable name="Dark_Grey_Hex">
		<value>0f1415</value>
	</variable>
	<variable name="Light_Grey_Hex">
		<value>299498</value>
	</variable>
	<variable name="Unfocused_Grey_Hex">
		<value>68746D</value>
	</variable>
	<variable name="User_Rating_Hex">
		<value>ffed78</value>
	</variable>


	<!-- Alpha -->
	<variable name="Alpha_100">
		<value>ff</value>
	</variable>
	<variable name="Alpha_85">
		<value>d9</value>
	</variable>
	<variable name="Alpha_75">
		<value>bf</value>
	</variable>
	<variable name="Alpha_66">
		<value>aa</value>
	</variable>
	<variable name="Alpha_60">
		<value>99</value>
	</variable>
	<variable name="Alpha_50">
		<value>80</value>
	</variable>
	<variable name="Alpha_43">
		<value>6e</value>
	</variable>
	<variable name="Alpha_40">
		<value>66</value>
	</variable>
	<variable name="Alpha_33">
		<value>54</value>
	</variable>
	<variable name="Alpha_32">
		<value>52</value>
	</variable>
	<variable name="Alpha_25">
		<value>40</value>
	</variable>
	<variable name="Alpha_20">
		<value>33</value>
	</variable>
	<variable name="Alpha_15">
		<value>26</value>
	</variable>
	<variable name="Alpha_0">
		<value>01</value>
	</variable>


	<!-- Color diffuse brightness -->
	<variable name="Brightness_25">
		<value>$VAR[Alpha_100]404040</value>
	</variable>
	<variable name="Brightness_33">
		<value>$VAR[Alpha_100]555555</value>
	</variable>
	<variable name="Brightness_40">
		<value>$VAR[Alpha_100]666666</value>
	</variable>
	<variable name="Brightness_50">
		<value>$VAR[Alpha_100]808080</value>
	</variable>
	<variable name="Brightness_66">
		<value>$VAR[Alpha_100]aaaaaa</value>
	</variable>
	<variable name="Brightness_75">
		<value>$VAR[Alpha_100]c0c0c0</value>
	</variable>
	<variable name="Brightness_100">
		<value>$VAR[Alpha_100]ffffff</value>
	</variable>


	<!-- Opacity -->
	<variable name="Opacity_50">
		<value>$VAR[Alpha_50]$VAR[White_Hex]</value>
	</variable>
	<variable name="Opacity_60">
		<value>$VAR[Alpha_60]$VAR[White_Hex]</value>
	</variable>



	<!-- Color palette -->
	<variable name="Blank_Color">
		<value>$VAR[Alpha_0]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Dark_Color">
		<value>$VAR[Alpha_100]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Light_Color">
		<value>$VAR[Alpha_100]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Accent_Color">
		<value>$VAR[Alpha_100]$VAR[Accent_Hex]</value>
	</variable>
	<variable name="Dark_Grey_Color">
		<value>$VAR[Alpha_100]$VAR[Dark_Grey_Hex]</value>
	</variable>
	<variable name="Light_Grey_Color">
		<value>$VAR[Alpha_100]$VAR[Light_Grey_Hex]</value>
	</variable>
	<variable name="Unfocused_Grey_Color">
		<value>$VAR[Alpha_100]$VAR[Unfocused_Grey_Hex]</value>
	</variable>
	<variable name="User_Rating_Color">
		<value>$VAR[Alpha_100]$VAR[User_Rating_Hex]</value>
	</variable>
	<variable name="Test_Color">
		<value>$VAR[Alpha_50]$VAR[Accent_Hex]</value>
	</variable>


	<!-- Theme -->
	<variable name="Primary_Color">
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Secondary_Color">
		<value condition="Skin.String(Theme,Light)">$VAR[Light_Color]</value>
		<value>$VAR[Dark_Color]</value>
	</variable>
	<variable name="Unfocused_Color">
		<value>$VAR[Unfocused_Grey_Color]</value>
	</variable>
	<variable name="Invalid_Color">
		<value>$VAR[Alpha_50]$VAR[Unfocused_Grey_Hex]</value>
	</variable>
	<variable name="Disabled_Color">
		<value>$VAR[Alpha_50]$VAR[Unfocused_Grey_Hex]</value>
	</variable>



	<!-- Scenarios  -->
	<variable name="Home_Artwork_Diffuse">
		<value condition="Skin.HasSetting(Home_Screen_Opacity_50)">$VAR[Brightness_50]</value>
		<value condition="Skin.HasSetting(Home_Screen_Opacity_25)">$VAR[Brightness_25]</value>
		<value>$VAR[Brightness_33]</value>
	</variable>

	<variable name="Dialogs_Artwork_Diffuse">
		<value>$VAR[Brightness_50]</value>
	</variable>

	<variable name="GridView_Focused_Diffuse">
		<value condition="!$EXP[GridView_Details_Off] + !$EXP[GridView_Details_Breadcrumb]">$VAR[Brightness_33]</value>
		<value>$VAR[Brightness_100]</value>
	</variable>

	<variable name="Dropshadow_Diffuse">
		<value>$VAR[Alpha_100]$VAR[Dark_Hex]</value>
	</variable>

	<variable name="Watched_Dropshadow_Diffuse">
		<value condition="Skin.String(Theme,Light)">$VAR[Alpha_40]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_100]$VAR[Dark_Hex]</value>
	</variable>

	<variable name="Panel_Diffuse">
		<value condition="Window.IsVisible(loginscreen)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.Is(addonsettings)">$VAR[Alpha_75]$VAR[Dark_Grey_Hex]</value>
		<value condition="Window.IsVisible(addonbrowser) + Window.Is(filebrowser)">$VAR[Alpha_75]$VAR[Dark_Grey_Hex]</value>
		<value condition="Window.IsVisible(addonbrowser) + !Container.Content(addons)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.IsVisible(addonbrowser)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.Is(loginscreen)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.Is(movieinformation) | Window.Is(songinformation) | Window.Is(musicinformation) | Window.Is(addoninformation)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Alpha_75]$VAR[Dark_Grey_Hex]</value>
	</variable>

	<variable name="Artwork_Mask">
		<value condition="Window.IsVisible(visualisation)">$VAR[Alpha_75]$VAR[Dark_Hex]</value>
		<value condition="$EXP[GridView_IsVisible]">$VAR[Alpha_66]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_50]$VAR[Dark_Hex]</value>
	</variable>

	<variable name="Transparent_Dialog_Mask">
		<value condition="VideoPlayer.IsFullscreen">$VAR[Alpha_50]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value condition="$EXP[Background_IsFanart]">$VAR[Alpha_32]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_66]$VAR[Dark_Hex]</value>
	</variable>

	<variable name="List_Text_Color">
		<value condition="[Window.IsActive(home) + String.IsEmpty(window(home).property(HomeWidget))] | $EXP[Background_IsFanart] | $EXP[ListView_Display_IsThumbnails]">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>

	<variable name="Common_List_Info_Label_Color">
		<value condition="Control.HasFocus(4501)">$VAR[Light_Color]</value>
		<value>$VAR[Blank_Color]</value>
	</variable>


	<variable name="View_Furniture_Color">
		<value condition="[Window.IsActive(home) + String.IsEmpty(window(home).property(HomeWidget))] | $EXP[Background_IsFanart] | VideoPlayer.IsFullscreen">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>

	<variable name="Overlay_Text_Color">
		<value condition="Window.Is(pictureinfo)">$VAR[Primary_Color]</value>
		<value condition="Window.IsVisible(addonsettings)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(addonbrowser)">$VAR[Primary_Color]</value>
		<value condition="Window.IsVisible(home)">$VAR[Light_Color]</value>
		<value condition="$EXP[OpaqueDialog_IsVisible]">$VAR[Light_Color]</value>
		<value condition="$EXP[PanelDialog_IsVisible] + Window.IsVisible(movieinformation)">$VAR[Light_Color]</value>
		<value condition="$EXP[PanelDialog_IsVisible] + $EXP[InfoDialog_IsVisible]">$VAR[Primary_Color]</value>
		<value condition="$EXP[PanelDialog_IsVisible] + $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Plot_Color">
		<value condition="$EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Grey_Color]</value>
	</variable>

	<variable name="Shift_Key_Color">
		<value condition="!Control.HasFocus(302) + String.Contains(Control.GetLabel(302),*)">$VAR[Accent_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Caps_Key_Color">
		<value condition="!Control.HasFocus(303) + String.Contains(Control.GetLabel(303),*)">$VAR[Accent_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Symbols_Key_Color">
		<value condition="!Control.HasFocus(304) + String.Contains(Control.GetLabel(304),*)">$VAR[Accent_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>``

	<variable name="Light_Progress_Background_Color">
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>

	<variable name="Light_Progress_Focused_Color">
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Progress_Background_Color">
		<value condition="Skin.String(Theme,Light) + [$EXP[StripView_IsVisible] | [$EXP[ListView_Display_IsThumbnails] + !$EXP[Poster_Containers]] | Window.IsVisible(progressdialog) | Window.IsVisible(visualisation)]">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Light_Progress_Background_Color]</value>
	</variable>

	<variable name="Progress_Focused_Color">
		<value condition="Control.HasFocus(87)">$VAR[Accent_Color]</value>
		<value condition="Skin.String(Theme,Light) + [$EXP[StripView_IsVisible] | [$EXP[ListView_Display_IsThumbnails] + !$EXP[Poster_Containers]] | Window.IsVisible(progressdialog) | Window.IsVisible(visualisation)]">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Progress_Focused_Color]</value>
	</variable>

	<variable name="Star_Color">
		<value condition="!String.IsEmpty(ListItem.UserRating)">$VAR[User_Rating_Color]</value>
		<value>$VAR[Accent_Color]</value>
	</variable>

	<variable name="Unwatched_Indicator_Background_Color">
		<value condition="$EXP[GridView_IsVisible]">$VAR[Accent_Color]</value>
		<value condition="[$EXP[StripView_IsVisible] | [$EXP[ListView_IsVisible] + !$EXP[Poster_Containers]]] + Skin.String(Theme,Light)">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Unwatched_Indicator_Label_Color">
		<value condition="$EXP[GridView_IsVisible]">$VAR[Light_Color]</value>
		<value condition="[$EXP[StripView_IsVisible] | [$EXP[ListView_IsVisible] + !$EXP[Poster_Containers]]] + Skin.String(Theme,Light)">$VAR[Light_Color]</value>
		<value>$VAR[Dark_Color]</value>
	</variable>

	<variable name="Notification_Widget_Background_Color">
		<value condition="Player.HasAudio">$VAR[Dark_Color]</value>
		<value>$VAR[Dark_Grey_Color]</value>
	</variable>

	<variable name="DialogPictureInfo_Focused_Label_Color">
		<value condition="Control.HasFocus(5)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="Volume_Focus_Color">
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Billboard view visible -->
		<value condition="$EXP[InfoDialog_IsVisible] + String.IsEqual(Window(home).Property(HomeWidget),8050)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Light_Color]</value>
		<!-- Home widgets -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Dark_Grey_Color]</value>
		<!-- Views -->
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off] + String.IsEmpty(Window(home).Property(Next_Art))">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_Display_IsPosters] + !$EXP[ShowcaseView_Details_Off] + $EXP[Music_Player_IsVisible]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + !$EXP[ShowcaseView_Details_Off]">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Volume_Background_Color">
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<!-- Info Dialog visible, Billboard view visible -->
		<value condition="$EXP[InfoDialog_IsVisible] + String.IsEqual(Window(home).Property(HomeWidget),8050)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<!-- Home widgets -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<!-- Views -->
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off] + String.IsEmpty(Window(home).Property(Next_Art))">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_Display_IsPosters] + !$EXP[ShowcaseView_Details_Off] + $EXP[Music_Player_IsVisible]">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + !$EXP[ShowcaseView_Details_Off]">$VAR[Alpha_15]$VAR[Dark_Grey_Hex]</value>
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>

	<variable name="Notification_Icon_Color">
		<value condition="Window.IsActive(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Billboard view visible -->
		<value condition="$EXP[InfoDialog_IsVisible] + String.IsEqual(Window(home).Property(HomeWidget),8050)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Light_Color]</value>
		<!-- Home widgets -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.IsVisible(home)">$VAR[Light_Color]</value>
		<!-- Fullscreen video -->
		<value condition="VideoPlayer.IsFullscreen">$VAR[Light_Color]</value>
		<!-- Views -->
		<value condition="[Window.IsVisible(volumebar) | $EXP[Music_Player_IsVisible]] + $EXP[ShowcaseView_Display_IsPosters] + !$EXP[ShowcaseView_Details_Off]">$VAR[Light_Color]</value>
		<value condition="[Window.IsVisible(volumebar) | $EXP[Music_Player_IsVisible]] + [$EXP[ListView_IsVisible] | $EXP[StripView_IsVisible] | $EXP[GridView_IsVisible]]">$VAR[Light_Color]</value>
		<value condition="$EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Notification_Widget_Label_Color">
		<value condition="Window.IsActive(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Billboard view visible -->
		<value condition="$EXP[InfoDialog_IsVisible] + String.IsEqual(Window(home).Property(HomeWidget),8050)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Light_Color]</value>
		<!-- Home widgets -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.IsVisible(home)">$VAR[Light_Color]</value>
		<!-- Fullscreen video -->
		<value condition="VideoPlayer.IsFullscreen">$VAR[Light_Color]</value>
		<!-- Views -->
		<value condition="Window.IsVisible(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off] + String.IsEmpty(Window(home).Property(Next_Art))">$VAR[Dark_Grey_Color]</value>
		<value condition="$EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Breadcrumb_Label_Color">
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511]) + !$EXP[PanelDialog_IsVisible]">$VAR[Dark_Color]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511]) + !$EXP[PanelDialog_IsVisible]">$VAR[Dark_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Dark_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<value condition="$EXP[InfoWidget_Display_IsBillboardView] | $EXP[InfoWidget_Display_IsShowcaseView]">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[Dark_Color]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Light_Color]</value>
		<!-- Home widgets -->
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget1_View_Billboard) | Skin.HasSetting(Widget1_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget2_View_Billboard) | Skin.HasSetting(Widget2_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget3_View_Billboard) | Skin.HasSetting(Widget3_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget4_View_Billboard) | Skin.HasSetting(Widget4_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget5_View_Billboard) | Skin.HasSetting(Widget5_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget6_View_Billboard) | Skin.HasSetting(Widget6_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget7_View_Billboard) | Skin.HasSetting(Widget7_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget8_View_Billboard) | Skin.HasSetting(Widget8_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget9_View_Billboard) | Skin.HasSetting(Widget9_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>

	<variable name="Settings_Grouplist_Label_Color">
		<!-- smartplaylisteditor -->
		<value condition="Window.Is(smartplaylisteditor) + String.IsEqual(Container(100).CurrentItem,-1) + !ControlGroup(9000).HasFocus">$VAR[Light_Color]</value>
		<!-- addonsettings -->
		<value condition="Window.Is(addonsettings) + String.IsEqual(Container(5).CurrentItem,-1) + !ControlGroup(9000).HasFocus">$VAR[Light_Color]</value>
		<!-- pictureinfo -->
		<value condition="Window.Is(pictureinfo) + Control.HasFocus(5)">$VAR[Light_Color]</value>
		<!-- profiles -->
		<value condition="Window.Is(profiles) + Control.HasFocus(2)">$VAR[Light_Color]</value>
		<!-- systeminfo -->
		<value condition="Window.Is(systeminfo) + ControlGroup(50).HasFocus">$VAR[Light_Color]</value>
		<!-- SettingsCategory.xml -->
		<value condition="!Window.Is(addonsettings) + String.IsEqual(Container(5).CurrentItem,-1) + !ControlGroup(30000).HasFocus + !Control.HasFocus(20) + !Control.HasFocus(9001)">$VAR[Light_Color]</value>
		<!-- script-skinshortcuts.xml -->
		<value condition="Control.HasFocus(211) | Control.HasFocus(301) | Control.HasFocus(303) | Control.HasFocus(304) | Control.HasFocus(302)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="Skinsettings_Widget_SortOrder_Label">
		<value condition="Control.HasFocus(12014)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12114)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12214)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12314)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12414)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12514)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12614)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12714)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12814)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(12914)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="Left_Grouplist_Focus_Color">
		<value condition="Window.Is(filemanager) + Control.HasFocus(20)">$VAR[Light_Color]</value>
		<value condition="Window.Is(musicplaylisteditor) + Control.HasFocus(50)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="Right_Grouplist_Focus_Color">
		<value condition="Window.Is(filemanager) + Control.HasFocus(21)">$VAR[Light_Color]</value>
		<value condition="Window.Is(musicplaylisteditor) + Control.HasFocus(100)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="Privacy_Policy_Color">
		<value condition="Control.HasFocus(61)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>



	<variable name="Settings_Disabled_Unfocused_Color">
		<value>$VAR[Dark_Color]</value>
	</variable>
	<variable name="Settings_Disabled_Focused_Color">
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="DialogSubtitles_Left_Label_Focused_Color">
		<value condition="Control.HasFocus(150)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="DialogSubtitles_Right_Label_Focused_Color">
		<value condition="Control.HasFocus(120)">$VAR[Light_Color]</value>
		<value>$VAR[Unfocused_Color]</value>
	</variable>

	<variable name="List_Scroll_Background_Color">
		<value condition="$EXP[Background_IsFanart]">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>

	<variable name="List_Scroll_Focused_Color">
			<value condition="Control.HasFocus(9000) | $EXP[Music_Player_HasFocus] | $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>

	<variable name="SortLetter_Background_Color">
		<value condition="Control.HasFocus(63) + $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(63) + Skin.String(Theme,Light)">$VAR[Dark_Color]</value>
		<value condition="Control.HasFocus(63)">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Accent_Color]</value>
		<value>$VAR[Dark_Grey_Color]</value>
	</variable>

	<variable name="SortLetter_Label_Color">
		<value condition="Control.HasFocus(63) + $EXP[Background_IsFanart]">$VAR[Dark_Color]</value>
		<value condition="Control.HasFocus(63) + Skin.String(Theme,Light)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(63)">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>


	<variable name="Scroll_Background_Color">
		<value condition="ControlGroup(65000).HasFocus + [Window.Is(movieinformation) | String.IsEqual(ListItem.DBType,artist)] + !Control.HasFocus(10)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="ControlGroup(65000).HasFocus + String.IsEqual(ListItem.DBType,album) + Control.HasFocus(12)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="$EXP[InfoDialog_IsVisible] + Control.HasFocus(60) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,song)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8010).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8010).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8010).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8010).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8010).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8010).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8020).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8020).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8020).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8020).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8020).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8020).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(50).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Window.IsVisible(addoninformation) + Control.HasFocus(50) + !String.IsEmpty(Container(50).ListItemNoWrap(1).Art(thumb))">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(50).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8030).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8030).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8030).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8030).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8030).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8030).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8040).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8040).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8040).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8040).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8040).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8040).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8050).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8050).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8050).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8050).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8050).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8050).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8060).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8060).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8060).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8060).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8060).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8060).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8070).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8070).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8070).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8070).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8070).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8070).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8080).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8080).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8080).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8080).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8080).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8080).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8090).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8090).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8090).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8090).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8090).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8090).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9000) | $EXP[Music_Player_HasFocus] | $EXP[Background_IsFanart]">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.String(Theme,Light) + Skin.HasSetting(Widget1_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Posters) + !String.IsEmpty(Container(9010).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Square) + !String.IsEmpty(Container(9010).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Fanart) + !String.IsEmpty(Container(9010).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Posters) + !String.IsEmpty(Container(9010).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Square) + !String.IsEmpty(Container(9010).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Fanart) + !String.IsEmpty(Container(9010).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.String(Theme,Light) + Skin.HasSetting(Widget2_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Posters) + !String.IsEmpty(Container(9020).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Square) + !String.IsEmpty(Container(9020).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Fanart) + !String.IsEmpty(Container(9020).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Posters) + !String.IsEmpty(Container(9020).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Square) + !String.IsEmpty(Container(9020).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Fanart) + !String.IsEmpty(Container(9020).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.String(Theme,Light) + Skin.HasSetting(Widget3_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Posters) + !String.IsEmpty(Container(9030).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Square) + !String.IsEmpty(Container(9030).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Fanart) + !String.IsEmpty(Container(9030).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Posters) + !String.IsEmpty(Container(9030).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Square) + !String.IsEmpty(Container(9030).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Fanart) + !String.IsEmpty(Container(9030).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.String(Theme,Light) + Skin.HasSetting(Widget4_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Posters) + !String.IsEmpty(Container(9040).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Square) + !String.IsEmpty(Container(9040).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Fanart) + !String.IsEmpty(Container(9040).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Posters) + !String.IsEmpty(Container(9040).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Square) + !String.IsEmpty(Container(9040).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Fanart) + !String.IsEmpty(Container(9040).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.String(Theme,Light) + Skin.HasSetting(Widget5_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Posters) + !String.IsEmpty(Container(9050).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Square) + !String.IsEmpty(Container(9050).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Fanart) + !String.IsEmpty(Container(9050).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Posters) + !String.IsEmpty(Container(9050).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Square) + !String.IsEmpty(Container(9050).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Fanart) + !String.IsEmpty(Container(9050).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.String(Theme,Light) + Skin.HasSetting(Widget6_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Posters) + !String.IsEmpty(Container(9060).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Square) + !String.IsEmpty(Container(9060).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Fanart) + !String.IsEmpty(Container(9060).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Posters) + !String.IsEmpty(Container(9060).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Square) + !String.IsEmpty(Container(9060).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Fanart) + !String.IsEmpty(Container(9060).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.String(Theme,Light) + Skin.HasSetting(Widget7_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Posters) + !String.IsEmpty(Container(9070).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Square) + !String.IsEmpty(Container(9070).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Fanart) + !String.IsEmpty(Container(9070).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Posters) + !String.IsEmpty(Container(9070).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Square) + !String.IsEmpty(Container(9070).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Fanart) + !String.IsEmpty(Container(9070).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.String(Theme,Light) + Skin.HasSetting(Widget8_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Posters) + !String.IsEmpty(Container(9080).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Square) + !String.IsEmpty(Container(9080).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Fanart) + !String.IsEmpty(Container(9080).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Posters) + !String.IsEmpty(Container(9080).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Square) + !String.IsEmpty(Container(9080).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Fanart) + !String.IsEmpty(Container(9080).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.String(Theme,Light) + Skin.HasSetting(Widget9_View_Showcase)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Posters) + !String.IsEmpty(Container(9090).ListItemNoWrap(2).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Square) + !String.IsEmpty(Container(9090).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Fanart) + !String.IsEmpty(Container(9090).ListItemNoWrap(1).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Posters) + !String.IsEmpty(Container(9090).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Square) + !String.IsEmpty(Container(9090).ListItemNoWrap(5).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Fanart) + !String.IsEmpty(Container(9090).ListItemNoWrap(3).Label)">$VAR[Alpha_15]$VAR[Light_Hex]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Alpha_15]$VAR[Dark_Hex]</value>
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>

	<variable name="Scroll_Focused_Color">
		<value condition="Window.Is(addonsettings)">$VAR[Unfocused_Color]</value>
		<value condition="ControlGroup(65000).HasFocus + [Window.Is(movieinformation) | String.IsEqual(ListItem.DBType,artist)] + !Control.HasFocus(10)">$VAR[Light_Color]</value>
		<value condition="ControlGroup(65000).HasFocus + String.IsEqual(ListItem.DBType,album) + Control.HasFocus(12)">$VAR[Light_Color]</value>
		<value condition="$EXP[InfoDialog_IsVisible] + Control.HasFocus(60) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,song)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8010).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8010).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8010).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8010).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8010).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8010).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8020).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8020).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8020).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8020).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8020).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8020).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(50).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(addoninformation) + Control.HasFocus(50) + !String.IsEmpty(Container(50).ListItemNoWrap(1).Art(thumb))">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(50).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8030).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8030).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8030).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8030).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8030).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8030).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8040).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8040).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8040).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8040).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8040).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8040).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8050).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8050).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8050).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8050).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8050).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8050).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8060).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8060).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8060).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8060).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8060).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8060).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8070).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8070).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8070).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8070).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8070).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8070).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8080).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8080).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8080).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8080).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8080).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8080).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8090).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8090).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8090).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8090).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8090).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8090).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9000) | $EXP[Music_Player_HasFocus] | $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.String(Theme,Light) + Skin.HasSetting(Widget1_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Posters) + !String.IsEmpty(Container(9010).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Square) + !String.IsEmpty(Container(9010).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Fanart) + !String.IsEmpty(Container(9010).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Posters) + !String.IsEmpty(Container(9010).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Square) + !String.IsEmpty(Container(9010).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Fanart) + !String.IsEmpty(Container(9010).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.String(Theme,Light) + Skin.HasSetting(Widget2_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Posters) + !String.IsEmpty(Container(9020).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Square) + !String.IsEmpty(Container(9020).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Fanart) + !String.IsEmpty(Container(9020).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Posters) + !String.IsEmpty(Container(9020).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Square) + !String.IsEmpty(Container(9020).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Fanart) + !String.IsEmpty(Container(9020).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.String(Theme,Light) + Skin.HasSetting(Widget3_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Posters) + !String.IsEmpty(Container(9030).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Square) + !String.IsEmpty(Container(9030).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Fanart) + !String.IsEmpty(Container(9030).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Posters) + !String.IsEmpty(Container(9030).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Square) + !String.IsEmpty(Container(9030).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Fanart) + !String.IsEmpty(Container(9030).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.String(Theme,Light) + Skin.HasSetting(Widget4_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Posters) + !String.IsEmpty(Container(9040).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Square) + !String.IsEmpty(Container(9040).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Fanart) + !String.IsEmpty(Container(9040).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Posters) + !String.IsEmpty(Container(9040).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Square) + !String.IsEmpty(Container(9040).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Fanart) + !String.IsEmpty(Container(9040).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.String(Theme,Light) + Skin.HasSetting(Widget5_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Posters) + !String.IsEmpty(Container(9050).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Square) + !String.IsEmpty(Container(9050).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Fanart) + !String.IsEmpty(Container(9050).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Posters) + !String.IsEmpty(Container(9050).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Square) + !String.IsEmpty(Container(9050).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Fanart) + !String.IsEmpty(Container(9050).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.String(Theme,Light) + Skin.HasSetting(Widget6_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Posters) + !String.IsEmpty(Container(9060).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Square) + !String.IsEmpty(Container(9060).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Fanart) + !String.IsEmpty(Container(9060).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Posters) + !String.IsEmpty(Container(9060).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Square) + !String.IsEmpty(Container(9060).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Fanart) + !String.IsEmpty(Container(9060).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.String(Theme,Light) + Skin.HasSetting(Widget7_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Posters) + !String.IsEmpty(Container(9070).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Square) + !String.IsEmpty(Container(9070).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Fanart) + !String.IsEmpty(Container(9070).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Posters) + !String.IsEmpty(Container(9070).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Square) + !String.IsEmpty(Container(9070).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Fanart) + !String.IsEmpty(Container(9070).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.String(Theme,Light) + Skin.HasSetting(Widget8_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Posters) + !String.IsEmpty(Container(9080).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Square) + !String.IsEmpty(Container(9080).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Fanart) + !String.IsEmpty(Container(9080).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Posters) + !String.IsEmpty(Container(9080).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Square) + !String.IsEmpty(Container(9080).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Fanart) + !String.IsEmpty(Container(9080).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.String(Theme,Light) + Skin.HasSetting(Widget9_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Posters) + !String.IsEmpty(Container(9090).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Square) + !String.IsEmpty(Container(9090).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Fanart) + !String.IsEmpty(Container(9090).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Posters) + !String.IsEmpty(Container(9090).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Square) + !String.IsEmpty(Container(9090).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Fanart) + !String.IsEmpty(Container(9090).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>



	<variable name="DialogSlider_Bar_Color">
		<value>$VAR[Alpha_15]$VAR[Light_Hex]</value>
	</variable>





	<!-- OLD -->
	<variable name="BackgroundColor">
		<value>$VAR[Accent_Color]</value>
	</variable>
	<variable name="DiffuseColor">
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="TextColor">
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="FocusedColor">
		<value>ff46ef75</value>
	</variable>
	<variable name="UnFocusedColor">
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="SelectedColor">
		<value>ff46ef75</value>
	</variable>
	<variable name="DisabledColor">
		<value>$VAR[Primary_Color]</value>
	</variable>
</includes>
