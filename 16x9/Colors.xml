<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<!--HEX Codes-->
	<variable name="Dark_Hex">
		<value>000000</value>
	</variable>
	<variable name="White_Hex">
		<value>ffffff</value>
	</variable>
	<variable name="Light_Hex">
		<value>ebedee</value>
	</variable>
	<variable name="Accent_Hex">
		<value>ff5174</value>
	</variable>
	<variable name="Dark_Grey_Hex">
		<value>0f1415</value>
	</variable>
	<variable name="Light_Grey_Hex">
		<value>299498</value>
	</variable>
	<variable name="User_Rating_Hex">
		<value>ffed78</value>
	</variable>

	<!--OPACITY Codes-->
	<variable name="100_Opacity">
		<value>ff</value>
	</variable>
	<variable name="85_Opacity">
		<value>d9</value>
	</variable>
	<variable name="75_Opacity">
		<value>bf</value>
	</variable>
	<variable name="66_Opacity">
		<value>aa</value>
	</variable>
	<variable name="60_Opacity">
		<value>99</value>
	</variable>
	<variable name="50_Opacity">
		<value>80</value>
	</variable>
	<variable name="43_Opacity">
		<value>6e</value>
	</variable>
	<variable name="40_Opacity">
		<value>66</value>
	</variable>
	<variable name="33_Opacity">
		<value>54</value>
	</variable>
	<variable name="32_Opacity">
		<value>52</value>
	</variable>
	<variable name="25_Opacity">
		<value>40</value>
	</variable>
	<variable name="20_Opacity">
		<value>33</value>
	</variable>
	<variable name="15_Opacity">
		<value>26</value>
	</variable>
	<variable name="10_Opacity">
		<value>1a</value>
	</variable>
	<variable name="0_Opacity">
		<value>01</value>
	</variable>

	<!--PALETTE-->
	<variable name="Blank_Color">
		<value>$VAR[0_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Dark_Color">
		<value>$VAR[100_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Light_Color">
		<value>$VAR[100_Opacity]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Accent_Color">
		<value>$VAR[100_Opacity]$VAR[Accent_Hex]</value>
	</variable>
	<variable name="Dark_Grey_Color">
		<value>$VAR[100_Opacity]$VAR[Dark_Grey_Hex]</value>
	</variable>
	<variable name="Light_Grey_Color">
		<value>$VAR[100_Opacity]$VAR[Light_Grey_Hex]</value>
	</variable>
	<variable name="User_Rating_Color">
		<value>$VAR[100_Opacity]$VAR[User_Rating_Hex]</value>
	</variable>
	<variable name="Test_Color">
		<value>$VAR[50_Opacity]$VAR[Accent_Hex]</value>
	</variable>

	<!--Night/Light theme-->
	<variable name="Primary_Color">
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>
	<variable name="Secondary_Color">
		<value condition="Skin.String(Theme,Light)">$VAR[Light_Color]</value>
		<value>$VAR[Dark_Color]</value>
	</variable>

	<!--DIFFUSES (% transparency of the element) and MASKS (% transparency of the overlay)-->
	<variable name="Home_Artwork_Diffuse">
		<value>$VAR[33_Opacity]$VAR[White_Hex]</value>
	</variable>
	<variable name="Dialogs_Artwork_Diffuse">
		<value>$VAR[50_Opacity]$VAR[White_Hex]</value>
	</variable>
	<variable name="Info_Artwork_Diffuse">
		<value>$VAR[25_Opacity]$VAR[White_Hex]</value>
	</variable>
	<variable name="Info_Plot_Artwork_Diffuse">
		<value>$VAR[10_Opacity]$VAR[White_Hex]</value>
	</variable>
	<variable name="Panel_Diffuse">
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[75_Opacity]$VAR[Dark_Grey_Hex]</value>
	</variable>
	<variable name="Artwork_Mask">
		<value condition="Window.IsVisible(visualisation)">$VAR[75_Opacity]$VAR[Dark_Hex]</value>
		<value condition="$EXP[GridView_IsVisible]">$VAR[66_Opacity]$VAR[Dark_Hex]</value>
		<value>$VAR[50_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Now_Playing_Mask">
		<value>$VAR[66_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Plot_Dialog_Mask">
		<value>$VAR[85_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Unwatched_Artwork_Mask">
		<value condition="Skin.String(Theme,Light)">$VAR[40_Opacity]$VAR[White_Hex]</value>
		<value>$VAR[50_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Transparent_Dialog_Mask">
		<value condition="VideoPlayer.IsFullscreen">$VAR[50_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Window.IsActive(home) + Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value condition="$EXP[Background_IsFanart]">$VAR[32_Opacity]$VAR[Dark_Hex]</value>
		<value>$VAR[66_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Artwork_Dropshadow">
		<value>$VAR[100_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Home_Dropshadow">
		<value>$VAR[50_Opacity]$VAR[Dark_Hex]</value>
	</variable>
	<variable name="Artwork_Watched_Dropshadow">
		<value condition="Skin.String(Theme,Light)">$VAR[40_Opacity]$VAR[Dark_Hex]</value>
		<value>$VAR[100_Opacity]$VAR[Dark_Hex]</value>
	</variable>

	<!--SPECIFICS-->
	<variable name="List_Text_Color">
		<value condition="[Window.IsActive(home) + String.IsEmpty(window(home).property(HomeWidget))] | $EXP[Background_IsFanart] | $EXP[ListView_Display_IsThumbnails]">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>

	<variable name="View_Furniture_Color">
		<value condition="[Window.IsActive(home) + String.IsEmpty(window(home).property(HomeWidget))] | $EXP[Background_IsFanart] | VideoPlayer.IsFullscreen">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>

	<variable name="Overlay_Text_Color">
		<value condition="Window.IsActive(home)">$VAR[Light_Color]</value>
		<value condition="$EXP[OpaqueDialog_IsVisible]">$VAR[Light_Color]</value>
		<value condition="$EXP[PanelDialog_IsVisible] + $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>

	<variable name="Edit_Color">
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Plot_Color">
		<value condition="$EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Grey_Color]</value>
	</variable>

	<variable name="Light_Progress_Background_Color">
		<value>$VAR[10_Opacity]$VAR[Light_Hex]</value>
	</variable>

	<variable name="Light_Progress_Focused_Color">
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Progress_Background_Color">
		<value condition="Skin.String(Theme,Light) + [$EXP[StripView_IsVisible] | [$EXP[ListView_Display_IsThumbnails] + !$EXP[Poster_Containers]] | Window.IsVisible(progressdialog) | Window.IsVisible(visualisation)]">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value>$VAR[Light_Progress_Background_Color]</value>
	</variable>

	<variable name="Progress_Focused_Color">
		<value condition="Skin.String(Theme,Light) + [$EXP[StripView_IsVisible] | [$EXP[ListView_Display_IsThumbnails] + !$EXP[Poster_Containers]] | Window.IsVisible(progressdialog) | Window.IsVisible(visualisation)]">$VAR[Dark_Color]</value>
		<value>$VAR[Light_Progress_Focused_Color]</value>
	</variable>

	<variable name="Star_Color">
		<value condition="!String.IsEmpty(ListItem.UserRating)">$VAR[User_Rating_Color]</value>
		<value>$VAR[Accent_Color]</value>
	</variable>

	<variable name="Notification_Widget_Background_Color">
		<value condition="Player.HasAudio">$VAR[Dark_Color]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ListView_Display_IsThumbnails]">$VAR[Accent_Color]</value>
		<value>$VAR[Dark_Grey_Color]</value>
	</variable>

	<variable name="Volume_Focus_Color">
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Billboard view visible -->
		<value condition="$EXP[InfoDialog_IsVisible] + String.IsEqual(Window(home).Property(HomeWidget),8050)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Light_Color]</value>
		<!-- Home widgets -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Dark_Grey_Color]</value>
		<!-- Views -->
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off] + String.IsEmpty(Window(home).Property(Next_Art))">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_Display_IsPosters] + !$EXP[ShowcaseView_Details_Off] + $EXP[Music_Player_IsVisible]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + !$EXP[ShowcaseView_Details_Off]">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Volume_Background_Color">
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<!-- Info Dialog visible, Billboard view visible -->
		<value condition="$EXP[InfoDialog_IsVisible] + String.IsEqual(Window(home).Property(HomeWidget),8050)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<!-- Home widgets -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<!-- Views -->
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off] + String.IsEmpty(Window(home).Property(Next_Art))">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_Display_IsPosters] + !$EXP[ShowcaseView_Details_Off] + $EXP[Music_Player_IsVisible]">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + !$EXP[ShowcaseView_Details_Off]">$VAR[10_Opacity]$VAR[Dark_Grey_Hex]</value>
		<value>$VAR[10_Opacity]$VAR[Light_Hex]</value>
	</variable>

	<variable name="Notification_Icon_Color">
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Billboard view visible -->
		<value condition="$EXP[InfoDialog_IsVisible] + String.IsEqual(Window(home).Property(HomeWidget),8050)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Light_Color]</value>
		<!-- Home widgets -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Dark_Grey_Color]</value>
		<!-- Views -->
		<value condition="[Window.IsVisible(volumebar) | $EXP[Music_Player_IsVisible]] + $EXP[ShowcaseView_Display_IsPosters] + !$EXP[ShowcaseView_Details_Off]">$VAR[Light_Color]</value>
		<value condition="[Window.IsVisible(volumebar) | $EXP[Music_Player_IsVisible]] + [$EXP[ListView_IsVisible] | $EXP[StripView_IsVisible] | $EXP[GridView_IsVisible]]">$VAR[Light_Color]</value>
		<value condition="$EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Notification_Widget_Label_Color">
		<!-- Movie information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(movieinformation) + String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Movie information visible / main menu focused -->
		<value condition="Window.IsVisible(movieinformation) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / Choose Art focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511])">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),artist) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Album information visible / Artist information focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[21891])">$VAR[Light_Color]</value>
		<!-- Artist information visible / Light theme / main menu focused -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Dark_Grey_Color]</value>
		<!-- Artist information visible / main menu focused -->
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(Window(musicinformation).Property(Info_Type),album) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),False)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Billboard view visible -->
		<value condition="$EXP[InfoDialog_IsVisible] + String.IsEqual(Window(home).Property(HomeWidget),8050)">$VAR[Light_Color]</value>
		<!-- Info Dialog visible, Light Theme -->
		<value condition="$EXP[InfoDialog_IsVisible] + Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<!-- Info visible -->
		<value condition="$EXP[InfoDialog_IsVisible]">$VAR[Light_Color]</value>
		<!-- Home widgets -->
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget1_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget2_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget3_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget4_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget5_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget6_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget7_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget8_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Dark_Grey_Color]</value>
		<value condition="Skin.String(Theme,Light) + Window.IsVisible(home) + !Skin.HasSetting(Widget9_View_Billboard) + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Dark_Grey_Color]</value>
		<value condition="Window.IsVisible(home)">$VAR[Light_Color]</value>
		<!-- Views -->
		<value condition="Window.IsVisible(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light) + $EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off] + String.IsEmpty(Window(home).Property(Next_Art))">$VAR[10_Opacity]$VAR[Dark_Grey_Color]</value>
		<value condition="$EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[Dark_Grey_Color]</value>
		<value>$VAR[Light_Color]</value>
	</variable>

	<variable name="Breadcrumb_Label_Color">
		<value condition="$EXP[InfoDialog_IsVisible] + !$EXP[InfoWidget_HasFocus] + !String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511]) + !String.IsEqual(Window(musicinformation).Property(Focused_Button),$LOCALIZE[13511]) + !Window.IsVisible(songinformation) + ![Window.IsVisible(musicinformation) + String.IsEqual(ListItem.DBType,album) + !Control.HasFocus(12)] + !Window.IsVisible(addoninformation)">$VAR[Light_Color]</value>
		<value condition="$EXP[InfoDialog_IsVisible] + Control.HasFocus(60) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,song)">$VAR[Light_Color]</value>
		<value condition="$EXP[InfoWidget_Display_IsBillboardView] | $EXP[InfoWidget_Display_IsShowcaseView]">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget1_View_Billboard) | Skin.HasSetting(Widget1_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9010)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget2_View_Billboard) | Skin.HasSetting(Widget2_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9020)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget3_View_Billboard) | Skin.HasSetting(Widget3_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9030)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget4_View_Billboard) | Skin.HasSetting(Widget4_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9040)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget5_View_Billboard) | Skin.HasSetting(Widget5_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9050)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget6_View_Billboard) | Skin.HasSetting(Widget6_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9060)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget7_View_Billboard) | Skin.HasSetting(Widget7_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9070)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget8_View_Billboard) | Skin.HasSetting(Widget8_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9080)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(home) + [Skin.HasSetting(Widget9_View_Billboard) | Skin.HasSetting(Widget9_View_Showcase)] + String.IsEqual(window(home).property(HomeWidget),9090)">$VAR[Light_Color]</value>
		<value condition="Window.IsVisible(addonbrowser) + !Container.Content(addons)">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>

	<variable name="Settings_Unfocused_Color">
		<value>$VAR[33_Opacity]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Settings_Border">
		<value>$VAR[20_Opacity]$VAR[Light_Hex]</value>
	</variable>
	<variable name="Settings_Disabled_Unfocused_Color">
		<value>$VAR[Dark_Color]</value>
	</variable>
	<variable name="Settings_Disabled_Focused_Color">
		<value>$VAR[Dark_Color]</value>
	</variable>

	<variable name="Scroll_Background_Color">
		<value condition="ControlGroup(65000).HasFocus + [Window.Is(movieinformation) | String.IsEqual(ListItem.DBType,artist)] + !Control.HasFocus(10)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="ControlGroup(65000).HasFocus + String.IsEqual(ListItem.DBType,album) + Control.HasFocus(12)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="$EXP[InfoDialog_IsVisible] + Control.HasFocus(60) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,song)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8010).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8010).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8010).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8010).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8010).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8010).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8020).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8020).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8020).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8020).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8020).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8020).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(50).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(50).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8030).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8030).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8030).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8030).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8030).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8030).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8040).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8040).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8040).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8040).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8040).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8040).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8050).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8050).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8050).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8050).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8050).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8050).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8060).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8060).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8060).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8060).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8060).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8060).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8070).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8070).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8070).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8070).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8070).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8070).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8080).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8080).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8080).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8080).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8080).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8080).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8090).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8090).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8090).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8090).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8090).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8090).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9000) | Control.HasFocus(91100) | $EXP[Background_IsFanart]">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.String(Theme,Light) + Skin.HasSetting(Widget1_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Posters) + !String.IsEmpty(Container(9010).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Square) + !String.IsEmpty(Container(9010).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Fanart) + !String.IsEmpty(Container(9010).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Posters) + !String.IsEmpty(Container(9010).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Square) + !String.IsEmpty(Container(9010).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Fanart) + !String.IsEmpty(Container(9010).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.String(Theme,Light) + Skin.HasSetting(Widget2_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Posters) + !String.IsEmpty(Container(9020).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Square) + !String.IsEmpty(Container(9020).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Fanart) + !String.IsEmpty(Container(9020).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Posters) + !String.IsEmpty(Container(9020).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Square) + !String.IsEmpty(Container(9020).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Fanart) + !String.IsEmpty(Container(9020).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.String(Theme,Light) + Skin.HasSetting(Widget3_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Posters) + !String.IsEmpty(Container(9030).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Square) + !String.IsEmpty(Container(9030).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Fanart) + !String.IsEmpty(Container(9030).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Posters) + !String.IsEmpty(Container(9030).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Square) + !String.IsEmpty(Container(9030).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Fanart) + !String.IsEmpty(Container(9030).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.String(Theme,Light) + Skin.HasSetting(Widget4_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Posters) + !String.IsEmpty(Container(9040).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Square) + !String.IsEmpty(Container(9040).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Fanart) + !String.IsEmpty(Container(9040).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Posters) + !String.IsEmpty(Container(9040).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Square) + !String.IsEmpty(Container(9040).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Fanart) + !String.IsEmpty(Container(9040).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.String(Theme,Light) + Skin.HasSetting(Widget5_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Posters) + !String.IsEmpty(Container(9050).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Square) + !String.IsEmpty(Container(9050).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Fanart) + !String.IsEmpty(Container(9050).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Posters) + !String.IsEmpty(Container(9050).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Square) + !String.IsEmpty(Container(9050).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Fanart) + !String.IsEmpty(Container(9050).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.String(Theme,Light) + Skin.HasSetting(Widget6_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Posters) + !String.IsEmpty(Container(9060).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Square) + !String.IsEmpty(Container(9060).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Fanart) + !String.IsEmpty(Container(9060).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Posters) + !String.IsEmpty(Container(9060).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Square) + !String.IsEmpty(Container(9060).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Fanart) + !String.IsEmpty(Container(9060).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.String(Theme,Light) + Skin.HasSetting(Widget7_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Posters) + !String.IsEmpty(Container(9070).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Square) + !String.IsEmpty(Container(9070).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Fanart) + !String.IsEmpty(Container(9070).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Posters) + !String.IsEmpty(Container(9070).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Square) + !String.IsEmpty(Container(9070).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Fanart) + !String.IsEmpty(Container(9070).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.String(Theme,Light) + Skin.HasSetting(Widget8_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Posters) + !String.IsEmpty(Container(9080).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Square) + !String.IsEmpty(Container(9080).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Fanart) + !String.IsEmpty(Container(9080).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Posters) + !String.IsEmpty(Container(9080).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Square) + !String.IsEmpty(Container(9080).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Fanart) + !String.IsEmpty(Container(9080).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.String(Theme,Light) + Skin.HasSetting(Widget9_View_Showcase)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Posters) + !String.IsEmpty(Container(9090).ListItemNoWrap(2).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Square) + !String.IsEmpty(Container(9090).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Fanart) + !String.IsEmpty(Container(9090).ListItemNoWrap(1).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Posters) + !String.IsEmpty(Container(9090).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Square) + !String.IsEmpty(Container(9090).ListItemNoWrap(5).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Fanart) + !String.IsEmpty(Container(9090).ListItemNoWrap(3).Label)">$VAR[10_Opacity]$VAR[Light_Hex]</value>
		<value condition="Skin.String(Theme,Light)">$VAR[10_Opacity]$VAR[Dark_Hex]</value>
		<value>$VAR[10_Opacity]$VAR[Light_Hex]</value>
	</variable>

	<variable name="Scroll_Focused_Color">
		<value condition="ControlGroup(65000).HasFocus + [Window.Is(movieinformation) | String.IsEqual(ListItem.DBType,artist)] + !Control.HasFocus(10)">$VAR[Light_Color]</value>
		<value condition="ControlGroup(65000).HasFocus + String.IsEqual(ListItem.DBType,album) + Control.HasFocus(12)">$VAR[Light_Color]</value>
		<value condition="$EXP[InfoDialog_IsVisible] + Control.HasFocus(60) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,song)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8010).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8010).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8010).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8010).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8010).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8010) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8010).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8020).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8020).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8020).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8020).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8020).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8020) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8020).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(50).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(50).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(50).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(50) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(50).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8030).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8030).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8030).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8030).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8030).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8030) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8030).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8040).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8040).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8040).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8040).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8040).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8040) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8040).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8050).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8050).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8050).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8050).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8050).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8050) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8050).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8060).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8060).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8060).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8060).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8060).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8060) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8060).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8070).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8070).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8070).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8070).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8070).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8070) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8070).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8080).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8080).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8080).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8080).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8080).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8080) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8080).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Posters] + !String.IsEmpty(Container(8090).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Square] + !String.IsEmpty(Container(8090).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsStripView_Fanart] + !String.IsEmpty(Container(8090).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Posters] + !String.IsEmpty(Container(8090).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Square] + !String.IsEmpty(Container(8090).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(8090) + $EXP[InfoWidget_Display_IsGridView_Fanart] + !String.IsEmpty(Container(8090).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9000) | Control.HasFocus(91100) | $EXP[Background_IsFanart]">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.String(Theme,Light) + Skin.HasSetting(Widget1_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Posters) + !String.IsEmpty(Container(9010).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Square) + !String.IsEmpty(Container(9010).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Strip) + Skin.HasSetting(Widget1_Display_Fanart) + !String.IsEmpty(Container(9010).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Posters) + !String.IsEmpty(Container(9010).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Square) + !String.IsEmpty(Container(9010).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9010) + Skin.HasSetting(Widget1_View_Grid) + Skin.HasSetting(Widget1_Display_Fanart) + !String.IsEmpty(Container(9010).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.String(Theme,Light) + Skin.HasSetting(Widget2_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Posters) + !String.IsEmpty(Container(9020).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Square) + !String.IsEmpty(Container(9020).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Strip) + Skin.HasSetting(Widget2_Display_Fanart) + !String.IsEmpty(Container(9020).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Posters) + !String.IsEmpty(Container(9020).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Square) + !String.IsEmpty(Container(9020).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9020) + Skin.HasSetting(Widget2_View_Grid) + Skin.HasSetting(Widget2_Display_Fanart) + !String.IsEmpty(Container(9020).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.String(Theme,Light) + Skin.HasSetting(Widget3_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Posters) + !String.IsEmpty(Container(9030).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Square) + !String.IsEmpty(Container(9030).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Strip) + Skin.HasSetting(Widget3_Display_Fanart) + !String.IsEmpty(Container(9030).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Posters) + !String.IsEmpty(Container(9030).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Square) + !String.IsEmpty(Container(9030).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9030) + Skin.HasSetting(Widget3_View_Grid) + Skin.HasSetting(Widget3_Display_Fanart) + !String.IsEmpty(Container(9030).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.String(Theme,Light) + Skin.HasSetting(Widget4_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Posters) + !String.IsEmpty(Container(9040).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Square) + !String.IsEmpty(Container(9040).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Strip) + Skin.HasSetting(Widget4_Display_Fanart) + !String.IsEmpty(Container(9040).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Posters) + !String.IsEmpty(Container(9040).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Square) + !String.IsEmpty(Container(9040).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9040) + Skin.HasSetting(Widget4_View_Grid) + Skin.HasSetting(Widget4_Display_Fanart) + !String.IsEmpty(Container(9040).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.String(Theme,Light) + Skin.HasSetting(Widget5_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Posters) + !String.IsEmpty(Container(9050).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Square) + !String.IsEmpty(Container(9050).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Strip) + Skin.HasSetting(Widget5_Display_Fanart) + !String.IsEmpty(Container(9050).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Posters) + !String.IsEmpty(Container(9050).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Square) + !String.IsEmpty(Container(9050).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9050) + Skin.HasSetting(Widget5_View_Grid) + Skin.HasSetting(Widget5_Display_Fanart) + !String.IsEmpty(Container(9050).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.String(Theme,Light) + Skin.HasSetting(Widget6_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Posters) + !String.IsEmpty(Container(9060).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Square) + !String.IsEmpty(Container(9060).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Strip) + Skin.HasSetting(Widget6_Display_Fanart) + !String.IsEmpty(Container(9060).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Posters) + !String.IsEmpty(Container(9060).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Square) + !String.IsEmpty(Container(9060).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9060) + Skin.HasSetting(Widget6_View_Grid) + Skin.HasSetting(Widget6_Display_Fanart) + !String.IsEmpty(Container(9060).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.String(Theme,Light) + Skin.HasSetting(Widget7_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Posters) + !String.IsEmpty(Container(9070).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Square) + !String.IsEmpty(Container(9070).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Strip) + Skin.HasSetting(Widget7_Display_Fanart) + !String.IsEmpty(Container(9070).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Posters) + !String.IsEmpty(Container(9070).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Square) + !String.IsEmpty(Container(9070).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9070) + Skin.HasSetting(Widget7_View_Grid) + Skin.HasSetting(Widget7_Display_Fanart) + !String.IsEmpty(Container(9070).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.String(Theme,Light) + Skin.HasSetting(Widget8_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Posters) + !String.IsEmpty(Container(9080).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Square) + !String.IsEmpty(Container(9080).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Strip) + Skin.HasSetting(Widget8_Display_Fanart) + !String.IsEmpty(Container(9080).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Posters) + !String.IsEmpty(Container(9080).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Square) + !String.IsEmpty(Container(9080).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9080) + Skin.HasSetting(Widget8_View_Grid) + Skin.HasSetting(Widget8_Display_Fanart) + !String.IsEmpty(Container(9080).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.String(Theme,Light) + Skin.HasSetting(Widget9_View_Showcase)">$VAR[Dark_Grey_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Posters) + !String.IsEmpty(Container(9090).ListItemNoWrap(2).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Square) + !String.IsEmpty(Container(9090).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Strip) + Skin.HasSetting(Widget9_Display_Fanart) + !String.IsEmpty(Container(9090).ListItemNoWrap(1).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Posters) + !String.IsEmpty(Container(9090).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Square) + !String.IsEmpty(Container(9090).ListItemNoWrap(5).Label)">$VAR[Light_Color]</value>
		<value condition="Control.HasFocus(9090) + Skin.HasSetting(Widget9_View_Grid) + Skin.HasSetting(Widget9_Display_Fanart) + !String.IsEmpty(Container(9090).ListItemNoWrap(3).Label)">$VAR[Light_Color]</value>
		<value>$VAR[Primary_Color]</value>
	</variable>





	<!--OLD-->
	<variable name="BackgroundColor">
		<value>$VAR[Accent_Color]</value>
	</variable>
	<variable name="DiffuseColor">
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="TextColor">
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="FocusedColor">
		<value>ff46ef75</value>
	</variable>
	<variable name="UnFocusedColor">
		<value>$VAR[Primary_Color]</value>
	</variable>
	<variable name="SelectedColor">
		<value>ff46ef75</value>
	</variable>
	<variable name="DisabledColor">
		<value>$VAR[Primary_Color]</value>
	</variable>
</includes>
