<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- movieinformation -->
	<onload condition="!String.IsEmpty(Window(home).Property(InfoDialog_Transition))">ClearProperty(InfoDialog_Transition,home)</onload>
	<onload condition="!String.Contains(ListItem.Path,themoviedb.helper)">SetProperty(SelectedItem,$INFO[ListItem.DBID],movieinformation)</onload>
	<onload condition="String.Contains(ListItem.Path,themoviedb.helper)">SetProperty(SelectedItem,$INFO[ListItem.Property(tmdb_id)],movieinformation)</onload>
	<onload condition="System.HasAddon(plugin.video.themoviedb.helper)">RunScript(plugin.video.themoviedb.helper,split_value=$INFO[ListItem.Genre],separator=' ',property=GenreSplit)</onload>
	<onload condition="System.HasAddon(plugin.video.themoviedb.helper) + String.IsEqual(ListItem.DBType,episode)">RunScript(plugin.video.themoviedb.helper,split_value=$INFO[ListItem.Writer],property=WriterSplit)</onload>
	<onload condition="System.HasAddon(plugin.video.themoviedb.helper) + String.Contains(ListItem.Path,themoviedb.helper)">RunScript(plugin.video.themoviedb.helper,split_value=$INFO[ListItem.Studio],property=StudioSplit)</onload>
	<onunload>ClearProperty(GenreSplit.0,home)</onunload>
	<onunload>ClearProperty(WriterSplit.0,home)</onunload>
	<onunload>ClearProperty(WriterSplit.1,home)</onunload>
	<onunload>ClearProperty(StudioSplit.0,home)</onunload>
	<onload>SetProperty(ResetScroll," ")</onload>

	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,1,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true) + Window.IsVisible(videos)">SetProperty(ContainerPath_1,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true) + Window.IsVisible(home)">SetProperty(ContainerPath_1,HOME,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_2,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_3,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_4,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_5,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_6,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_7,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_8,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_9,movieinformation)</onload>
	<onload condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(ContainerPath_10,movieinformation)</onload>

	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_10)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_9)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_10,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_9)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_8)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_9,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_8)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_7)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_8,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_7)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_6)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_7,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_6)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_5)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_6,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_5)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_4)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_5,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_4)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_3)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_4,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_3)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_2)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_3,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_2)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_1)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(ContainerPath_2,$INFO[Container.FolderPath],movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_2)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_1)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,2,movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_3)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_2)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,3,movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_4)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_3)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,4,movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_5)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_4)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,5,movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_6)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_5)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,6,movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_7)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_6)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,7,movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_8)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_7)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,8,movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_9)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_8)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,9,movieinformation)</onload>
	<onload condition="String.IsEmpty(window(movieinformation).property(ContainerPath_10)) + !String.IsEmpty(window(movieinformation).property(ContainerPath_9)) + String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true) + !String.IsEqual(window(movieinformation).property(SentFromInfo),true)">SetProperty(Breadcrumb_Level,10,movieinformation)</onload>

	<onload condition="Integer.IsGreater(Container(65000).CurrentItem,1)">Control.Move(65000,$INFO[Container(65000).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(65000).CurrentItem,1)">Control.Move(65000,1)</onload>
	<onload condition="Integer.IsGreater(Container(50).CurrentItem,1)">Control.Move(50,$INFO[Container(50).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(50).CurrentItem,1)">Control.Move(50,1)</onload>
	<onload condition="Integer.IsGreater(Container(8010).CurrentItem,1)">Control.Move(8010,$INFO[Container(8010).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8010).CurrentItem,1)">Control.Move(8010,1)</onload>
	<onload condition="Integer.IsGreater(Container(8020).CurrentItem,1)">Control.Move(8020,$INFO[Container(8020).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8020).CurrentItem,1)">Control.Move(8020,1)</onload>
	<onload condition="Integer.IsGreater(Container(8030).CurrentItem,1)">Control.Move(8030,$INFO[Container(8030).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8030).CurrentItem,1)">Control.Move(8030,1)</onload>
	<onload condition="Integer.IsGreater(Container(8040).CurrentItem,1)">Control.Move(8040,$INFO[Container(8040).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8040).CurrentItem,1)">Control.Move(8040,1)</onload>
	<onload condition="Integer.IsGreater(Container(8050).CurrentItem,1)">Control.Move(8050,$INFO[Container(8050).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8050).CurrentItem,1)">Control.Move(8050,1)</onload>
	<onload condition="Integer.IsGreater(Container(8060).CurrentItem,1)">Control.Move(8060,$INFO[Container(8060).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8060).CurrentItem,1)">Control.Move(8060,1)</onload>
	<onload condition="Integer.IsGreater(Container(8070).CurrentItem,1)">Control.Move(8070,$INFO[Container(8070).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8070).CurrentItem,1)">Control.Move(8070,1)</onload>
	<onload condition="Integer.IsGreater(Container(8080).CurrentItem,1)">Control.Move(8080,$INFO[Container(8080).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8080).CurrentItem,1)">Control.Move(8080,1)</onload>
	<onload condition="Integer.IsGreater(Container(8090).CurrentItem,1)">Control.Move(8090,$INFO[Container(8090).CurrentItem,-])</onload>
	<onload condition="Integer.IsGreater(Container(8090).CurrentItem,1)">Control.Move(8090,1)</onload>

	<onload condition="String.IsEqual(window(movieinformation).property(SentFromInfo),true)">ClearProperty(SentFromInfo,movieinformation)</onload>
	<onload condition="String.IsEqual(window(movieinformation).property(Refresh),true)">ClearProperty(Refresh,movieinformation)</onload>
	<onload condition="String.IsEqual(window(movieinformation).property(Breadcrumb_GoToPrevious),true)">ClearProperty(Breadcrumb_GoToPrevious,movieinformation)</onload>
	<onload condition="String.IsEqual(window(movieinformation).property(Breadcrumb_GoToNext),true)">ClearProperty(Breadcrumb_GoToNext,movieinformation)</onload>
	<onload condition="String.IsEqual(ListItem.DBType,tvshow) + String.IsEmpty(window(movieinformation).property(TVShowPath))">SetProperty(TVShowPath,videodb://tvshows/titles/$INFO[ListItem.DBID]/,movieinformation)</onload>
	<onunload condition="!String.IsEmpty(window(movieinformation).property(TVShowPath))">ClearProperty(TVShowPath,movieinformation)</onunload>

	<defaultcontrol always="true">9001</defaultcontrol>
	<backgroundcolor>$VAR[Secondary_Color]</backgroundcolor>
	<include>Delayed_Dialog_Fade_Animation</include>
	<controls>

		<!-- Delay content on Load -->
		<include content="Delay_Content_Load">
			<param name="id" value="9001"/>
			<param name="time" value="360"/>
			<param name="target_id" value="SetFocus(8)"/>
		</include>

		<!-- OnPrevious delay -->
		<control type="group" id="5001">
			<visible>$EXP[InfoWidget_OnPrevious]</visible>
			<animation effect="slide" end="0,0" time="360" reversible="false">Hidden</animation>
		</control>

		<!-- OnNext delay -->
		<control type="group" id="5002">
			<visible>$EXP[InfoWidget_OnNext]</visible>
			<animation effect="slide" end="0,0" time="360" reversible="false">Hidden</animation>
		</control>

		<!-- Hidden buttons for Ratings bounce -->
		<control type="button" id="5003">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>IncreaseRating</onfocus>
			<onfocus>SetFocus(7)</onfocus>
		</control>

		<control type="button" id="5004">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>DecreaseRating</onfocus>
			<onfocus>SetFocus(7)</onfocus>
		</control>

		<!-- Hidden flag checkers -->
		<control type="image" id="920">
			<include content="Hidden_Control"/>
			<texture fallback="flags/blank.png">$VAR[Studio_Flag]</texture>
		</control>
		<control type="image" id="921">
			<include content="Hidden_Control"/>
			<texture fallback="flags/blank.png">$VAR[MPAA_Flag]</texture>
		</control>
		<control type="image" id="922">
			<include content="Hidden_Control"/>
			<texture fallback="flags/blank.png">$VAR[VideoSource_Flag]</texture>
		</control>
		<control type="image" id="923">
			<include content="Hidden_Control"/>
			<texture fallback="flags/blank.png">$VAR[VideoCodec_Flag]</texture>
		</control>
		<control type="image" id="924">
			<include content="Hidden_Control"/>
			<texture fallback="flags/blank.png">$VAR[AudioCodec_Flag]</texture>
		</control>

		<!-- Hidden Button to breadcrumb path before closing dialog -->
		<control type="button" id="65005">
			<visible allowhiddenfocus="true">false</visible>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),1)">ClearProperty(ContainerPath_1,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),1)">ClearProperty(Breadcrumb_Level,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),1)">Dialog.Close(all,true)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),2) + !String.IsEqual(Window(movieinformation).Property(ContainerPath_1),HOME)">Container.Update($INFO[window(movieinformation).property(ContainerPath_1)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),2) + String.IsEqual(Window(movieinformation).Property(ContainerPath_1),HOME)">ActivateWindowAndFocus(home,9000)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),2)">ClearProperty(ContainerPath_2,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),2)">SetProperty(Breadcrumb_Level,1,movieinformation)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),3)">Container.Update($INFO[window(movieinformation).property(ContainerPath_2)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),3)">ClearProperty(ContainerPath_3,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),3)">SetProperty(Breadcrumb_Level,2,movieinformation)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),4)">Container.Update($INFO[window(movieinformation).property(ContainerPath_3)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),4)">SetProperty(Breadcrumb_Level,3,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),4)">ClearProperty(ContainerPath_4,movieinformation)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),5)">Container.Update($INFO[window(movieinformation).property(ContainerPath_4)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),5)">ClearProperty(ContainerPath_5,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),5)">SetProperty(Breadcrumb_Level,4,movieinformation)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),6)">Container.Update($INFO[window(movieinformation).property(ContainerPath_5)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),6)">ClearProperty(ContainerPath_6,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),6)">SetProperty(Breadcrumb_Level,5,movieinformation)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),7)">Container.Update($INFO[window(movieinformation).property(ContainerPath_6)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),7)">ClearProperty(ContainerPath_7,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),7)">SetProperty(Breadcrumb_Level,6,movieinformation)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),8)">Container.Update($INFO[window(movieinformation).property(ContainerPath_7)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),8)">ClearProperty(ContainerPath_8,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),8)">SetProperty(Breadcrumb_Level,7,movieinformation)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),9)">Container.Update($INFO[window(movieinformation).property(ContainerPath_8)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),9)">ClearProperty(ContainerPath_9,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),9)">SetProperty(Breadcrumb_Level,8,movieinformation)</onfocus>

			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),10)">Container.Update($INFO[window(movieinformation).property(ContainerPath_9)],replace)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),10)">ClearProperty(ContainerPath_10,movieinformation)</onfocus>
			<onfocus condition="String.IsEqual(window(movieinformation).property(Breadcrumb_Level),10)">SetProperty(Breadcrumb_Level,9,movieinformation)</onfocus>

			<onfocus condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_Level),1)">SetProperty(Refresh,true,movieinformation)</onfocus>
			<onfocus condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_Level),1)">SetProperty(Breadcrumb_GoToPrevious,true,movieinformation)</onfocus>
			<onfocus condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_Level),1)">Dialog.Close(all,true)</onfocus>
			<onfocus condition="!String.IsEqual(window(movieinformation).property(Breadcrumb_Level),1)">SetFocus(5003)</onfocus>

		</control>

		<!-- Background -->
		<control type="group">
			<visible>!$EXP[InfoWidget_HasFocus]</visible>
			<include>Dialog_Fade_Animation</include>
			<control type="image">
				<!-- 25% alpha -->
				<animation effect="fadediffuse" end="ff404040" time="0" condition="true">Conditional</animation>
				<!-- 15% alpha: 60% of 25% -->
				<animation effect="fadediffuse" end="ff9a9a9a" time="360" tween="sine" easing="inout" reversible="true" condition="String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[207]) | String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[20410])">Conditional</animation>
				<aspectratio>scale</aspectratio>
				<texture background="true">$VAR[Dialog_Info_Background]</texture>
			</control>
		</control>

		<!-- Content -->
		<control type="group">
			<visible>!Control.HasFocus(9001) + Window.IsActive(movieinformation)</visible>
			<include>Long_Delayed_Content_Fade_Animation</include>
			<control type="group">
				<visible>!$EXP[InfoWidget_HasFocus] + !$EXP[TransparentDialog_IsVisible]</visible>
				<include>Delayed_Content_Fade_Animation</include>

				<include content="Info_Dialog_Header">
					<param name="visible" value="!String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[207]) + !Control.HasFocus(10) + !Control.HasFocus(11) + !Control.HasFocus(7) + !String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[184])"/>
					<param name="left" value="120"/>
					<param name="right" value="120"/>
					<param name="align" value="center"/>
				</include>
				<include content="Info_Dialog_Plot">
					<param name="visible" value="String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[207])"/>
					<param name="left" value="240"/>
					<param name="right" value="240"/>
					<param name="align" value="center"/>
					<param name="font" value="Plot_Fullscreen"/>
				</include>
				<include content="Info_Dialog_Stars">
					<param name="visible" value="Control.HasFocus(7) | Control.HasFocus(5003) | Control.HasFocus(5004)"/>
					<param name="itemgap" value="30"/>
					<param name="starheight" value="90"/>
				</include>
				<include content="Info_Dialog_Artwork">
					<param name="visible" value="String.IsEqual(Window(movieinformation).Property(Focused_Button),$LOCALIZE[13511])"/>
				</include>
				<include content="Breadcrumb_Label">
					<param name="bar" value="false"/>
					<param name="title_label" value="$INFO[Window(movieinformation).Property(Focused_Button),$LOCALIZE[31130] ,  $LOCALIZE[31131]]"/>
					<param name="label_color" value="$VAR[Breadcrumb_Label_Color]"/>
					<param name="info_label_visible" value="false"/>
				</include>

				<!-- Button group -->
				<control type="grouplist" id="65000">
					<visible>Window.IsVisible(movieinformation)</visible>
					<include>Dialog_Fade_Animation</include>
					<centerleft>50%</centerleft>
					<bottom>60</bottom>
					<width>420</width>
					<height>60</height>
					<orientation>horizontal</orientation>
					<align>center</align>
					<itemgap>0</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="togglebutton" id="8">
						<description>Play/Browse</description>
						<label>208</label>
						<altlabel>1024</altlabel>
						<font></font>
						<onfocus condition="![String.IsEqual(Listitem.DBType,tvshow) | String.IsEqual(Listitem.DBType,season)]">SetProperty(Focused_Button,$LOCALIZE[208],movieinformation)</onfocus>
						<onfocus condition="[String.IsEqual(Listitem.DBType,tvshow) | String.IsEqual(Listitem.DBType,season)]">SetProperty(Focused_Button,$LOCALIZE[1024],movieinformation)</onfocus>
						<onunfocus>SetProperty(ResetScroll," ")</onunfocus>
						<include>MovieInfo_Dialog_Menu_Navigation</include>
					</control>
					<control type="button" id="99">
						<include>Hidden_Button</include>
						<visible>!String.IsEmpty(Control.GetLabel(916)) + !String.IsEqual(ListItem.DBType,season)</visible>
						<onunfocus>SetProperty(ResetScroll,"")</onunfocus>
						<onfocus>SetProperty(Focused_Button,$LOCALIZE[207],movieinformation)</onfocus>
						<ondown condition="Container(4).HasNext | Container(4).HasPrevious">SetFocus(60)</ondown>
						<include condition="![Container(4).HasNext | Container(4).HasPrevious]">MovieInfo_Dialog_Menu_Navigation</include>
					</control>
					<control type="button" id="11">
						<visible>!String.IsEmpty(ListItem.Trailer)</visible>
						<include>Hidden_Button</include>
						<include>MovieInfo_Dialog_Menu_Navigation</include>
						<onfocus>SetProperty(ResetScroll," ")</onfocus>
						<onfocus>SetProperty(Focused_Button,$LOCALIZE[20410],movieinformation)</onfocus>
					</control>
					<control type="button" id="7">
						<include>Hidden_Button</include>
						<visible>!String.IsEqual(ListItem.DBType,set)</visible>
						<onfocus>SetProperty(ResetScroll," ")</onfocus>
						<onfocus>SetProperty(Focused_Button,$LOCALIZE[563],movieinformation)</onfocus>
						<onup>5003</onup>
						<ondown>5004</ondown>
					</control>
					<control type="button" id="10">
						<include>Hidden_Button</include>
						<onfocus>SetProperty(ResetScroll," ")</onfocus>
						<onfocus>SetProperty(Focused_Button,$LOCALIZE[13511],movieinformation)</onfocus>
						<include>MovieInfo_Dialog_Menu_Navigation</include>
					</control>
					<control type="button" id="6">
						<include>Hidden_Button</include>
						<visible>!String.IsEqual(ListItem.DBType,set)</visible>
						<onfocus>SetProperty(ResetScroll," ")</onfocus>
						<onfocus>SetProperty(Focused_Button,$LOCALIZE[184],movieinformation)</onfocus>
						<include>MovieInfo_Dialog_Menu_Navigation</include>
					</control>

				</control>
			</control>

			<!-- Widgets -->
			<control type="group">
				<!-- 8010 -->
				<!-- tvshow-->
				<include condition="String.IsEqual(ListItem.DBType,tvshow) + String.IsEqual(ListItem.Label,ListItem.TVShowTitle) + Integer.IsGreater(ListItem.Property(UnwatchedEpisodes),0)" content="Info_Widget_NextUp"/>
				<!-- season or episode -->
				<include condition="[String.IsEqual(ListItem.DBType,tvshow) + String.IsEqual(Container.FolderName,ListItem.TVShowTitle)] | String.IsEqual(ListItem.DBType,episode)" content="Info_Widget_Episodes"/>
				<include condition="String.IsEqual(ListItem.DBType,movie)" content="Info_Widget_MovieSet"/>
				<!-- 8020 -->
				<!-- tvshow or episode -->
				<include condition="[String.IsEqual(ListItem.DBType,tvshow) + String.IsEqual(ListItem.Label,ListItem.TVShowTitle)] | String.IsEqual(ListItem.DBType,episode)" content="Info_Widget_Seasons"/>
				<!-- 50 -->
				<include condition="!String.IsEqual(ListItem.DBType,set)" content="Info_Widget_Cast"/>
				<include condition="String.IsEqual(ListItem.DBType,set)" content="Info_Widget_Set"/>
				<!-- 8030 -->
				<include condition="!String.IsEqual(ListItem.DBType,set)" content="Info_Widget_ActorCredits"/>-->
				<!-- 8050 -->
				<include condition="String.IsEqual(ListItem.DBType,movie)" content="Info_Widget_DirectorCredits"/>
				<!-- 8060 -->
				<include condition="!String.IsEqual(ListItem.DBType,set)" content="Info_Widget_StudioCredits"/>
				<!-- 8070 -->
				<include condition="!String.IsEqual(ListItem.DBType,set)" content="Info_Widget_Similar"/>
			</control>

			<!-- Scrollbar -->
			<include content="Dialog_Widget_Scrollbar"/>

			<!-- Music Player -->
			<control type="group">
				<visible>!Window.IsVisible(shutdownmenu)</visible>
				<include>Delayed_Content_Fade_Animation</include>
				<include condition="Skin.HasSetting(Music_Player_Enabled)" content="Music_Player_Buttons"/>
				<include condition="Skin.HasSetting(Music_Player_Enabled)" content="Music_Player_Widget">
					<param name="left_label_visible" value="true"/>
					<param name="background_visible" value="false"/>
				</include>
			</control>

			<!-- Transparent dialogs background over widgets -->
			<control type="group">
				<visible>$EXP[TransparentDialog_IsVisible] + !ControlGroup(65000).HasFocus</visible>
				<include>Content_Fade_Animation</include>
				<include>Transparent_Dialog_Background</include>
			</control>

		</control>
	</controls>
</window>
