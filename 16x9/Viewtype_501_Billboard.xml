<includes>

	<include name="BillboardView_Container">
		<control type="group">
			<visible>$EXP[BillboardView_IsVisible]</visible>
			<include content="Custom_List">
				<param name="visible" value="!Container.Content() + !Container.Content(files) + !Container.Content(albums) + !Container.Content(songs) + !Container.Content(playlists)"/>
				<param name="type" value="list"/>
				<param name="id" value="501"/>
				<param name="viewtype_label" value="Billboard"/>
				<param name="viewtype" value="wide"/>
				<param name="orientation" value="horizontal"/>
			</include>
		</control>
	</include>

	<include name="BillboardView_Display">
		<param name="id" default="501"/>
		<param name="art_icon" default="Thumbnail"/>
		<param name="media_view" default="true"/>
		<param name="widget_view" default="false"/>
		<param name="widget_position"/>
		<definition>
			<include content="Viewtype_Display_Template">
				<param name="viewtype_label" value="Billboard" />
				<param name="media_view" value="$PARAM[media_view]" />
				<include condition="$PARAM[media_view]" content="Artwork_Transition_Fade">
					<param name="target_id" value="$PARAM[id]"/>
					<param name="art_icon" value="$PARAM[art_icon]"/>
					<param name="fallback"/>
				</include>
				<include content="Artwork_Transition_Fade" condition="$PARAM[widget_view] + Skin.HasSetting(Widget$PARAM[widget_position]_View_Billboard)">
					<param name="target_id" value="$PARAM[id]"/>
					<param name="art_icon" value="$PARAM[art_icon]"/>
					<param name="fallback"/>
					<param name="show_breadcrumb_overlay" value="true"/>
				</include>
			</include>
		</definition>
	</include>

	<include name="BillboardView_Details">
		<param name="id" default="501"/>
		<definition>
			<include content="Viewtype_Details_Template">
				<param name="viewtype_label" value="Billboard" />
				<include condition="Window.Is(videos) | Window.Is(home) | Window.Is(movieinformation)" content="Progress">
					<param name="id" value="$PARAM[id]" />
				</include>
				<include content="Common_Details" />
				<control type="group">
					<width>180</width>
					<height>180</height>
					<left>-30</left>
					<centertop>50%</centertop>
					<include content="Now_Playing_Icon">
						<param name="visible" value="$EXP[ListItem(0)_NowPlaying]"/>
						<animation effect="slide" end="0,-18" time="0" condition="$EXP[BillboardView_Details_NowPlaying_Left_IsVisible] + $EXP[BillboardView_Details_Info_IsVisible]">Conditional</animation>
						<animation effect="slide" end="1770,450" time="0" condition="!$EXP[BillboardView_Details_NowPlaying_Left_IsVisible]">Conditional</animation>
						<animation effect="slide" end="-180,0" time="0" condition="!$EXP[BillboardView_Details_NowPlaying_Left_IsVisible] + [$EXP[BillboardView_Flags_Studio] + !String.IsEqual(Control.GetLabel(6303),flags/blank.png)] | [$EXP[BillboardView_Flags_Rating] + !String.IsEqual(Control.GetLabel(6304),flags/blank.png)]">Conditional</animation>
						<animation effect="slide" end="-180,0" time="0" condition="!$EXP[BillboardView_Details_NowPlaying_Left_IsVisible] + $EXP[BillboardView_Flags_All] + [[!String.IsEqual(Control.GetLabel(6303),flags/blank.png) + String.IsEqual(Control.GetLabel(6304),flags/blank.png)] | [String.IsEqual(Control.GetLabel(6303),flags/blank.png) + !String.IsEqual(Control.GetLabel(6304),flags/blank.png)]]">Conditional</animation>
						<animation effect="slide" end="-360,0" time="0" condition="!$EXP[BillboardView_Details_NowPlaying_Left_IsVisible] + $EXP[BillboardView_Flags_All] + !String.IsEqual(Control.GetLabel(6303),flags/blank.png) + !String.IsEqual(Control.GetLabel(6304),flags/blank.png)">Conditional</animation>
					</include>
				</control>
			</include>
		</definition>
	</include>

</includes>
