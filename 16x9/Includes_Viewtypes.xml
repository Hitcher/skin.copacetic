	<includes>

		<include name="HiddenFocusButton">
			<control type="button">
				<animation effect="slide" end="0,0" time="240" reversible="false">Focus</animation>
				<visible allowhiddenfocus="true">false</visible>
				<onfocus>SetProperty(Next_Art,$INFO[Container.ListItemNoWrap(1).Label],home)</onfocus>
				<onfocus condition="[String.IsEqual(Container.ListItem.DBType,tvshow) | String.IsEqual(Container.ListItem.DBType,season)]">SetProperty(WatchedPercentage,Calculating,home)</onfocus>
				<onfocus condition="!Control.HasFocus(4501) + [String.IsEqual(Container.ListItem.DBType,tvshow) | String.IsEqual(Container.ListItem.DBType,season)] + Integer.IsEqual(Container.ListItem.Property(WatchedEpisodes),0)">SetProperty(WatchedPercentage,0,home)</onfocus>
				<onfocus condition="!Control.HasFocus(4501) + [String.IsEqual(Container.ListItem.DBType,tvshow) | String.IsEqual(Container.ListItem.DBType,season)] + String.IsEqual(Container.ListItem.Overlay,OverlayWatched.png)">SetProperty(WatchedPercentage,100,home)</onfocus>
				<onfocus condition="!Control.HasFocus(4501) + [String.IsEqual(Container.ListItem.DBType,tvshow) | String.IsEqual(Container.ListItem.DBType,season)] + Integer.IsGreater(Container.ListItem.Property(WatchedEpisodes),0) + !String.IsEqual(Container.ListItem.Overlay,OverlayWatched.png) + System.HasAddon(script.embuary.helper)">RunScript(script.embuary.helper,action=calc,do='"($INFO[Container.ListItem.Property(WatchedEpisodes)] / $INFO[Container.ListItem.Property(TotalEpisodes)]) * 100"',prop=WatchedPercentage)</onfocus>
				<onfocus condition="Control.HasFocus(4501) + Container.Content(tvshows) + Integer.IsEqual(Container(4501).ListItem.Property(WatchedEpisodes),0)">SetProperty(WatchedPercentage,0,home)</onfocus>
				<onfocus condition="Control.HasFocus(4501) + Container.Content(tvshows) + String.IsEqual(Container(4501).ListItem.Overlay,OverlayWatched.png)">SetProperty(WatchedPercentage,100,home)</onfocus>
				<onfocus condition="Control.HasFocus(4501) + Container.Content(tvshows) + Integer.IsGreater(Container(4501).ListItem.Property(WatchedEpisodes),0) + !String.IsEqual(Container(4501).ListItem.Overlay,OverlayWatched.png) + System.HasAddon(script.embuary.helper)">RunScript(script.embuary.helper,action=calc,do='"($INFO[Container(4501).ListItem.Property(WatchedEpisodes)] / $INFO[Container(4501).ListItem.Property(TotalEpisodes)]) * 100"',prop=WatchedPercentage)</onfocus>
				<onunfocus>ClearProperty(WatchedPercentage,home)</onunfocus>
			</control>
		</include>

		<include name="HiddenWidgetFocusButton">
			<control type="button">
				<animation effect="slide" end="0,0" time="240" reversible="false">Focus</animation>
				<visible allowhiddenfocus="true">false</visible>
				<onfocus condition="Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)">SetProperty(WidgetWatchedPercentage,Calculating,home)</onfocus>

				<onfocus condition="Control.HasFocus(8020) + Integer.IsEqual(Container(8020).ListItem.Property(WatchedEpisodes),0)">SetProperty(WidgetWatchedPercentage,0,home)</onfocus>
				<onfocus condition="Control.HasFocus(8020) + String.IsEqual(Container(8020).ListItem.Overlay,OverlayWatched.png)">SetProperty(WidgetWatchedPercentage,100,home)</onfocus>
				<onfocus condition="Control.HasFocus(8020) + Integer.IsGreater(Container(8020).ListItem.Property(WatchedEpisodes),0) + !String.IsEqual(Container(8020).ListItem.Overlay,OverlayWatched.png) + System.HasAddon(script.embuary.helper)">RunScript(script.embuary.helper,action=calc,do='"($INFO[Container(8020).ListItem.Property(WatchedEpisodes)] / $INFO[Container(8020).ListItem.Property(TotalEpisodes)]) * 100"',prop=WidgetWatchedPercentage)</onfocus>

				<onfocus condition="Control.HasFocus(8030) + String.IsEqual(Container(8030).ListItem.DBType,movie) + !Container(8030).ListItem.IsResumable + Integer.IsEqual(Container(8030).ListItem.PlayCount,0)">SetProperty(WidgetWatchedPercentage,0,home)</onfocus>
				<onfocus condition="Control.HasFocus(8030) + String.IsEqual(Container(8030).ListItem.DBType,movie) + !Container(8030).ListItem.IsResumable + !Integer.IsEqual(Container(8030).ListItem.PlayCount,0)">SetProperty(WidgetWatchedPercentage,100,home)</onfocus>
				<onfocus condition="Control.HasFocus(8030) + String.IsEqual(Container(8030).ListItem.DBType,tvshow) + !String.IsEqual(Container(8030).ListItem.Overlay,OverlayWatched.png) + System.HasAddon(script.embuary.helper)">RunScript(script.embuary.helper,action=calc,do='"($INFO[Container(8030).ListItem.Property(WatchedEpisodes)] / $INFO[Container(8030).ListItem.Property(TotalEpisodes)]) * 100"',prop=WidgetWatchedPercentage)</onfocus>

				<onfocus condition="Control.HasFocus(8060) + String.IsEqual(Container(8060).ListItem.DBType,movie) + !Container(8060).ListItem.IsResumable + Integer.IsEqual(Container(8060).ListItem.PlayCount,0)">SetProperty(WidgetWatchedPercentage,0,home)</onfocus>
				<onfocus condition="Control.HasFocus(8060) + String.IsEqual(Container(8060).ListItem.DBType,movie) + !Container(8060).ListItem.IsResumable + !Integer.IsEqual(Container(8060).ListItem.PlayCount,0)">SetProperty(WidgetWatchedPercentage,100,home)</onfocus>
				<onfocus condition="Control.HasFocus(8060) + String.IsEqual(Container(8060).ListItem.DBType,tvshow) + !String.IsEqual(Container(8060).ListItem.Overlay,OverlayWatched.png) + System.HasAddon(script.embuary.helper)">RunScript(script.embuary.helper,action=calc,do='"($INFO[Container(8060).ListItem.Property(WatchedEpisodes)] / $INFO[Container(8060).ListItem.Property(TotalEpisodes)]) * 100"',prop=WidgetWatchedPercentage)</onfocus>

				<onunfocus>ClearProperty(WidgetWatchedPercentage,home)</onunfocus>
			</control>
		</include>

		<include name="Season_Details">
			<control type="button">
				<visible allowhiddenfocus="true">false</visible>
				<onfocus condition="Container.Content(seasons)">SetProperty(Season_Fanart,$INFO[ListItem.Art(fanart)],home)</onfocus>
				<onfocus condition="Container.Content(seasons)">SetProperty(Season_Details,$INFO[ListItem.Year]$INFO[ListItem.Season, / $LOCALIZE[20373] ],home)</onfocus>
				<onunfocus condition="!Container.Content(seasons)">ClearProperty(Season_Fanart,home)</onunfocus>
				<onunfocus condition="!Container.Content(seasons)">ClearProperty(Season_Details,home)</onunfocus>
			</control>
		</include>

		<include name="HiddenGridFocusButton">
			<control type="button">
				<visible allowhiddenfocus="true">false</visible>
				<onfocus condition="$EXP[GridView_IsVisible]">SetProperty(GridView_Column,$INFO[Container.Column],home)</onfocus>
				<onfocus condition="$EXP[GridView_IsVisible]">SetProperty(GridView_Row,$INFO[Container.Row],home)</onfocus>
			</control>
		</include>

		<include name="Common_List_Layout">
			<param name="visible" default="true"/>
			<param name="nowplayingtop" default="-34"/>
			<param name="nowplayingvisible" default="true"/>
			<param name="icontop" default="-3"/>
			<param name="icontexture" default="Check_Unfocused"/>
			<param name="iconvisible" default="String.IsEqual(ListItem.Overlay,OverlayWatched.png)"/>
			<param name="labelleft" default="120"/>
			<param name="labelheight" default="55"/>
			<param name="labelmaxwidth" default="720"/>
			<param name="label" default="$VAR[Title_Label]"/>
			<param name="font" default="List_Title_Unfocused"/>
			<param name="textcolor" default="$VAR[List_Text_Color]"/>
			<param name="selectedcolor" default="$VAR[List_Text_Color]"/>
			<param name="tracknumbercolor" default="$VAR[List_Text_Color]"/>
			<param name="scroll" default="false"/>
			<definition>
				<control type="group">
					<width>100%</width>
					<height>$PARAM[labelheight]</height>
					<control type="group">
						<width>120</width>
						<height>120</height>
						<left>0</left>
						<top>$PARAM[nowplayingtop]</top>
						<visible>$PARAM[nowplayingvisible]</visible>
						<include content="Now_Playing_Visualization_Fill">
							<param name="visible" value="$EXP[ListItem(0)_NowPlaying]"/>
							<param name="color" default="$PARAM[tracknumbercolor]"/>
						</include>
					</control>
					<control type="group">
						<visible>!$EXP[ListItem(0)_NowPlaying]</visible>
						<visible>$PARAM[iconvisible]</visible>
						<width>60</width>
						<height>60</height>
						<left>30</left>
						<top>$PARAM[icontop]</top>
						<include content="$PARAM[icontexture]">
							<param name="color" value="$PARAM[tracknumbercolor]"/>
						</include>
					</control>
					<control type="label">
						<height>$PARAM[labelheight]</height>
						<width>120</width>
						<left>0</left>
						<align>center</align>
						<aligny>center</aligny>
						<font>$PARAM[font]</font>
						<textcolor>$PARAM[tracknumbercolor]</textcolor>
						<disabledcolor>$VAR[Light_Grey_Color]</disabledcolor>
						<selectedcolor>$PARAM[selectedcolor]</selectedcolor>
						<label>$VAR[TrackNumber_Label]</label>
						<visible>!ListItem.IsPlaying</visible>
					</control>
					<control type="label">
						<left>$PARAM[labelleft]</left>
						<width max="$PARAM[labelmaxwidth]">auto</width>
						<height>$PARAM[labelheight]</height>
						<aligny>center</aligny>
						<font>$PARAM[font]</font>
						<textcolor>$PARAM[textcolor]</textcolor>
						<disabledcolor>$VAR[Light_Grey_Color]</disabledcolor>
						<selectedcolor>$PARAM[selectedcolor]</selectedcolor>
						<label>$PARAM[label]</label>
						<scroll>$PARAM[scroll]</scroll>
						<scrollsuffix> / </scrollsuffix>
					</control>
				</control>
			</definition>
		</include>


		<include name="Common_List">
			<param name="id" default="50"/>
			<param name="visible" default="true"/>
			<param name="orientation" default="vertical"/>
	    <param name="left" default="0"/>
			<param name="height" default="610"/>
			<param name="focusposition" default="5"/>
	    <param name="label" default="$VAR[Title_Label]"/>
	    <param name="unfocusedicontexture" default="Check_Unfocused"/>
	    <param name="unfocusediconvisible" default="String.IsEqual(ListItem.Overlay,OverlayWatched.png)"/>
	    <param name="focusedicontexture" default="Check_Focused"/>
	    <param name="focusediconvisible" default="String.IsEqual(ListItem.Overlay,OverlayWatched.png)"/>
	    <param name="textcolor" default="$VAR[List_Text_Color]"/>
	    <definition>
				<control type="fixedlist" id="$PARAM[id]">
					<viewtype label="List">list</viewtype>
					<visible allowhiddenfocus="true">$PARAM[visible]</visible>
					<left>$PARAM[left]</left>
					<width>100%</width>
					<centertop>50%</centertop>
					<height>$PARAM[height]</height>
					<focusposition>$PARAM[focusposition]</focusposition>
					<include>List_Navigation</include>
					<preloaditems>2</preloaditems>
					<pagecontrol>60</pagecontrol>
					<orientation>$PARAM[orientation]</orientation>
					<scrolltime tween="sine" easing="inout">360</scrolltime>
					<itemlayout height="55" width="720">
						<control type="group">
							<visible>$EXP[ListView_IsVisible] + !$EXP[OpaqueDialog_IsVisible]</visible>
							<include>Viewtype_Fade_Animation</include>
							<control type="group">
								<visible>!$EXP[ContainerSwitching] + !$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(4501) + !$EXP[Secondary_List_ContainerSwitching] + !$EXP[InfoDialog_IsVisible]</visible>
								<include>Delayed_Content_Fade_Animation</include>
								<include content="Common_List_Layout">
			            <param name="label" value="$VAR[Unfocused_Title_Label]"/>
			            <param name="textcolor" value="$PARAM[textcolor]"/>
			            <param name="icontexture" value="$PARAM[unfocusedicontexture]"/>
									<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
			            <param name="iconvisible" value="$PARAM[unfocusediconvisible]"/>
			          </include>
							</control>
						</control>
					</itemlayout>
					<!-- Background + !Details -->
					<focusedlayout height="60" width="1680" condition="$EXP[ListView_Display_IsBackground] + !$EXP[ListView_Details_Info_IsVisible]">
						<include>Season_Details</include>
						<include>HiddenFocusButton</include>
						<control type="group">
							<visible>$EXP[ListView_IsVisible] + !$EXP[OpaqueDialog_IsVisible]</visible>
							<include>Viewtype_Fade_Animation</include>
							<control type="group">
								<visible>!$EXP[ContainerSwitching] + !$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(4501) + !$EXP[Secondary_List_ContainerSwitching] + !$EXP[InfoDialog_IsVisible]</visible>
								<include>Delayed_Content_Fade_Animation</include>
								<include content="Common_List_Layout">
									<param name="nowplayingtop" value="-30"/>
									<param name="icontop" value="0"/>
									<param name="icontexture" value="$PARAM[focusedicontexture]"/>
									<param name="iconvisible" value="$PARAM[focusediconvisible]"/>
									<param name="labelheight" value="60"/>
									<param name="label" value="$PARAM[label]"/>
									<param name="labelmaxwidth" value="1680"/>
									<param name="font" value="List_Title_Focused"/>
									<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
									<param name="textcolor" value="$PARAM[textcolor]"/>
								</include>
							</control>
						</control>
					</focusedlayout>
					<!-- Background + Details -->
					<focusedlayout height="60" width="1200" condition="$EXP[ListView_Display_IsBackground] + $EXP[ListView_Details_Info_IsVisible]">
						<include>Season_Details</include>
						<include>HiddenFocusButton</include>
						<control type="group">
							<visible>$EXP[ListView_IsVisible] + !$EXP[OpaqueDialog_IsVisible]</visible>
							<include>Viewtype_Fade_Animation</include>
							<control type="group">
								<visible>!$EXP[ContainerSwitching] + !$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(4501) + !$EXP[Secondary_List_ContainerSwitching] + !$EXP[InfoDialog_IsVisible]</visible>
								<include>Delayed_Content_Fade_Animation</include>
								<include content="Common_List_Layout">
									<param name="nowplayingtop" value="-30"/>
									<param name="icontop" value="0"/>
									<param name="icontexture" value="$PARAM[focusedicontexture]"/>
									<param name="iconvisible" value="$PARAM[focusediconvisible]"/>
									<param name="labelheight" value="60"/>
									<param name="label" value="$PARAM[label]"/>
									<param name="labelmaxwidth" value="1200"/>
									<param name="font" value="List_Title_Focused"/>
									<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
									<param name="textcolor" value="$PARAM[textcolor]"/>
								</include>
							</control>
						</control>
					</focusedlayout>
					<!-- Thumbnails + !Details -->
					<focusedlayout height="60" width="990" condition="[$EXP[ListView_Display_IsThumbnails] + !$EXP[ListView_Details_Info_IsVisible]]">
						<include>Season_Details</include>
						<include>HiddenFocusButton</include>
						<control type="group">
							<visible>$EXP[ListView_IsVisible] + !$EXP[OpaqueDialog_IsVisible]</visible>
							<include>Viewtype_Fade_Animation</include>
							<control type="group">
								<visible>!$EXP[ContainerSwitching] + !$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(4501) + !$EXP[Secondary_List_ContainerSwitching] + !$EXP[InfoDialog_IsVisible]</visible>
								<include>Delayed_Content_Fade_Animation</include>
								<include content="Common_List_Layout">
									<param name="nowplayingtop" value="-30"/>
									<param name="icontop" value="0"/>
									<param name="icontexture" value="$PARAM[focusedicontexture]"/>
									<param name="iconvisible" value="$PARAM[focusediconvisible]"/>
			            <param name="label" value="$PARAM[label]"/>
									<param name="labelheight" value="60"/>
									<param name="labelmaxwidth" value="990"/>
									<param name="font" value="List_Title_Focused"/>
									<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
			            <param name="textcolor" value="$PARAM[textcolor]"/>
								</include>
							</control>
						</control>
					</focusedlayout>
					<!-- Thumbnails + Details -->
					<focusedlayout height="60" width="780" condition="$EXP[ListView_Display_IsThumbnails] + $EXP[ListView_Details_Info_IsVisible]">
						<include>Season_Details</include>
						<include>HiddenFocusButton</include>
						<control type="group">
							<visible>$EXP[ListView_IsVisible] + !$EXP[OpaqueDialog_IsVisible]</visible>
							<include>Viewtype_Fade_Animation</include>
							<control type="group">
								<visible>!$EXP[ContainerSwitching] + !$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(4501) + !$EXP[Secondary_List_ContainerSwitching] + !$EXP[InfoDialog_IsVisible]</visible>
								<include>Delayed_Content_Fade_Animation</include>
								<include content="Common_List_Layout">
									<param name="nowplayingtop" value="-30"/>
									<param name="icontop" value="0"/>
									<param name="icontexture" value="$PARAM[focusedicontexture]"/>
									<param name="iconvisible" value="$PARAM[focusediconvisible]"/>
			            <param name="label" value="$PARAM[label]"/>
									<param name="labelheight" value="60"/>
									<param name="labelmaxwidth" value="780"/>
									<param name="font" value="List_Title_Focused"/>
									<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
			            <param name="textcolor" value="$PARAM[textcolor]"/>
								</include>
							</control>
						</control>
					</focusedlayout>
				</control>
	    </definition>
	  </include>

		<include name="Simple_List">
			<param name="id"/>
			<param name="visible" default="true"/>
			<param name="animation" default="Blank_Include"/>
			<param name="orientation" default="vertical"/>
			<param name="left" default="780"/>
			<param name="right" default="120"/>
			<param name="height" default="500"/>
			<param name="focusposition" default="4"/>
			<param name="nowplayingvisible" default="false"/>
			<param name="labelleft" default="0"/>
			<param name="label" default="$INFO[ListItem.Label]"/>
			<param name="labelmaxwidth" default="1020"/>
			<param name="textcolor" default="$VAR[Light_Color]"/>
			<param name="selectedcolor" default="$VAR[Accent_Color]"/>
			<param name="focusedinclude" default="Blank_Include"/>
			<param name="include" default="Blank_Include"/>
	    <definition>
	      <control type="fixedlist" id="$PARAM[id]">
					<viewtype label="List">list</viewtype>
					<visible allowhiddenfocus="true">$PARAM[visible]</visible>
					<include>$PARAM[animation]</include>
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<centertop>50%</centertop>
					<height>$PARAM[height]</height>
					<include>Simple_List_Navigation</include>
					<onup>$PARAM[id]</onup>
					<ondown>$PARAM[id]</ondown>
					<onclick condition="Window.Is(musicinformation)">RunScript(script.embuary.helper,action=playall,id=4500,type=music,method=fromhere)</onclick>
					<preloaditems>2</preloaditems>
					<focusposition>$PARAM[focusposition]</focusposition>
					<orientation>vertical</orientation>
					<scrolltime tween="sine" easing="inout">360</scrolltime>
					<itemlayout height="55" width="100%">
						<control type="image">
							<texture>views/white_100.png,</texture>
							<width>200</width>
						</control>
						<include content="Common_List_Layout">
							<param name="nowplayingvisible" value="$PARAM[nowplayingvisible]"/>
							<param name="iconvisible" value="false"/>
							<param name="labelleft" value="$PARAM[labelleft]"/>
	            <param name="label" value="$PARAM[label]"/>
							<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
							<param name="textcolor" value="$PARAM[textcolor]"/>
							<param name="selectedcolor" value="$PARAM[selectedcolor]"/>
	          </include>
					</itemlayout>
					<focusedlayout height="60" width="100%" condition="Control.HasFocus($PARAM[id])">
						<include content="Common_List_Layout">
							<param name="nowplayingvisible" value="$PARAM[nowplayingvisible]"/>
							<param name="iconvisible" value="false"/>
							<param name="labelleft" value="$PARAM[labelleft]"/>
	            <param name="label" value="$PARAM[label]"/>
							<param name="labelmaxwidth" value="$PARAM[labelmaxwidth]"/>
							<param name="font" value="List_Title_Focused"/>
							<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
							<param name="textcolor" value="$PARAM[textcolor]"/>
							<param name="selectedcolor" value="$PARAM[selectedcolor]"/>
						</include>
						<include>$PARAM[focusedinclude]</include>
					</focusedlayout>
					<focusedlayout height="60" width="100%" condition="!Control.HasFocus($PARAM[id])">
						<control type="group">
							<top>5</top>
							<include content="Common_List_Layout">
								<param name="nowplayingvisible" value="$PARAM[nowplayingvisible]"/>
								<param name="iconvisible" value="false"/>
								<param name="labelleft" value="$PARAM[labelleft]"/>
		            <param name="label" value="$PARAM[label]"/>
								<param name="labelmaxwidth" value="$PARAM[labelmaxwidth]"/>
								<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
								<param name="textcolor" value="$PARAM[textcolor]"/>
								<param name="selectedcolor" value="$PARAM[selectedcolor]"/>
							</include>
						</control>
						<include>$PARAM[focusedinclude]</include>
					</focusedlayout>
					<include>$PARAM[include]</include>
				</control>
	    </definition>
	  </include>

		<include name="Smart_Playlist_X">
			<control type="group">
				<visible>[Control.HasFocus(10) | Control.HasFocus(14)] + !String.IsEqual(Container(10).ListItem.Label,New rule...)</visible>
				<left>870</left>
				<width>60</width>
				<height>60</height>
				<top>0</top>
				<include content="ButtonLayout">
					<param name="buttonid" value="14"/>
					<param name="width" value="60"/>
					<param name="unfocusedcolor" value="$VAR[Light_Color]"/>
					<param name="focusedcolor" value="$VAR[Light_Color]"/>
				</include>
			</control>
		</include>

		<include name="Custom_List">
			<param name="type" default="fixedlist"/>
			<param name="id"/>
			<param name="viewtype_label"/>
			<param name="viewtype"/>
			<param name="visible"/>
			<param name="orientation"/>
			<definition>
				<control type="$PARAM[type]" id="$PARAM[id]">
					<width>1920</width>
					<viewtype label="$PARAM[viewtype_label]">$PARAM[viewtype]</viewtype>
					<visible>$PARAM[visible]</visible>
					<focusposition>0</focusposition>
					<include>$PARAM[viewtype_label]_Navigation</include>
					<pagecontrol>60</pagecontrol>
					<preloaditems>2</preloaditems>
					<orientation>$PARAM[orientation]</orientation>
					<scrolltime tween="sine" easing="inout">360</scrolltime>
					<focusedlayout>
						<include>Season_Details</include>
						<include>HiddenFocusButton</include>
						<include>HiddenGridFocusButton</include>
					</focusedlayout>
					<itemlayout/>
				</control>
			</definition>
		</include>

		<include name="List_Info_Label">
			<param name="visible" default="$EXP[$PARAM[viewtype_label]View_Display_IsBackground] + $EXP[$PARAM[viewtype_label]View_Details_Info_IsVisible]"/>
			<param name="visibleanimation" default="Blank_Include"/>
			<param name="width" default="1680"/>
			<param name="left" default="120"/>
			<param name="hiddenlabel" default="$VAR[Title_Label]"/>
			<param name="hiddenlabelmaxwidth" default="1200"/>
			<param name="infolabel" default="$VAR[Info_Label,/ ]"/>
			<param name="infolabelwidth" default="180"/>
			<definition>
				<control type="grouplist">
					<visible>$PARAM[visible]</visible>
					<include>$PARAM[visibleanimation]</include>
					<left>$PARAM[left]</left>
					<top>510</top>
					<width>$PARAM[width]</width>
					<height>60</height>
					<itemgap>12</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<!-- Title Gap -->
					<control type="label">
						<width max="$PARAM[hiddenlabelmaxwidth]">auto</width>
						<height>60</height>
						<aligny>center</aligny>
						<font>List_Title_Focused</font>
						<textcolor>$VAR[Blank_Color]</textcolor>
						<label>$PARAM[hiddenlabel]</label>
					</control>
					<!-- Abbreviated Details -->
					<control type="label">
						<width>$PARAM[infolabelwidth]</width>
						<top>20</top>
						<height>35</height>
						<font>List_Info</font>
						<textcolor>$VAR[Light_Color]</textcolor>
						<label>$PARAM[infolabel]</label>
						<aligny>center</aligny>
					</control>
				</control>
			</definition>
		</include>

		<include name="CustomViewsBackground">
			<param name="visible" default="true"/>
			<param name="height" default="100%"/>
			<param name="bottom" default="0"/>
			<param name="overlaytexture" default="views/gradient_light-background.png"/>
			<definition>
				<control type="group">
					<visible>$PARAM[visible]</visible>
					<height>$PARAM[height]</height>
					<bottom>$PARAM[bottom]</bottom>
					<control type="image">
						<aspectratio>stretch</aspectratio>
						<texture colordiffuse="$VAR[Secondary_Color]">views/white_100.png</texture>
					</control>
					<control type="image">
						<visible>Skin.String(Theme,Light)</visible>
						<aspectratio>stretch</aspectratio>
						<texture colordiffuse="$VAR[Light_Grey_Color]">$PARAM[overlaytexture]</texture>
					</control>
				</control>
			</definition>
		</include>


		<include name="SimpleListIcon">
			<param name="left" default="0"/>
			<param name="top" default="0"/>
			<param name="width" default="100%"/>
			<param name="height" default="100%"/>
			<param name="visible" default="true"/>
			<param name="align" default="center"/>
			<param name="aspectratio" default="scale"/>
			<param name="fallback" default=""/>
			<param name="texture" default="$INFO[ListItem.Art(thumb)]"/>
			<param name="fadetime" default="0"/>
			<param name="bordervisible" default="false"/>
			<param name="bordersize" default="2"/>
			<param name="bordercolor" default="$VAR[Primary_Color]"/>
			<param name="bordertexture" default="views/border_1px_10.png"/>
			<definition>
				<control type="group">
					<left>$PARAM[left]</left>
					<top>$PARAM[top]</top>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<visible>$PARAM[visible]</visible>
					<control type="image">
						<aspectratio align="$PARAM[align]" aligny="center">$PARAM[aspectratio]</aspectratio>
						<texture fallback="$PARAM[fallback]" background="true">$PARAM[texture]</texture>
						<fadetime>$PARAM[fadetime]</fadetime>
					</control>
					<control type="image">
						<visible>$PARAM[bordervisible]</visible>
						<visible>!$EXP[TransparentDialog_IsVisible]</visible>
						<include>Content_Fade_Animation</include>
						<aspectratio>stretch</aspectratio>
						<texture border="$PARAM[bordersize]" colordiffuse="$PARAM[bordercolor]">$PARAM[bordertexture]</texture>
					</control>
				</control>
			</definition>
		</include>

		<include name="ListIcon">
			<param name="artwork_icon" default="Thumbnail"/>
			<param name="position" default="0"/>
			<param name="multiart" default="false"/>
			<param name="left" default="0"/>
			<param name="top" default="0"/>
			<param name="width" default="100%"/>
			<param name="height" default="100%"/>
			<param name="visible" default="true"/>
			<param name="switchingtosecondarylistanimation" default="Blank_Include"/>
			<param name="animationtype" default="Conditional"/>
			<param name="animationeffect" default="fade"/>
			<param name="animationend" default="100"/>
			<param name="animationcondition" default="false"/>
			<param name="animationtime" default="360"/>
			<param name="animationtween" default="sine"/>
			<param name="animationeasing" default="inout"/>
			<param name="animationreversible" default="false"/>
			<param name="aspectratio" default="scale"/>
			<param name="fallback" default=""/>
			<param name="diffuse" default=""/>
			<param name="fadetime" default="0"/>
			<param name="showgradient" default="false"/>
			<param name="showbreadcrumboverlay" default="false"/>
			<param name="artworkmask" default="false"/>
			<param name="artworkmaskdiffuse" default="$VAR[Artwork_Mask]"/>
			<param name="artworkmasktexture" default="views/white_100.png"/>
			<param name="artworkmaskanimationtype" default="Conditional"/>
			<param name="artworkmaskanimationeffect" default="fade"/>
			<param name="artworkmaskanimationstart" default="0"/>
			<param name="artworkmaskanimationend" default="100"/>
			<param name="artworkmaskanimationdelay" default="0"/>
			<param name="artworkmaskanimationcondition" default="false"/>
			<param name="artworkmaskanimationtween" default="sine"/>
			<param name="artworkmaskanimationeasing" default="inout"/>
			<param name="bordervisible" default="false"/>
			<param name="borderedge" default="0"/>
			<param name="bordersize" default="2"/>
			<param name="bordercolor" default="$VAR[Primary_Color]"/>
			<param name="bordertexture" default="views/border_1px_10.png"/>
			<definition>
				<control type="group">
					<left>$PARAM[left]</left>
					<top>$PARAM[top]</top>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<visible>Window.IsVisible(visualisation) | Window.IsVisible(addoninformation) | !String.IsEmpty(Container.ListItemNoWrap($PARAM[position]).Label) | $EXP[ListView_IsVisible] | $EXP[BillboardView_IsVisible]</visible>
					<visible>$PARAM[visible]</visible>
					<animation effect="$PARAM[animationeffect]" end="$PARAM[animationend]" condition="$PARAM[animationcondition]" time="$PARAM[animationtime]" tween="$PARAM[animationtween]" easing="$PARAM[animationeasing]" reversible="$PARAM[animationreversible]">$PARAM[animationtype]</animation>
					<!-- Artwork -->
					<control type="image">
						<visible>!$PARAM[multiart]</visible>
						<include>$PARAM[switchingtosecondarylistanimation]</include>
						<include>Focus_Zoom_Animation</include>
						<texture fallback="$PARAM[fallback]" background="true" diffuse="$PARAM[diffuse]">$VAR[$PARAM[artwork_icon]($PARAM[position])Content]</texture>
						<aspectratio align="center" aligny="center">$PARAM[aspectratio]</aspectratio>
						<fadetime>$PARAM[fadetime]</fadetime>
					</control>
					<!-- Multiart -->
					<control type="multiimage">
						<visible>Skin.HasSetting(Multiart_Slideshow)</visible>
						<visible>$PARAM[multiart]</visible>
						<imagepath>$VAR[Multiart_Path]</imagepath>
						<fadetime>1080</fadetime>
						<aspectratio align="center" aligny="center">$PARAM[aspectratio]</aspectratio>
					</control>
					<!-- Artwork Mask -->
					<control type="image">
						<include>$PARAM[switchingtosecondarylistanimation]</include>
						<visible>$PARAM[artworkmask]</visible>
						<animation effect="$PARAM[artworkmaskanimationeffect]" start="$PARAM[artworkmaskanimationstart]" end="$PARAM[artworkmaskanimationend]" delay="$PARAM[artworkmaskanimationdelay]" condition="$PARAM[artworkmaskanimationcondition]" time="360" tween="$PARAM[artworkmaskanimationtween]" easing="$PARAM[artworkmaskanimationeasing]" reversible="false">$PARAM[artworkmaskanimationtype]</animation>
						<texture colordiffuse="$PARAM[artworkmaskdiffuse]">$PARAM[artworkmasktexture]</texture>
					</control>
					<!-- Progress Bar backing overlay -->
					<control type="image">
						<visible>$PARAM[showgradient]</visible>
						<visible>$EXP[Video_Containers] | Window.IsVisible(home) | Window.IsVisible(visualisation) | $EXP[InfoWidget_HasFocus]</visible>
						<visible>!String.IsEmpty(Container.ListItemNoWrap($PARAM[position]).Label)</visible>
						<aspectratio>stretch</aspectratio>
						<texture colordiffuse="$VAR[Dark_Color]">views/gradient_art-overlay.png</texture>
					</control>
					<!-- Breadcrumb overlay -->
					<control type="image">
						<visible>$PARAM[showbreadcrumboverlay]</visible>
						<animation effect="fade" start="0" end="100" time="360" tween="sine" easing="out" reversible="false" condition="true">Visible</animation>
						<aspectratio>stretch</aspectratio>
						<texture colordiffuse="$VAR[Dark_Color]" flipy="true">views/gradient_art-overlay.png</texture>
					</control>
					<!-- Now Playing Background -->
					<control type="group">
						<include>$PARAM[switchingtosecondarylistanimation]</include>
						<visible>Player.HasMedia</visible>
						<visible>[$EXP[ListItem($PARAM[position])_NowPlaying] + [$EXP[ShowcaseView_IsVisible] | $EXP[StripView_IsVisible] | [$EXP[GridView_IsVisible] + $EXP[InfoWidget_HasFocus]]]] | [$EXP[ListItem(0)_NowPlaying] + $EXP[GridView_IsVisible] + !$EXP[InfoWidget_HasFocus]]</visible>
						<control type="image">
							<aspectratio>stretch</aspectratio>
							<texture colordiffuse="$VAR[Now_Playing_Mask]">views/white_100.png</texture>
						</control>
						<include content="Now_Playing_Visualization_Fill">
							<param name="width" value="120"/>
							<param name="barwidth" value="24"/>
							<param name="bottom" value="24"/>
							<param name="itemgap" value="8"/>
							<param name="pausewidth" value="24"/>
							<param name="pausegap" value="8"/>
							<param name="color" value="$VAR[Light_Color]"/>
						</include>
					</control>
					<!-- Border -->
					<control type="image">
						<left>$PARAM[borderedge]</left>
						<top>$PARAM[borderedge]</top>
						<right>$PARAM[borderedge]</right>
						<bottom>$PARAM[borderedge]</bottom>
						<visible>$PARAM[bordervisible]</visible>
						<visible>!$EXP[TransparentDialog_IsVisible]</visible>
						<include>Content_Fade_Animation</include>
						<aspectratio>stretch</aspectratio>
						<texture border="$PARAM[bordersize]" colordiffuse="$PARAM[bordercolor]">$PARAM[bordertexture]</texture>
					</control>
				</control>
			</definition>
		</include>

		<include name="DropShadow">
	    <param name="left" default="0"/>
	    <param name="top" default="0"/>
	    <param name="width" default="120"/>
	    <param name="height" default="120"/>
	    <param name="flipx" default="false"/>
	    <param name="flipy" default="false"/>
	    <param name="texture" default="views/dropshadow_left_120.png"/>
	    <param name="colordiffuse" default="$VAR[Artwork_Dropshadow]"/>
	    <param name="visible" default="true"/>
	    <param name="animationtype" default="Visible"/>
	    <param name="animationcondition" default="false"/>
	    <param name="animationeffect" default=""/>
	    <param name="animationend" default=""/>
	    <param name="animationtime" default="360"/>
	    <param name="animation2effect" default=""/>
	    <param name="animation2start" default=""/>
	    <param name="animation2end" default=""/>
	    <param name="animation2time" default=""/>
	    <param name="animation2delay" default=""/>
	    <param name="animation2center" default=""/>
	    <param name="animation3effect" default=""/>
	    <param name="animation3start" default=""/>
	    <param name="animation3end" default=""/>
	    <param name="animation3time" default=""/>
	    <param name="animation3delay" default=""/>
	    <definition>
	      <control type="image">
	        <left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
	        <top>$PARAM[top]</top>
	        <width>$PARAM[width]</width>
	        <height>$PARAM[height]</height>
	        <texture colordiffuse="$PARAM[colordiffuse]" flipx="$PARAM[flipx]" flipy="$PARAM[flipy]">$PARAM[texture]</texture>
	        <visible>$PARAM[visible]</visible>
	        <animation type="$PARAM[animationtype]" condition="$PARAM[animationcondition]" reversible="false">
	          <effect type="$PARAM[animationeffect]" end="$PARAM[animationend]" time="$PARAM[animationtime]" tween="sine" easing="inout"/>
	          <effect type="$PARAM[animation2effect]" start="$PARAM[animation2start]" end="$PARAM[animation2end]" center="$PARAM[animation2center]" time="$PARAM[animation2time]" delay="$PARAM[animation2delay]" tween="sine" easing="inout"/>
	          <effect type="$PARAM[animation3effect]" start="$PARAM[animation3start]" end="$PARAM[animation3end]" time="$PARAM[animation3time]" delay="$PARAM[animation3delay]" tween="sine" easing="inout"/>
	        </animation>
	      </control>
	    </definition>
	  </include>

		<include name="Artwork_Static">
			<param name="target_id"/>
			<param name="viewtype_label"/>
			<param name="displaytype_label"/>
			<param name="artwork_icon"/>
			<param name="fallback"/>
			<param name="position_-2" default="false"/>
			<param name="position_-1" default="false"/>
			<param name="position_1" default="false"/>
			<param name="position_2" default="false"/>
			<param name="position_3" default="false"/>
			<param name="position_4" default="false"/>
			<param name="position_5" default="false"/>
			<param name="top"/>
			<param name="item_top"/>
			<param name="item_width"/>
			<param name="item_height"/>
			<param name="focus_width"/>
			<param name="focus_height"/>
			<param name="focus_border_visible"/>
			<param name="focus_border_edge"/>
			<param name="focus_border_size"/>
			<param name="focus_border_color"/>
			<param name="focus_border_texture"/>
			<param name="show_gradient"/>
			<param name="show_breadcrumb_overlay" default="false"/>
			<param name="unfocused_overlay"/>
			<param name="artworkmask"/>
			<param name="artworkmaskanimationtype" default="VisibleChange"/>
			<param name="artworkmaskanimationeffect" default="fade"/>
			<param name="artworkmaskanimationstart" default="0"/>
			<param name="artworkmaskanimationend" default="100"/>
			<param name="artworkmaskanimationdelay" default="0"/>
			<param name="artworkmaskanimationcondition" default="false"/>
			<param name="2x_item_width"/>
			<param name="2x_item_width_plus_focus_width"/>
			<param name="3x_item_width_plus_focus_width"/>
			<param name="4x_item_width_plus_focus_width"/>
			<param name="5x_item_width_plus_focus_width"/>
			<param name="6x_item_width_plus_focus_width"/>
			<param name="2x_item_width_minus_dropshadow_width"/>
			<param name="gridview_details_fade" default="false"/>
			<definition>
				<control type="group">
					<animation effect="slide" start="0,0" end="-720,0" time="0" condition="$EXP[GridView_IsVisible] + !$EXP[GridView_Display_IsFanart]">Conditional</animation>
					<animation effect="slide" start="0,0" end="-1184,0" time="0" condition="$EXP[GridView_IsVisible] + $EXP[GridView_Display_IsFanart]">Conditional</animation>
					<left>$PARAM[left]</left>
					<top>$PARAM[top]</top>
					<control type="group">
						<visible>$EXP[$PARAM[viewtype_label]View_Display_Is$PARAM[displaytype_label]] + !$EXP[ContainerSwitching] + !$EXP[OptionsSwitching]</visible>
						<include>Artwork_Fade_Animation</include>
						<control type="group">
							<visible>!$EXP[ContentSwitching]</visible>
							<include content="ListIcon">
								<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
								<param name="position" value="-2"/>
								<param name="left" value="0"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="width" value="$PARAM[item_width]"/>
								<param name="height" value="$PARAM[item_height]"/>
								<param name="fallback" value="$PARAM[fallback]"/>
								<param name="visible" value="$PARAM[position_-2]"/>
								<param name="showgradient" value="$PARAM[show_gradient]"/>
								<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
								<param name="artworkmask" value="$PARAM[unfocused_overlay]"/>
							</include>
							<control type="group">
								<animation effect="slide" start="0,0" end="-$PARAM[item_width],0" time="0" condition="$EXP[StripView_Display_IsFanart] + !$EXP[InfoWidget_Display_IsStripView_Posters] + !$EXP[InfoWidget_Display_IsStripView_Square]">Conditional</animation>
								<include content="ListIcon">
									<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
									<param name="position" value="-1"/>
									<param name="left" value="$PARAM[item_width]"/>
									<param name="top" value="$PARAM[item_top]"/>
									<param name="width" value="$PARAM[item_width]"/>
									<param name="height" value="$PARAM[item_height]"/>
									<param name="fallback" value="$PARAM[fallback]"/>
									<param name="visible" value="$PARAM[position_-1]"/>
									<param name="showgradient" value="$PARAM[show_gradient]"/>
									<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
									<param name="artworkmask" value="$PARAM[unfocused_overlay]"/>
								</include>
							</control>
							<control type="group">
								<animation effect="slide" start="0,0" end="-$PARAM[2x_item_width],0" time="0" condition="$EXP[ShowcaseView_IsVisible]">Conditional</animation>
								<animation effect="slide" start="0,0" end="-$PARAM[item_width],0" time="0" condition="$EXP[StripView_Display_IsFanart] + !$EXP[InfoWidget_Display_IsStripView_Posters] + !$EXP[InfoWidget_Display_IsStripView_Square]">Conditional</animation>
								<include content="ListIcon">
									<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
									<param name="position" value="1"/>
									<param name="left" value="$PARAM[2x_item_width_plus_focus_width]"/>
									<param name="top" value="$PARAM[item_top]"/>
									<param name="width" value="$PARAM[item_width]"/>
									<param name="height" value="$PARAM[item_height]"/>
									<param name="fallback" value="$PARAM[fallback]"/>
									<param name="visible" value="$PARAM[position_1]"/>
									<param name="showgradient" value="$PARAM[show_gradient]"/>
									<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
									<param name="artworkmask" value="$PARAM[unfocused_overlay]"/>
								</include>
								<include content="ListIcon">
									<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
									<param name="position" value="2"/>
									<param name="left" value="$PARAM[3x_item_width_plus_focus_width]"/>
									<param name="top" value="$PARAM[item_top]"/>
									<param name="width" value="$PARAM[item_width]"/>
									<param name="height" value="$PARAM[item_height]"/>
									<param name="fallback" value="$PARAM[fallback]"/>
									<param name="visible" value="$PARAM[position_2]"/>
									<param name="showgradient" value="$PARAM[show_gradient]"/>
									<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
									<param name="artworkmask" value="$PARAM[unfocused_overlay]"/>
								</include>
								<include content="ListIcon">
									<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
									<param name="position" value="3"/>
									<param name="left" value="$PARAM[4x_item_width_plus_focus_width]"/>
									<param name="top" value="$PARAM[item_top]"/>
									<param name="width" value="$PARAM[item_width]"/>
									<param name="height" value="$PARAM[item_height]"/>
									<param name="fallback" value="$PARAM[fallback]"/>
									<param name="visible" value="$PARAM[position_3]"/>
									<param name="showgradient" value="$PARAM[show_gradient]"/>
									<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
									<param name="artworkmask" value="$PARAM[unfocused_overlay]"/>
								</include>
								<include content="ListIcon">
									<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
									<param name="position" value="4"/>
									<param name="left" value="$PARAM[5x_item_width_plus_focus_width]"/>
									<param name="top" value="$PARAM[item_top]"/>
									<param name="width" value="$PARAM[item_width]"/>
									<param name="height" value="$PARAM[item_height]"/>
									<param name="fallback" value="$PARAM[fallback]"/>
									<param name="visible" value="$PARAM[position_4]"/>
									<param name="showgradient" value="$PARAM[show_gradient]"/>
									<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
									<param name="artworkmask" value="$PARAM[unfocused_overlay]"/>
								</include>
								<include content="ListIcon">
									<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
									<param name="position" value="5"/>
									<param name="left" value="$PARAM[6x_item_width_plus_focus_width]"/>
									<param name="top" value="$PARAM[item_top]"/>
									<param name="width" value="$PARAM[item_width]"/>
									<param name="height" value="$PARAM[item_height]"/>
									<param name="fallback" value="$PARAM[fallback]"/>
									<param name="visible" value="$PARAM[position_5]"/>
									<param name="showgradient" value="$PARAM[show_gradient]"/>
									<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
									<param name="artworkmask" value="$PARAM[unfocused_overlay]"/>
								</include>
								<control type="group">
									<visible>!$EXP[TransparentDialog_IsVisible] | $EXP[StripView_IsVisible]</visible>
									<include>Content_Fade_Animation</include>
									<!-- Dropshadow Left Side -->
									<include content="DropShadow">
										<param name="left" value="$PARAM[2x_item_width_minus_dropshadow_width]"/>
										<param name="top" value="$PARAM[item_top]"/>
										<param name="height" value="$PARAM[item_height]"/>
										<param name="visible" value="[!String.IsEmpty(Container.ListItemNoWrap(-1).Label) + [[$EXP[StripView_IsVisible] + [$EXP[StripView_Details_Off] | $EXP[InfoWidget_Display_IsStripView]]] | $EXP[GridView_IsVisible]]] | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container.ListItemNoWrap(-1).Art(thumb))]"/>
									</include>
									<!-- Dropshadow Right Side -->
									<include content="DropShadow">
										<param name="left" value="$PARAM[2x_item_width_plus_focus_width]"/>
										<param name="top" value="$PARAM[item_top]"/>
										<param name="height" value="$PARAM[item_height]"/>
										<param name="flipx" value="true"/>
										<param name="visible" value="[!String.IsEmpty(Container.ListItemNoWrap(1).Label) + [[$EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off] + !Control.HasFocus(60) + !Control.HasFocus(3000) + !$EXP[InfoWidget_HasFocus]] | $EXP[StripView_IsVisible] | $EXP[GridView_IsVisible]]] | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container.ListItemNoWrap(1).Art(thumb))]"/>
									</include>
								</control>
								<include content="ListIcon">
									<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
									<param name="left" value="$PARAM[2x_item_width]"/>
									<param name="width" value="$PARAM[focus_width]"/>
									<param name="height" value="$PARAM[focus_height]"/>
									<param name="switchingtosecondarylistanimation" value="Secondary_List_Scroll_Animation"/>
									<param name="fallback" value="$PARAM[fallback]"/>
									<param name="showgradient" value="$PARAM[show_gradient]"/>
									<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
									<param name="artworkmask" value="$PARAM[artworkmask]"/>
									<param name="artworkmaskanimationtype" value="$PARAM[artworkmaskanimationtype]"/>
									<param name="artworkmaskanimationcondition" value="$PARAM[artworkmaskanimationcondition]"/>
									<param name="artworkmaskanimationeffect" value="$PARAM[artworkmaskanimationeffect]"/>
									<param name="artworkmaskanimationstart" value="$PARAM[artworkmaskanimationstart]"/>
									<param name="artworkmaskanimationend" value="$PARAM[artworkmaskanimationend]"/>
									<param name="artworkmaskanimationdelay" value="$PARAM[artworkmaskanimationdelay]"/>
									<param name="bordervisible" value="$PARAM[focus_border_visible]"/>
									<param name="borderedge" value="$PARAM[focus_border_edge]"/>
									<param name="bordersize" value="$PARAM[focus_border_size]"/>
									<param name="bordercolor" value="$PARAM[focus_border_color]"/>
									<param name="bordertexture" value="$PARAM[focus_border_texture]"/>
								</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group">
					<visible>$EXP[ShowcaseView_IsVisible]</visible>
					<width>$PARAM[focus_width]</width>
					<height>$PARAM[focus_height]</height>
					<control type="group">
						<visible>$EXP[ShowcaseView_Display_Is$PARAM[displaytype_label]]</visible>
						<include>Delayed_Content_Fade_Animation</include>
						<control type="group">
							<visible>!$EXP[ContainerSwitching] + !$EXP[OptionsSwitching] + !$EXP[ContentSwitching] + !$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(60) + !$EXP[Secondary_List_ContainerSwitching] + !$EXP[Secondary_List_ContentSwitching] + [!Window.IsVisible(1121) | Control.HasFocus(502)]</visible>
							<include>Delayed_Content_Fade_Animation</include>
							<control type="grouplist">
								<left>30</left>
								<right>30</right>
								<visible>$EXP[ShowcaseView_Details_Overlay_IsVisible] + [[!Control.HasFocus(4501) + !$EXP[ListItem(0)_NowPlaying]] | [Control.HasFocus(4501) + !$EXP[Secondary_List_NowPlaying_External]]]</visible>
								<orientation>vertical</orientation>
								<align>center</align>
								<itemgap>0</itemgap>
								<control type="textbox">
									<visible>$EXP[ShowcaseView_Display_IsSquare]</visible>
									<height max="260">auto</height>
									<font>Showcase_Overlay_Title</font>
									<textcolor>$VAR[Light_Color]</textcolor>
									<label>$VAR[Title_Label]</label>
									<align>center</align>
									<aligny>center</aligny>
								</control>
								<control type="textbox">
									<visible>$EXP[ShowcaseView_Display_IsPosters]</visible>
									<height max="260">auto</height>
									<font>Showcase_Title</font>
									<textcolor>$VAR[Light_Color]</textcolor>
									<label>$VAR[Title_Label]</label>
									<align>center</align>
									<aligny>center</aligny>
								</control>
								<control type="label">
									<visible>$EXP[ShowcaseView_Details_Info_Overlay_IsVisible]</visible>
									<height max="70">auto</height>
									<font>Showcase_Info</font>
									<textcolor>$VAR[Light_Color]</textcolor>
									<label>$VAR[Info_Label]</label>
									<align>center</align>
								</control>
							</control>
						</control>
					</control>
				</control>
			</definition>
		</include>

		<include name="Artwork_Transition_Fade">
			<param name="visible" default="true"/>
			<param name="target_id"/>
			<param name="artwork_icon" default="Thumbnail"/>
			<param name="fallback"/>
			<param name="aspectratio" default="scale"/>
			<param name="artworkmask" default="false"/>
			<param name="showgradient" default="false"/>
			<param name="show_breadcrumb_overlay" default="false"/>
			<definition>
				<control type="group">
					<visible>$PARAM[visible]</visible>
					<control type="group">
						<visible>!$EXP[OptionsSwitching]</visible>
						<include>Artwork_Fade_Animation</include>
						<!-- STATIC -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="visible" value="!$EXP[ContentSwitching] | String.IsEqual(Container($PARAM[target_id]).NumItems,1) | String.IsEqual(Control.GetLabel($PARAM[target_id]21),Control.GetLabel($PARAM[target_id]22)) | String.IsEqual(Control.GetLabel($PARAM[target_id]21),Control.GetLabel($PARAM[target_id]20))"/>
							<param name="switchingtosecondarylistanimation" value="Secondary_List_Scroll_Animation"/>
							<param name="aspectratio" value="$PARAM[aspectratio]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="artworkmask" value="$PARAM[artworkmask]"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
						</include>
						<!-- HOLD / FADE OUT PREVIOUS -->
						<control type="group">
							<visible>$EXP[ContentPrevious] + !$EXP[ContentNext] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1) + !String.IsEqual(Control.GetLabel($PARAM[target_id]21),Control.GetLabel($PARAM[target_id]22))</visible>
							<!-- Fade Out Icon 0 if aspect ratio not fixed -->
							<include content="ListIcon">
								<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
								<param name="position" value="1"/>
								<param name="visible" value="Container($PARAM[target_id]).OnPrevious + Container($PARAM[target_id]).Content(files)"/>
								<param name="aspectratio" value="$PARAM[aspectratio]"/>
								<param name="fallback" value="$PARAM[fallback]"/>
								<param name="animationtype" value="Hidden"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="fade"/>
								<param name="animationend" value="0"/>
								<param name="artworkmask" value="$PARAM[artworkmask]"/>
								<param name="showgradient" value="$PARAM[showgradient]"/>
								<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							</include>
							<!-- Hold in place Icon 0 if aspectratio is fixed -->
							<include content="ListIcon">
								<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
								<param name="position" value="1"/>
								<param name="visible" value="$EXP[ContentPrevious] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1) + [!Container($PARAM[target_id]).Content(files) | $EXP[BillboardView_IsVisible]]"/>
								<param name="aspectratio" value="$PARAM[aspectratio]"/>
								<param name="fallback" value="$PARAM[fallback]"/>
								<param name="artworkmask" value="$PARAM[artworkmask]"/>
								<param name="showgradient" value="$PARAM[showgradient]"/>
								<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							</include>
						</control>
						<!-- HOLD / FADE OUT NEXT -->
						<control type="group">
						  <visible>$EXP[ContentNext] + !$EXP[ContentPrevious] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1) + !String.IsEqual(Control.GetLabel($PARAM[target_id]21),Control.GetLabel($PARAM[target_id]20))</visible>
							<!-- Fade Out Icon 0 if aspect ratio not fixed -->
						  <include content="ListIcon">
								<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						    <param name="position" value="-1"/>
						    <param name="visible" value="Container($PARAM[target_id]).OnNext + Container($PARAM[target_id]).Content(files) + !$EXP[BillboardView_IsVisible]"/>
						    <param name="aspectratio" value="$PARAM[aspectratio]"/>
						    <param name="fallback" value="$PARAM[fallback]"/>
						    <param name="animationtype" value="Hidden"/>
						    <param name="animationcondition" value="true"/>
						    <param name="animationeffect" value="fade"/>
						    <param name="animationend" value="0"/>
						    <param name="artworkmask" value="$PARAM[artworkmask]"/>
						    <param name="showgradient" value="$PARAM[showgradient]"/>
								<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
						  </include>
							<!-- Hold in place Icon 0 if aspectratio is fixed -->
							<include content="ListIcon">
								<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
								<param name="position" value="-1"/>
								<param name="visible" value="[$EXP[ContentNext] + [!Container($PARAM[target_id]).Content(files) | $EXP[BillboardView_IsVisible]]] | String.IsEqual(Container($PARAM[target_id]).NumItems,1)"/>
								<param name="aspectratio" value="$PARAM[aspectratio]"/>
								<param name="fallback" value="$PARAM[fallback]"/>
								<param name="artworkmask" value="$PARAM[artworkmask]"/>
								<param name="showgradient" value="$PARAM[showgradient]"/>
								<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							</include>
						</control>
					</control>
					<!-- Multiart -->
					<control type="group">
						<visible>Window.Is(videos) | Window.Is(music)</visible>
						<control type="group">
							<visible>Skin.HasSetting(Multiart_Slideshow) + !Container.Content(addons)</visible>
							<include>Secondary_List_Scroll_Animation</include>
							<control type="image">
								<visible>!$EXP[ContainerSwitching] + !$EXP[OptionsSwitching] + !$EXP[ContentSwitching] + !$EXP[InfoDialog_IsVisible] + !String.IsEqual(Control.GetLabel(398041),blank)</visible>
								<include>Multiart_Backing_Fade_Animation</include>
								<texture colordiffuse="ff808080">views/white_100.png</texture>
								<aspectratio>stretch</aspectratio>
							</control>
							<control type="group">
								<visible>!$EXP[ContainerSwitching] + !$EXP[OptionsSwitching] + !$EXP[ContentSwitching] + !$EXP[InfoDialog_IsVisible] + !String.IsEqual(Control.GetLabel(398041),blank)</visible>
								<include>Delayed_Multiart_Fade_Animation</include>
								<include content="ListIcon">
									<param name="multiart" value="true"/>
									<param name="fallback" value="false"/>s
									<param name="aspectratio" value="$PARAM[aspectratio]"/>
									<param name="showgradient" value="$PARAM[showgradient]"/>
									<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
									<param name="artworkmask" value="$PARAM[artworkmask]"/>
								</include>
							</control>
						</control>
					</control>
					<!-- FADE IN PREVIOUS -->
					<control type="group">
						<visible>$EXP[ContentPrevious] + !$EXP[ContentNext] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1) + !String.IsEqual(Control.GetLabel($PARAM[target_id]21),Control.GetLabel($PARAM[target_id]22))</visible>
						<animation effect="zoom" start="-45,0,1965,1080" end="0,0,1920,1080" time="135" reversible="false" condition="$EXP[BillboardView_IsVisible] + !Container($PARAM[target_id]).OnPrevious">Conditional</animation>
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="visible" value="!Container($PARAM[target_id]).OnPrevious"/>
							<param name="aspectratio" value="$PARAM[aspectratio]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="animationtype" value="Visible"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="fade"/>
							<param name="animationend" value="100"/>
							<param name="artworkmask" value="$PARAM[artworkmask]"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
						</include>
					</control>
					<!-- FADE IN NEXT -->
					<control type="group">
						<visible>$EXP[ContentNext] + !$EXP[ContentPrevious] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1) + !String.IsEqual(Control.GetLabel($PARAM[target_id]21),Control.GetLabel($PARAM[target_id]20))</visible>
						<animation effect="zoom" start="0,0,1965,1080" end="0,0,1920,1080" time="135" reversible="false" condition="$EXP[BillboardView_IsVisible] + !Container($PARAM[target_id]).OnNext">Conditional</animation>
					  <include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					    <param name="visible" value="!Container($PARAM[target_id]).OnNext"/>
					    <param name="aspectratio" value="$PARAM[aspectratio]"/>
					    <param name="fallback" value="$PARAM[fallback]"/>
					    <param name="animationtype" value="Visible"/>
					    <param name="animationcondition" value="true"/>
					    <param name="animationeffect" value="fade"/>
					    <param name="animationend" value="100"/>
					    <param name="artworkmask" value="$PARAM[artworkmask]"/>
					    <param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
					  </include>
					</control>
					<!-- Artwork mask -->
					<control type="image">
						<include>Secondary_List_Scroll_Animation</include>
						<texture colordiffuse="$VAR[Artwork_Mask]">views/white_100.png</texture>
						<visible>!$EXP[ListView_Display_IsThumbnails] + !$EXP[InfoDialog_IsVisible]</visible>
						<include>Artwork_Fade_Animation</include>
					</control>
				</control>
			</definition>
		</include>

		<include name="Artwork_Transition_Slide">
			<param name="target_id"/>
			<param name="viewtype_label"/>
			<param name="displaytype_label"/>
			<param name="artwork_icon"/>
			<param name="fallback"/>
			<param name="item_top"/>
			<param name="item_height"/>
			<param name="item_width"/>
			<param name="item_width_minus_dropshadow_width"/>
			<param name="item_width_plus_dropshadow_width"/>
			<param name="2x_item_width"/>
			<param name="2x_item_width_plus_focus_width"/>
			<param name="3x_item_width"/>
			<param name="4x_item_width"/>
			<param name="5x_item_width"/>
			<param name="6x_item_width"/>
			<param name="focus_width"/>
			<param name="focus_height"/>
			<param name="focus_border_visible"/>
			<param name="focus_border_edge"/>
			<param name="focus_border_size"/>
			<param name="focus_border_color"/>
			<param name="focus_border_texture"/>
			<param name="aspectratio"/>
			<param name="showgradient" default="!$EXP[ShowcaseView_Details_Overlay_IsVisible]"/>
			<param name="show_breadcrumb_overlay" default="false"/>
			<param name="artworkmask" default="!$EXP[ShowcaseView_Details_Overlay_IsVisible]"/>
			<definition>
				<control type="group">
					<visible>$EXP[$PARAM[viewtype_label]View_Display_Is$PARAM[displaytype_label]] + !$EXP[ContainerSwitching]</visible>
					<include>Artwork_Fade_Animation</include>
					<!-- PREVIOUS SCROLL -->
					<control type="group">
						<visible>$EXP[ContentPrevious] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1)</visible>
						<!-- Details On -->
						<!-- Unfocused Items -->
						<!-- Move Icon -1 to 0, no player -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="-1920"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + [!$EXP[ShowcaseView_Details_Off] | $EXP[InfoWidget_HasFocus]] + !$EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="1920,0"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
						</include>
						<!-- Move Icon 0 to 1 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="1"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + [!$EXP[ShowcaseView_Details_Off] | $EXP[InfoWidget_HasFocus]] + !$EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="1920,0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
						</include>
						<!-- Details Off -->
						<!-- Move -1 to 0 for Gridview Widget -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-1"/>
							<param name="left" value="-$PARAM[2x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + $EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="false"/>
						</include>
						<!-- Move Icon 0 to 1 (Details off, fade in overlay, no musicplayer) -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="1"/>
							<param name="left" value="0"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + [[$EXP[ShowcaseView_Details_Off] + !$EXP[ShowcaseView_Details_Overlay_IsVisible] + !$EXP[InfoWidget_HasFocus]] | $EXP[GridView_IsVisible]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $PARAM[artworkmask]"/>
							<param name="artworkmaskanimationtype" value="Visible"/>
							<param name="artworkmaskanimationcondition" value="true"/>
							<param name="artworkmaskanimationeffect" value="fade"/>
							<param name="artworkmaskanimationstart" value="0"/>
							<param name="artworkmaskanimationend" value="100"/>
						</include>
						<!-- Move Icon 0 to 1 (Overlay details on) -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="1"/>
							<param name="left" value="0"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $EXP[ShowcaseView_Details_Off] + $EXP[ShowcaseView_Details_Overlay_IsVisible] + !$EXP[InfoWidget_HasFocus] + !$EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + !$EXP[GridView_IsVisible]"/>
						</include>
						<!-- Move Icon 1 to 2 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="2"/>
							<param name="left" value="$PARAM[item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(2).Label) + [[$EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus]] | $EXP[GridView_IsVisible]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(2).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(2).Label) + !$EXP[GridView_IsVisible]"/>
						</include>
						<!-- Move Icon 2 to 3 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="3"/>
							<param name="left" value="$PARAM[2x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(3).Label) + [[$EXP[ShowcaseView_Display_IsPosters] + $EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus]] | $EXP[GridView_IsVisible]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(3).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(3).Label) + !$EXP[GridView_IsVisible]"/>
						</include>
						<!-- Move Icon 3 to 4 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="4"/>
							<param name="left" value="$PARAM[3x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(4).Label) + $EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(4).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="false"/>
						</include>
						<!-- Move Icon 4 to 5 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="5"/>
							<param name="left" value="$PARAM[4x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(5).Label) + $EXP[GridView_IsVisible] + !$EXP[GridView_Display_IsFanart]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(5).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="false"/>
						</include>
						<!-- Move Icon 6 to 5 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="6"/>
							<param name="left" value="$PARAM[5x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(6).Label) + $EXP[GridView_IsVisible] + !$EXP[GridView_Display_IsFanart]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(6).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="false"/>
						</include>
						<!-- DROPSHADOW -->
						<control type="group">
							<visible>![$EXP[TransparentDialog_IsVisible] | Control.HasFocus(60)]</visible>
							<include>Content_Fade_Animation</include>
							<!-- Dropshadow for icon -1 to 0 -->
							<!-- Left Side -->
							<include content="DropShadow">
								<param name="left" value="-$PARAM[item_width_plus_dropshadow_width]"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="width" value="120"/>
								<param name="height" value="$PARAM[item_height]"/>
								<param name="visible" value="!Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + $EXP[GridView_IsVisible]"/>
								<param name="animationtype" value="Visible"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="slide"/>
								<param name="animationend" value="$PARAM[item_width]"/>
							</include>
							<!-- Right Side -->
							<include content="DropShadow">
								<param name="left" value="0"/>
								<param name="width" value="120"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="height" value="$PARAM[item_height]"/>
								<param name="flipx" value="true"/>
								<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $EXP[GridView_IsVisible]"/>
								<param name="animationtype" value="Hidden"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="slide"/>
								<param name="animationend" value="$PARAM[item_width]"/>
							</include>
							<include content="DropShadow">
								<param name="left" value="0"/>
								<param name="width" value="1"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="height" value="$PARAM[item_height]"/>>
								<param name="flipx" value="true"/>
								<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus]"/>
								<param name="animationtype" value="Hidden"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="zoom"/>
								<param name="animationend" value="$PARAM[item_width],0,120,$PARAM[item_height]"/>
								<param name="animation2effect" value="fade"/>
								<param name="animation2start" value="0"/>
								<param name="animation2end" value="100"/>
								<param name="animation2delay" value="95"/>
								<param name="animation2time" value="285"/>
							</include>
							<!-- Dropshadow for icon 0 to 1 -->
							<!-- Right Side -->
							<include content="DropShadow">
								<param name="left" value="$PARAM[item_width]"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="height" value="$PARAM[item_height]"/>
								<param name="flipx" value="true"/>
								<param name="visible" value="Container($PARAM[target_id]).OnPrevious + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(2).Label) + $EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus]"/>
								<param name="animationtype" value="Hidden"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="zoom"/>
								<param name="animationend" value="$PARAM[2x_item_width],0,0,$PARAM[item_height]"/>
								<param name="animation2effect" value="fade"/>
								<param name="animation2start" value="100"/>
								<param name="animation2end" value="0"/>
								<param name="animation2delay" value="0"/>
								<param name="animation2time" value="285"/>
							</include>
						</control>
						<!-- FOCUSED ITEM -->
						<!-- Move Icon -1 to 0 (Details off, fade out overlay), no musicplayer -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="-$PARAM[item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + $EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus] + !$EXP[ShowcaseView_Details_Overlay_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="bordervisible" value="$PARAM[focus_border_visible]"/>
							<param name="bordersize" value="$PARAM[focus_border_size]"/>
							<param name="bordercolor" value="$PARAM[focus_border_color]"/>
							<param name="bordertexture" value="$PARAM[focus_border_texture]"/>
							<param name="artworkmask" value="Container($PARAM[target_id]).OnPrevious + $PARAM[artworkmask]"/>
							<param name="artworkmaskanimationtype" value="Hidden"/>
							<param name="artworkmaskanimationcondition" value="true"/>
							<param name="artworkmaskanimationeffect" value="fade"/>
							<param name="artworkmaskanimationstart" value="100"/>
							<param name="artworkmaskanimationend" value="0"/>
						</include>
						<!-- Move Icon -1 to 0 (Overlay details on, no musicplayer) -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="-$PARAM[item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + $EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus] + $EXP[ShowcaseView_Details_Overlay_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="bordervisible" value="$PARAM[focus_border_visible]"/>
							<param name="bordersize" value="$PARAM[focus_border_size]"/>
							<param name="bordercolor" value="$PARAM[focus_border_color]"/>
							<param name="bordertexture" value="$PARAM[focus_border_texture]"/>
							<param name="artworkmask" value="true"/>
						</include>
						<!-- Move Icon -1 to 0 for GridView Widget -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="-$PARAM[item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + $EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="bordervisible" value="$PARAM[focus_border_visible]"/>
							<param name="borderedge" value="$PARAM[focus_border_edge]"/>
							<param name="bordersize" value="$PARAM[focus_border_size]"/>
							<param name="bordercolor" value="$PARAM[focus_border_color]"/>
							<param name="bordertexture" value="$PARAM[focus_border_texture]"/>
							<param name="artworkmask" value="Container($PARAM[target_id]).OnPrevious + $PARAM[artworkmask]"/>
							<param name="artworkmaskanimationtype" value="Hidden"/>
							<param name="artworkmaskanimationcondition" value="true"/>
							<param name="artworkmaskanimationeffect" value="fade"/>
							<param name="artworkmaskanimationstart" value="100"/>
							<param name="artworkmaskanimationend" value="0"/>
						</include>
					</control>
					<!-- NEXT SCROLL -->
					<control type="group">
						<visible>$EXP[ContentNext] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1)</visible>
						<!-- Details On -->
						<!-- Move Icon 0 to -1 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-1"/>
							<param name="left" value="0"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + [!$EXP[ShowcaseView_Details_Off] | $EXP[InfoWidget_HasFocus]] + !$EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-2300,0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
						</include>
						<!-- Move Icon 1 to 0 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="2300"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + [!$EXP[ShowcaseView_Details_Off] | $EXP[InfoWidget_HasFocus]] + !$EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-2300,0"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
						</include>
						<!-- Details Off -->
						<!-- Unfocused Items -->
						<!-- Move -1 to -2 - GridView -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-2"/>
							<param name="left" value="-$PARAM[item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-2).Label) + $EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-2).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="false"/>
						</include>
						<!-- Move Icon 0 to -1 (Details off, fade in overlay, no musicplayer) -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-1"/>
							<param name="left" value="0"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + [[$EXP[ShowcaseView_Details_Off] + !$EXP[ShowcaseView_Details_Overlay_IsVisible] + !$EXP[InfoWidget_HasFocus]] | $EXP[GridView_IsVisible]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + $PARAM[artworkmask]"/>
							<param name="artworkmaskanimationtype" value="Visible"/>
							<param name="artworkmaskanimationcondition" value="true"/>
							<param name="artworkmaskanimationeffect" value="fade"/>
							<param name="artworkmaskanimationstart" value="0"/>
							<param name="artworkmaskanimationend" value="100"/>
						</include>
						<!-- Move Icon 0 to -1 (Overlay details on, no musicplayer) -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-1"/>
							<param name="left" value="0"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + $EXP[ShowcaseView_Details_Off] + $EXP[ShowcaseView_Details_Overlay_IsVisible] + !$EXP[InfoWidget_HasFocus] + !$EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label) + !$EXP[GridView_IsVisible]"/>
						</include>
						<!-- Move Icon 2 to 1 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="1"/>
							<param name="left" value="$PARAM[2x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + [[$EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus]] | $EXP[GridView_IsVisible]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + !$EXP[GridView_IsVisible]"/>
						</include>
						<!-- Move Icon 3 to 2 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="2"/>
							<param name="left" value="$PARAM[2x_item_width_plus_focus_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(2).Label) + [[$EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus]] | $EXP[GridView_IsVisible]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(2).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(2).Label) + !$EXP[GridView_IsVisible]"/>
						</include>
						<!-- Move Icon 4 to 3 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="3"/>
							<param name="left" value="$PARAM[4x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(3).Label) + $EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(3).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(3).Label) + !$EXP[GridView_IsVisible]"/>
						</include>
						<!-- Move Icon 5 to 4 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="4"/>
							<param name="left" value="$PARAM[5x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(4).Label) + $EXP[GridView_IsVisible] + !$EXP[GridView_Display_IsFanart]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(4).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="false"/>
						</include>
						<!-- Move Icon 6 to 5 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="5"/>
							<param name="left" value="$PARAM[6x_item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(5).Label) + $EXP[GridView_IsVisible] + !$EXP[GridView_Display_IsFanart]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(5).Label) + $PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="artworkmask" value="false"/>
						</include>
						<!-- DROPSHADOW -->
						<control type="group">
							<visible>!$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(60)</visible>
							<include>Content_Fade_Animation</include>
							<!-- Dropshadow for icon 1 to 0 -->
							<!-- Left Side -->
							<include content="DropShadow">
								<param name="left" value="$PARAM[item_width_minus_dropshadow_width]"/>
								<param name="width" value="120"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="height" value="$PARAM[item_height]"/>
								<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $EXP[GridView_IsVisible]"/>
								<param name="animationtype" value="Hidden"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="slide"/>
								<param name="animationend" value="-$PARAM[item_width]"/>
							</include>
							<include content="DropShadow">
								<param name="left" value="$PARAM[item_width]"/>
								<param name="width" value="1"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="height" value="$PARAM[item_height]"/>
								<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus]"/>
								<param name="animationtype" value="Hidden"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="zoom"/>
								<param name="animationend" value="-120,0,120,$PARAM[item_height]"/>
								<param name="animation2effect" value="fade"/>
								<param name="animation2start" value="0"/>
								<param name="animation2end" value="100"/>
								<param name="animation2delay" value="95"/>
								<param name="animation2time" value="285"/>
							</include>
							<!-- Right Side -->
							<include content="DropShadow">
								<param name="left" value="$PARAM[2x_item_width]"/>
								<param name="width" value="120"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="height" value="$PARAM[item_height]"/>
								<param name="flipx" value="true"/>
								<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $EXP[GridView_IsVisible]"/>
								<param name="animationtype" value="Hidden"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="slide"/>
								<param name="animationend" value="-$PARAM[item_width]"/>
							</include>
							<include content="DropShadow">
								<param name="left" value="$PARAM[2x_item_width]"/>
								<param name="width" value="1"/>
								<param name="top" value="$PARAM[item_top]"/>
								<param name="height" value="$PARAM[item_height]"/>
								<param name="flipx" value="true"/>
								<param name="visible" value="Container($PARAM[target_id]).OnNext + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) + $EXP[ShowcaseView_Details_Off] + !$EXP[InfoWidget_HasFocus]"/>
								<param name="animationtype" value="Hidden"/>
								<param name="animationcondition" value="true"/>
								<param name="animationeffect" value="zoom"/>
								<param name="animationend" value="$PARAM[item_width],0,120,$PARAM[item_height]"/>
								<param name="animation2effect" value="fade"/>
								<param name="animation2start" value="0"/>
								<param name="animation2end" value="100"/>
								<param name="animation2delay" value="95"/>
								<param name="animation2time" value="285"/>
							</include>
						</control>
						<!-- FOCUSED ITEM -->
						<!-- Move Icon 1 to 0 (Details off, fade out overlay) -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="$PARAM[item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + $EXP[ShowcaseView_Details_Off] + !$EXP[ShowcaseView_Details_Overlay_IsVisible] + !$EXP[InfoWidget_HasFocus] + !$EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="bordervisible" value="$PARAM[focus_border_visible]"/>
							<param name="bordersize" value="$PARAM[focus_border_size]"/>
							<param name="bordercolor" value="$PARAM[focus_border_color]"/>
							<param name="bordertexture" value="$PARAM[focus_border_texture]"/>
							<param name="artworkmask" value="Container($PARAM[target_id]).OnNext + $PARAM[artworkmask]"/>
							<param name="artworkmaskanimationtype" value="Hidden"/>
							<param name="artworkmaskanimationcondition" value="true"/>
							<param name="artworkmaskanimationeffect" value="fade"/>
							<param name="artworkmaskanimationstart" value="100"/>
							<param name="artworkmaskanimationend" value="0"/>
						</include>
						<!-- Move Icon 1 to 0 (Overlay details on) -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="$PARAM[item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + $EXP[ShowcaseView_Details_Off] + $EXP[ShowcaseView_Details_Overlay_IsVisible] + !$EXP[InfoWidget_HasFocus] + !$EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="bordervisible" value="$PARAM[focus_border_visible]"/>
							<param name="bordersize" value="$PARAM[focus_border_size]"/>
							<param name="bordercolor" value="$PARAM[focus_border_color]"/>
							<param name="bordertexture" value="$PARAM[focus_border_texture]"/>
							<param name="artworkmask" value="true"/>
						</include>
						<!-- Move Icon -1 to 0 for GridView Widget -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="$PARAM[item_width]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + $EXP[GridView_IsVisible]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
							<param name="showgradient" value="$PARAM[showgradient]"/>
							<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
							<param name="bordervisible" value="$PARAM[focus_border_visible]"/>
							<param name="borderedge" value="$PARAM[focus_border_edge]"/>
							<param name="bordersize" value="$PARAM[focus_border_size]"/>
							<param name="bordercolor" value="$PARAM[focus_border_color]"/>
							<param name="bordertexture" value="$PARAM[focus_border_texture]"/>
							<param name="artworkmask" value="Container($PARAM[target_id]).OnNext + $PARAM[artworkmask]"/>
							<param name="artworkmaskanimationtype" value="Hidden"/>
							<param name="artworkmaskanimationcondition" value="true"/>
							<param name="artworkmaskanimationeffect" value="fade"/>
							<param name="artworkmaskanimationstart" value="100"/>
							<param name="artworkmaskanimationend" value="0"/>
						</include>
					</control>
				</control>
			</definition>
		</include>

		<include name="Artwork_Transition_Slide_and_Zoom">
			<param name="target_id"/>
			<param name="viewtype_label"/>
			<param name="displaytype_label"/>
			<param name="artwork_icon"/>
			<param name="fallback"/>
			<param name="top"/>
			<param name="item_top"/>
			<param name="item_width"/>
			<param name="item_height"/>
			<param name="focus_width"/>
			<param name="focus_height"/>
			<param name="2x_item_width"/>
			<param name="2x_item_width_plus_focus_width"/>
			<param name="2x_item_width_minus_dropshadow_width"/>
			<param name="3x_item_width_plus_focus_width"/>
			<param name="4x_item_width_plus_focus_width"/>
			<definition>
				<control type="group">
					<visible>$EXP[$PARAM[viewtype_label]View_Display_Is$PARAM[displaytype_label]] + !$EXP[ContainerSwitching]</visible>
					<include>Artwork_Fade_Animation</include>
					<top>$PARAM[top]</top>
					<animation effect="slide" start="0,0" end="-960,0" time="0" condition="$EXP[StripView_Display_IsFanart] + !$EXP[InfoWidget_Display_IsStripView_Posters] + !$EXP[InfoWidget_Display_IsStripView_Square]">Conditional</animation>
					<!-- PREVIOUS SCROLL -->
					<control type="group">
						<visible>$EXP[ContentPrevious] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1)</visible>
						<!-- Move Icon -3 to -2 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-2"/>
							<param name="left" value="-$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + [[!$EXP[$PARAM[viewtype_label]View_Display_IsFanart] + $EXP[$PARAM[viewtype_label]View_Details_Off]] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View_Posters] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View_Square]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
						</include>
						<!-- Move Icon -2 to -1 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-1"/>
							<param name="left" value="0"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + [$EXP[$PARAM[viewtype_label]View_Details_Off] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
						</include>
						<!-- Move Icon -1 to 0 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + [$EXP[$PARAM[viewtype_label]View_Details_Off] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width],0,$PARAM[focus_width],$PARAM[focus_height]"/>
						</include>
						<!-- Alternative Animation if Details On -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="-$PARAM[focus_width]"/>
							<param name="top" value="0"/>
							<param name="width" value="$PARAM[focus_width]"/>
							<param name="height" value="$PARAM[focus_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious  + !$EXP[$PARAM[viewtype_label]View_Details_Off] + !$EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[2x_item_width_plus_focus_width],0"/>
						</include>
						<!-- Move Icon 0 to 1 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="1"/>
							<param name="left" value="$PARAM[2x_item_width]"/>
							<param name="top" value="0"/>
							<param name="width" value="$PARAM[focus_width]"/>
							<param name="height" value="$PARAM[focus_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width_plus_focus_width],$PARAM[item_top],$PARAM[item_width],$PARAM[item_height]"/>
						</include>
						<!-- Move Icon 1 to 2 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="2"/>
							<param name="left" value="$PARAM[2x_item_width_plus_focus_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
						</include>
						<!-- Move Icon 2 to 3 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="3"/>
							<param name="left" value="$PARAM[3x_item_width_plus_focus_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + [!$EXP[$PARAM[viewtype_label]View_Display_IsFanart] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View_Posters] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View_Square]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="$PARAM[item_width],0"/>
						</include>
						<!-- Dropshadow for icon 0 to 1 -->
						<!-- Left Side -->
						<include content="DropShadow">
							<param name="left" value="$PARAM[2x_item_width_minus_dropshadow_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + [[[$EXP[$PARAM[viewtype_label]View_Details_Off] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]] + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label)] | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Art(thumb))]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width_plus_focus_width],0,0,$PARAM[focus_height]"/>
							<param name="animation2effect" value="zoom"/>
							<param name="animation2end" value="0,100"/>
							<param name="animation2time" value="210"/>
							<param name="animation2center" value="$PARAM[2x_item_width],540"/>
							<param name="animation3effect" value="fade"/>
							<param name="animation3end" value="0"/>
							<param name="animation3time" value="210"/>
						</include>
						<!-- Right Side -->
						<include content="DropShadow">
							<param name="left" value="$PARAM[2x_item_width_plus_focus_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="flipx" value="true"/>
							<param name="visible" value="Container($PARAM[target_id]).OnPrevious + [!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(2).Label) | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Art(thumb))]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[3x_item_width_plus_focus_width],$PARAM[item_top],0,$PARAM[item_height]"/>
							<param name="animation2effect" value="fade"/>
							<param name="animation2end" value="0"/>
							<param name="animation2delay" value="20"/>
							<param name="animation2time" value="360"/>
						</include>
						<!-- Dropshadow for icon -1 to 0 -->
						<!-- Left Side -->
						<include content="DropShadow">
							<param name="left" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="1"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="visible" value="!Container($PARAM[target_id]).OnPrevious + [[[$EXP[$PARAM[viewtype_label]View_Details_Off] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]] + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Label)] | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-1).Art(thumb))]]"/>
							<param name="animationtype" value="Visible"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width_minus_dropshadow_width],$PARAM[item_top],120,$PARAM[item_height]"/>
							<param name="animation2effect" value="fade"/>
							<param name="animation2start" value="0"/>
							<param name="animation2end" value="100"/>
							<param name="animation2delay" value="20"/>
							<param name="animation2time" value="360"/>
						</include>
						<!-- Dropshadow for icon -1 to 0 -->
						<!-- Right Side -->
						<include content="DropShadow">
							<param name="left" value="$PARAM[2x_item_width]"/>
							<param name="top" value="0"/>
							<param name="width" value="1"/>
							<param name="height" value="$PARAM[focus_height]"/>
							<param name="flipx" value="true"/>
							<param name="visible" value="!Container($PARAM[target_id]).OnPrevious + [!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Art(thumb))]]"/>
							<param name="animationtype" value="Visible"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width_plus_focus_width],$PARAM[item_top],120,$PARAM[item_height]"/>
							<param name="animation2effect" value="fade"/>
							<param name="animation2start" value="0"/>
							<param name="animation2end" value="100"/>
							<param name="animation2delay" value="210"/>
							<param name="animation2time" value="170"/>
						</include>
					</control>
					<!-- NEXT SCROLL -->
					<control type="group">
						<visible>$EXP[ContentNext] + !String.IsEqual(Container($PARAM[target_id]).NumItems,1)</visible>
						<!-- Move Icon -2 to -3 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-3"/>
							<param name="left" value="0"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + [[!$EXP[$PARAM[viewtype_label]View_Display_IsFanart] + $EXP[$PARAM[viewtype_label]View_Details_Off]] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View_Posters] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View_Square]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
						</include>
						<!-- Move Icon -1 to -2 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-2"/>
							<param name="left" value="$PARAM[item_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + [$EXP[$PARAM[viewtype_label]View_Details_Off] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
						</include>
						<!-- Move Icon 0 to -1 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-1"/>
							<param name="left" value="$PARAM[2x_item_width]"/>
							<param name="top" value="0"/>
							<param name="width" value="$PARAM[focus_width]"/>
							<param name="height" value="$PARAM[focus_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + [$EXP[$PARAM[viewtype_label]View_Details_Off] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[item_width],$PARAM[item_top],$PARAM[item_width],$PARAM[item_height]"/>
						</include>
						<!-- Alternative Animation if Details On -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="-1"/>
							<param name="left" value="$PARAM[2x_item_width]"/>
							<param name="top" value="0"/>
							<param name="width" value="$PARAM[focus_width]"/>
							<param name="height" value="$PARAM[focus_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + !$EXP[$PARAM[viewtype_label]View_Details_Off] + !$EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[2x_item_width_plus_focus_width],0"/>
						</include>
						<!-- Move Icon 1 to 0 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="left" value="$PARAM[2x_item_width_plus_focus_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width],0,$PARAM[focus_width],$PARAM[focus_height]"/>
						</include>
						<!-- Move Icon 2 to 1 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="1"/>
							<param name="left" value="$PARAM[3x_item_width_plus_focus_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
						</include>
						<!-- Move Icon 3 to 2 -->
						<include content="ListIcon">
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
							<param name="position" value="2"/>
							<param name="left" value="$PARAM[4x_item_width_plus_focus_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="$PARAM[item_width]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="fallback" value="$PARAM[fallback]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + [!$EXP[$PARAM[viewtype_label]View_Display_IsFanart] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View_Posters] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View_Square]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="slide"/>
							<param name="animationend" value="-$PARAM[item_width],0"/>
						</include>
						<!-- Dropshadow for icon 0 to -1 -->
						<!-- Left Side -->
						<include content="DropShadow">
							<param name="left" value="$PARAM[2x_item_width_minus_dropshadow_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + [[[$EXP[$PARAM[viewtype_label]View_Details_Off] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]] + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-2).Label)] | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(-2).Art(thumb))]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[item_width],$PARAM[item_top],0,$PARAM[item_height]"/>
							<param name="animation2effect" value="fade"/>
							<param name="animation2end" value="0"/>
							<param name="animation2delay" value="20"/>
							<param name="animation2time" value="360"/>
						</include>
						<!-- Right Side -->
						<include content="DropShadow">
							<param name="left" value="$PARAM[2x_item_width_plus_focus_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="flipx" value="true"/>
							<param name="visible" value="Container($PARAM[target_id]).OnNext + [!String.IsEqual(Container($PARAM[target_id]).CurrentItem,1) | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Art(thumb))]]"/>
							<param name="animationtype" value="Hidden"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width],0,0,$PARAM[focus_height]"/>
							<param name="animation2effect" value="zoom"/>
							<param name="animation2end" value="0,100"/>
							<param name="animation2time" value="210"/>
							<param name="animation2center" value="$PARAM[2x_item_width_plus_focus_width],540"/>
							<param name="animation3effect" value="fade"/>
							<param name="animation3end" value="0"/>
							<param name="animation3time" value="210"/>
						</include>
						<!-- Dropshadow for icon 1 to 0 -->
						<!-- Left Side -->
						<include content="DropShadow">
							<param name="left" value="$PARAM[2x_item_width_plus_focus_width]"/>
							<param name="top" value="0"/>
							<param name="width" value="1"/>
							<param name="height" value="$PARAM[focus_height]"/>
							<param name="visible" value="!Container($PARAM[target_id]).OnNext + [[[$EXP[$PARAM[viewtype_label]View_Details_Off] | $EXP[InfoWidget_Display_Is$PARAM[viewtype_label]View]] + !String.IsEqual(Container($PARAM[target_id]).CurrentItem,1)] | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Art(thumb))]]"/>
							<param name="animationtype" value="Visible"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width_minus_dropshadow_width],$PARAM[item_top],120,$PARAM[item_height]"/>
							<param name="animation2effect" value="fade"/>
							<param name="animation2start" value="0"/>
							<param name="animation2end" value="100"/>
							<param name="animation2delay" value="210"/>
							<param name="animation2time" value="170"/>
						</include>
						<!-- Right Side -->
						<include content="DropShadow">
							<param name="left" value="$PARAM[3x_item_width_plus_focus_width]"/>
							<param name="top" value="$PARAM[item_top]"/>
							<param name="width" value="1"/>
							<param name="height" value="$PARAM[item_height]"/>
							<param name="flipx" value="true"/>
							<param name="visible" value="!Container($PARAM[target_id]).OnNext + [!String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Label) | [Window.IsVisible(addoninformation) + !String.IsEmpty(Container($PARAM[target_id]).ListItemNoWrap(1).Art(thumb))]]"/>
							<param name="animationtype" value="Visible"/>
							<param name="animationcondition" value="true"/>
							<param name="animationeffect" value="zoom"/>
							<param name="animationend" value="$PARAM[2x_item_width_plus_focus_width],$PARAM[item_top],120,$PARAM[item_height]"/>
							<param name="animation2effect" value="fade"/>
							<param name="animation2start" value="0"/>
							<param name="animation2end" value="100"/>
							<param name="animation2delay" value="20"/>
							<param name="animation2time" value="360"/>
						</include>
					</control>
				</control>
			</definition>
		</include>

		<include name="MultiArt">
			<param name="viewtype_label"/>
			<param name="displaytype_label"/>
			<param name="left"/>
			<param name="top"/>
			<param name="item_top"/>
			<param name="item_width"/>
			<param name="item_height"/>
			<param name="focus_width"/>
			<param name="focus_height"/>
			<param name="focus_border_visible"/>
			<param name="focus_border_edge"/>
			<param name="focus_border_size"/>
			<param name="focus_border_color"/>
			<param name="focus_border_texture"/>
			<param name="2x_item_width"/>
			<param name="2x_item_width_plus_focus_width"/>
			<param name="show_gradient"/>
			<param name="artwork_mask"/>
			<param name="artwork_mask_animation_condition" default="false"/>
			<param name="show_breadcrumb_overlay" default="false"/>
			<definition>
				<control type="group">
					<animation effect="slide" start="0,0" end="-$PARAM[item_width],0" time="0" condition="$EXP[StripView_Display_IsFanart] + !$EXP[InfoWidget_Display_IsStripView_Posters] + !$EXP[InfoWidget_Display_IsStripView_Square]">Conditional</animation>
					<visible>Window.Is(videos) | Window.Is(music) | Window.Is(home)</visible>
					<left>$PARAM[left]</left>
					<top>$PARAM[top]</top>
					<width>$PARAM[focus_width]</width>
					<height>$PARAM[focus_height]</height>
					<include>Secondary_List_Scroll_Animation</include>
					<control type="group">
						<animation effect="slide" end="1920,0" time="360" tween="sine" easing="inout" reversible="false" condition="$EXP[ShowcaseView_IsVisible] + $EXP[ContentPrevious] + !Container.OnPrevious + !$EXP[ShowcaseView_Details_Off]">Conditional</animation>
						<animation effect="slide" end="$PARAM[item_width],0" time="360" tween="sine" easing="inout" reversible="false" condition="$EXP[ShowcaseView_IsVisible] + $EXP[ContentPrevious] + !Container.OnPrevious + $EXP[ShowcaseView_Details_Off]">Conditional</animation>
						<animation effect="slide" end="-1920,0" time="360" tween="sine" easing="inout" reversible="false" condition="$EXP[ShowcaseView_IsVisible] + $EXP[ContentNext] + !Container.OnNext + !$EXP[ShowcaseView_Details_Off]">Conditional</animation>
						<animation effect="slide" end="-$PARAM[item_width],0" time="360" tween="sine" easing="inout" reversible="false" condition="$EXP[ShowcaseView_IsVisible] + $EXP[ContentNext] + !Container.OnNext + $EXP[ShowcaseView_Details_Off]">Conditional</animation>
						<animation effect="zoom" end="$PARAM[focus_width],$PARAM[item_top],$PARAM[item_width],$PARAM[item_height]" time="360" tween="sine" easing="inout" reversible="false" condition="$EXP[StripView_IsVisible] + $EXP[ContentPrevious] + !Container.OnPrevious">Conditional</animation>
						<animation effect="zoom" end="-$PARAM[item_width],$PARAM[item_top],$PARAM[item_width],$PARAM[item_height]" time="360" tween="sine" easing="inout" reversible="false" condition="$EXP[StripView_IsVisible] + $EXP[ContentNext] + !Container.OnNext + $EXP[StripView_Details_Off]">Conditional</animation>
						<animation effect="slide" end="-$PARAM[2x_item_width_plus_focus_width],0" time="360" tween="sine" easing="inout" reversible="false" condition="$EXP[StripView_IsVisible] + $EXP[ContentNext] + !Container.OnNext + !$EXP[StripView_Details_Off]">Conditional</animation>
						<control type="image">
							<visible>$EXP[$PARAM[viewtype_label]View_Display_Is$PARAM[displaytype_label]] + !$EXP[ContainerSwitching] + !$EXP[OptionsSwitching] + !$EXP[ContentSwitching] + !$EXP[InfoDialog_IsVisible] + !String.IsEqual(Control.GetLabel(398041),blank)</visible>
							<include>Multiart_Backing_Fade_Animation</include>
							<texture colordiffuse="ff808080">views/white_100.png</texture>
							<aspectratio>stretch</aspectratio>
						</control>
						<control type="group">
							<visible>$EXP[$PARAM[viewtype_label]View_Display_Is$PARAM[displaytype_label]] + !$EXP[ContainerSwitching] + !$EXP[OptionsSwitching] + !$EXP[ContentSwitching] + !$EXP[InfoDialog_IsVisible] + !String.IsEqual(Control.GetLabel(398041),blank)</visible>
							<include>Multiart_Fade_Animation</include>
							<include content="ListIcon">
								<param name="multiart" value="true"/>
								<param name="fallback" value="false"/>
								<param name="showgradient" value="$PARAM[show_gradient]"/>
								<param name="showbreadcrumboverlay" value="$PARAM[show_breadcrumb_overlay]"/>
								<param name="artworkmask" value="$PARAM[artwork_mask]"/>
								<param name="artworkmaskanimationcondition" value="$PARAM[artwork_mask_animation_condition]"/>
								<param name="bordervisible" value="$PARAM[focus_border_visible]"/>
								<param name="borderedge" value="$PARAM[focus_border_edge]"/>
								<param name="bordersize" value="$PARAM[focus_border_size]"/>
								<param name="bordercolor" value="$PARAM[focus_border_color]"/>
								<param name="bordertexture" value="$PARAM[focus_border_texture]"/>
							</include>
						</control>
					</control>
				</control>
				<control type="group">
					<visible>$EXP[ShowcaseView_IsVisible]</visible>
					<width>$PARAM[focus_width]</width>
					<height>$PARAM[focus_height]</height>
					<control type="group">
						<visible>$EXP[ShowcaseView_Display_Is$PARAM[displaytype_label]]</visible>
						<include>Delayed_Content_Fade_Animation</include>
						<control type="group">
							<visible>!$EXP[ContainerSwitching] + !$EXP[OptionsSwitching] + !$EXP[ContentSwitching] + !$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(60) + !$EXP[Secondary_List_ContainerSwitching] + !$EXP[Secondary_List_ContentSwitching] + [!Window.IsVisible(1121) | Control.HasFocus(502)]</visible>
							<include>Delayed_Content_Fade_Animation</include>
							<control type="grouplist">
								<left>30</left>
								<right>30</right>
								<visible>$EXP[ShowcaseView_Details_Overlay_IsVisible] + [[!Control.HasFocus(4501) + !$EXP[ListItem(0)_NowPlaying]] | [Control.HasFocus(4501) + !$EXP[Secondary_List_NowPlaying_External]]]</visible>
								<orientation>vertical</orientation>
								<align>center</align>
								<itemgap>0</itemgap>
								<control type="textbox">
									<visible>$EXP[ShowcaseView_Display_IsSquare]</visible>
									<height max="260">auto</height>
									<font>Showcase_Overlay_Title</font>
									<textcolor>$VAR[Light_Color]</textcolor>
									<label>$VAR[Title_Label]</label>
									<align>center</align>
									<aligny>center</aligny>
								</control>
								<control type="textbox">
									<visible>$EXP[ShowcaseView_Display_IsPosters]</visible>
									<height max="260">auto</height>
									<font>Showcase_Title</font>
									<textcolor>$VAR[Light_Color]</textcolor>
									<label>$VAR[Title_Label]</label>
									<align>center</align>
									<aligny>center</aligny>
								</control>
								<control type="label">
									<visible>$EXP[ShowcaseView_Details_Info_Overlay_IsVisible]</visible>
									<height max="70">auto</height>
									<font>Showcase_Info</font>
									<textcolor>$VAR[Light_Color]</textcolor>
									<label>$VAR[Info_Label]</label>
									<align>center</align>
								</control>
							</control>
						</control>
					</control>
				</control>
			</definition>
		</include>

		<include name="BillboardView_Art_Fanart">
			<include content="Artwork_Transition_Fade">
				<param name="target_id" value="$PARAM[target_id]"/>
				<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
				<param name="fallback"/>
				<param name="show_breadcrumb_overlay" value="true"/>
				<param name="artworkmask" value="true"/>
			</include>
		</include>

		<include name="ShowcaseView_Art">
			<param name="target_id"/>
			<param name="displaytype_label"/>
			<param name="artwork_icon"/>
			<param name="fallback"/>
			<param name="show_breadcrumb_overlay" default="false"/>
			<param name="focus_border_visible" default="$EXP[ShowcaseView_Details_Off] + !Control.HasFocus(60) + !$EXP[InfoWidget_HasFocus]"/>
			<param name="focus_border_size" default="11"/>
			<param name="focus_border_color" default="$VAR[Light_Color]"/>
			<param name="focus_border_texture" default="views/border_10px.png"/>
			<param name="item_width"/>
			<param name="fallback"/>
			<param name="item_top" default="0"/>
			<param name="item_height" default="100%"/>
			<param name="2x_item_width"/>
			<param name="2x_item_width_plus_focus_width"/>
			<param name="3x_item_width_plus_focus_width"/>
			<param name="2x_item_width_minus_dropshadow_width"/>
			<definition>
				<include content="Artwork_Static">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="viewtype_label" value="Showcase"/>
					<param name="displaytype_label" value="$PARAM[displaytype_label]"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="fallback" value="$PARAM[fallback]"/>
					<param name="position_1" value="[$EXP[ShowcaseView_Details_Off] | $EXP[ShowcaseView_Details_Overlay_IsVisible]] + !$EXP[InfoWidget_HasFocus]"/>
					<param name="position_2" value="$EXP[ShowcaseView_Display_IsPosters] + [$EXP[ShowcaseView_Details_Off] | $EXP[ShowcaseView_Details_Overlay_IsVisible]] + !$EXP[InfoWidget_HasFocus]"/>
					<param name="top" value="0"/>
					<param name="item_top" value="0"/>
					<param name="item_width" value="$PARAM[item_width]"/>
					<param name="item_height" value="$PARAM[item_height]"/>
					<param name="focus_width" value="$PARAM[item_width]"/>
					<param name="focus_height" value="$PARAM[item_height]"/>
					<param name="focus_border_visible" value="$PARAM[focus_border_visible]"/>
					<param name="focus_border_edge" value="0"/>
					<param name="focus_border_size" value="$PARAM[focus_border_size]"/>
					<param name="focus_border_color" value="$PARAM[focus_border_color]"/>
					<param name="focus_border_texture" value="$PARAM[focus_border_texture]"/>
					<param name="show_gradient" value="!$EXP[ShowcaseView_Details_Overlay_IsVisible]"/>
					<param name="show_breadcrumb_overlay" value="$PARAM[show_breadcrumb_overlay]"/>
					<param name="unfocused_overlay" value="true"/>
					<param name="artworkmask" value="$EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Overlay_IsVisible] + !$EXP[InfoWidget_HasFocus]"/>
					<param name="artworkmaskanimationcondition" value="true"/>
					<param name="2x_item_width" value="$PARAM[2x_item_width]"/>
					<param name="2x_item_width_plus_focus_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
					<param name="2x_item_width_minus_dropshadow_width" value="$PARAM[3x_item_width_plus_focus_width]"/>
					<param name="3x_item_width_plus_focus_width" value="$PARAM[3x_item_width_plus_focus_width]"/>
				</include>
				<include content="Artwork_Transition_Slide">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="viewtype_label" value="Showcase"/>
					<param name="displaytype_label" value="$PARAM[displaytype_label]"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="fallback" value="$PARAM[fallback]"/>
					<param name="show_breadcrumb_overlay" value="$PARAM[show_breadcrumb_overlay]"/>
					<param name="focus_border_visible" value="$PARAM[focus_border_visible]"/>
					<param name="focus_border_size" value="$PARAM[focus_border_size]"/>
					<param name="focus_border_color" value="$PARAM[focus_border_color]"/>
					<param name="focus_border_texture" value="$PARAM[focus_border_texture]"/>
					<param name="item_width" value="$PARAM[item_width]"/>
					<param name="item_top" value="$PARAM[item_top]"/>
					<param name="item_height" value="$PARAM[item_height]"/>
					<param name="2x_item_width" value="$PARAM[2x_item_width]"/>
					<param name="2x_item_width_plus_focus_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
				</include>
				<include condition="Skin.HasSetting(Multiart_Slideshow)" content="MultiArt">
					<param name="viewtype_label" value="Showcase"/>
					<param name="displaytype_label" value="$PARAM[displaytype_label]"/>
					<param name="left" value="0"/>
					<param name="top" value="0"/>
					<param name="item_top" value="$PARAM[item_top]"/>
					<param name="item_width" value="$PARAM[item_width]"/>
					<param name="item_height" value="$PARAM[item_height]"/>
					<param name="focus_width" value="$PARAM[item_width]"/>
					<param name="focus_height" value="$PARAM[item_height]"/>
					<param name="focus_border_visible" value="$PARAM[focus_border_visible]"/>
					<param name="focus_border_edge" value="0"/>
					<param name="focus_border_size" value="$PARAM[focus_border_size]"/>
					<param name="focus_border_color" value="$PARAM[focus_border_color]"/>
					<param name="focus_border_texture" value="$PARAM[focus_border_texture]"/>
					<param name="2x_item_width" value="$PARAM[2x_item_width]"/>
					<param name="2x_item_width_plus_focus_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
					<param name="show_gradient" value="!$EXP[ShowcaseView_Details_Overlay_IsVisible]"/>
					<param name="artwork_mask" value="$EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Overlay_IsVisible] + !$EXP[InfoWidget_HasFocus]"/>
					<param name="artwork_mask_animation_condition" value="true"/>
					<param name="show_breadcrumb_overlay" value="$PARAM[show_breadcrumb_overlay]"/>
				</include>
			</definition>
		</include>

		<include name="ShowcaseView_Art_Posters">
			<param name="target_id"/>
			<param name="artwork_icon"/>
			<param name="show_breadcrumb_overlay" default="false"/>
			<definition>
				<include content="ShowcaseView_Art">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="displaytype_label" value="Posters"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="show_breadcrumb_overlay" value="$PARAM[show_breadcrumb_overlay]"/>
					<param name="item_width" value="720"/>
					<param name="2x_item_width" value="1440"/>
					<param name="2x_item_width_plus_focus_width" value="2160"/>
					<param name="3x_item_width_plus_focus_width" value="2880"/>
					<param name="2x_item_width_minus_dropshadow_width" value=""/>
				</include>
			</definition>
		</include>

		<include name="ShowcaseView_Art_Square">
			<param name="target_id"/>
			<param name="artwork_icon"/>
			<param name="show_breadcrumb_overlay" default="false"/>
			<definition>
				<include content="ShowcaseView_Art">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="displaytype_label" value="Square"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="show_breadcrumb_overlay" value="$PARAM[show_breadcrumb_overlay]"/>
					<param name="item_width" value="1080"/>
					<param name="2x_item_width" value="2160"/>
					<param name="2x_item_width_plus_focus_width" value="3240"/>
					<param name="3x_item_width_plus_focus_width" value="2880"/>
				</include>
			</definition>
		</include>


		<include name="StripView_Art">
			<param name="target_id"/>
			<param name="displaytype_label"/>
			<param name="artwork_icon"/>
			<param name="fallback"/>
			<param name="top"/>
			<param name="item_top"/>
			<param name="item_width"/>
			<param name="item_height"/>
			<param name="focus_width"/>
			<param name="focus_height"/>
			<param name="2x_item_width"/>
			<param name="2x_item_width_plus_focus_width"/>
			<param name="2x_item_width_minus_dropshadow_width"/>
			<param name="3x_item_width_plus_focus_width"/>
			<param name="4x_item_width_plus_focus_width"/>
			<definition>
				<include content="Artwork_Static">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="viewtype_label" value="Strip"/>
					<param name="displaytype_label" value="$PARAM[displaytype_label]"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="fallback" value="$PARAM[fallback]"/>
					<param name="position_-2" value="[!$EXP[StripView_Display_IsFanart] + $EXP[StripView_Details_Off]] | $EXP[InfoWidget_Display_IsStripView_Posters] | $EXP[InfoWidget_Display_IsStripView_Square]"/>
					<param name="position_-1" value="$EXP[StripView_Details_Off] | $EXP[InfoWidget_Display_IsStripView]"/>
					<param name="position_1" value="true"/>
					<param name="position_2" value="!$EXP[StripView_Display_IsFanart] | $EXP[InfoWidget_Display_IsStripView_Posters] | $EXP[InfoWidget_Display_IsStripView_Square]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="item_top" value="$PARAM[item_top]"/>
					<param name="item_width" value="$PARAM[item_width]"/>
					<param name="item_height" value="$PARAM[item_height]"/>
					<param name="focus_width" value="$PARAM[focus_width]"/>
					<param name="focus_height" value="$PARAM[focus_height]"/>
					<param name="focus_border_visible" value="true"/>
					<param name="focus_border_edge" value="0"/>
					<param name="focus_border_size" value="2"/>
					<param name="focus_border_color" value="$VAR[Primary_Color]"/>
					<param name="focus_border_texture" value="views/border_1px_10.png"/>
					<param name="show_gradient" value="false"/>
					<param name="unfocused_overlay" value="false"/>
					<param name="artworkmask" value="false"/>
					<param name="2x_item_width" value="$PARAM[2x_item_width]"/>
					<param name="2x_item_width_plus_focus_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
					<param name="3x_item_width_plus_focus_width" value="$PARAM[3x_item_width_plus_focus_width]"/>
					<param name="2x_item_width_minus_dropshadow_width" value="$PARAM[2x_item_width_minus_dropshadow_width]"/>
				</include>
				<include content="Artwork_Transition_Slide_and_Zoom">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="viewtype_label" value="Strip"/>
					<param name="displaytype_label" value="$PARAM[displaytype_label]"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="fallback" value="$PARAM[fallback]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="item_top" value="$PARAM[item_top]"/>
					<param name="item_width" value="$PARAM[item_width]"/>
					<param name="item_height" value="$PARAM[item_height]"/>
					<param name="focus_width" value="$PARAM[focus_width]"/>
					<param name="focus_height" value="$PARAM[focus_height]"/>
					<param name="2x_item_width" value="$PARAM[2x_item_width]"/>
					<param name="2x_item_width_plus_focus_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
					<param name="3x_item_width_plus_focus_width" value="$PARAM[3x_item_width_plus_focus_width]"/>
					<param name="2x_item_width_minus_dropshadow_width" value="$PARAM[2x_item_width_minus_dropshadow_width]"/>
					<param name="4x_item_width_plus_focus_width" value="$PARAM[4x_item_width_plus_focus_width]"/>
				</include>
				<include condition="Skin.HasSetting(Multiart_Slideshow)" content="MultiArt">
					<param name="viewtype_label" value="Strip"/>
					<param name="displaytype_label" value="$PARAM[displaytype_label]"/>
					<param name="left" value="$PARAM[2x_item_width]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="item_top" value="$PARAM[item_top]"/>
					<param name="item_width" value="$PARAM[item_width]"/>
					<param name="item_height" value="$PARAM[item_height]"/>
					<param name="focus_width" value="$PARAM[focus_width]"/>
					<param name="focus_height" value="$PARAM[focus_height]"/>
					<param name="focus_border_visible" value="true"/>
					<param name="focus_border_edge" value="0"/>
					<param name="focus_border_size" value="2"/>
					<param name="focus_border_color" value="$VAR[Primary_Color]"/>
					<param name="focus_border_texture" value="views/border_1px_10.png"/>
					<param name="2x_item_width" value="$PARAM[2x_item_width]"/>
					<param name="2x_item_width_plus_focus_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
					<param name="show_gradient" value="false"/>
					<param name="artwork_mask" value="false"/>
				</include>
			</definition>
		</include>

		<include name="StripView_Art_Posters">
			<param name="target_id"/>
			<param name="artwork_icon"/>
			<definition>
				<control type="group">
					<animation effect="slide" start="0,0" end="-80,0" time="0" condition="true">Conditional</animation>
					<include content="StripView_Art">
						<param name="target_id" value="$PARAM[target_id]"/>
						<param name="displaytype_label" value="Posters"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						<param name="top" value="180"/>
						<param name="item_top" value="60"/>
						<param name="item_width" value="400"/>
						<param name="item_height" value="600"/>
						<param name="focus_width" value="480"/>
						<param name="focus_height" value="720"/>
						<param name="2x_item_width" value="800"/>
						<param name="2x_item_width_plus_focus_width" value="1280"/>
						<param name="2x_item_width_minus_dropshadow_width" value="680"/>
						<param name="3x_item_width_plus_focus_width" value="1680"/>
						<param name="4x_item_width_plus_focus_width" value="2080"/>
					</include>
				</control>
			</definition>
		</include>

		<include name="StripView_Art_Fanart">
			<param name="target_id"/>
			<param name="artwork_icon"/>
			<definition>
				<control type="group">
					<animation effect="slide" start="0,0" end="-560,0" time="0" condition="true">Conditional</animation>
					<animation effect="slide" start="0,0" end="320,0" time="0" condition="!$EXP[StripView_Details_Off] + !$EXP[InfoWidget_Display_IsStripView]">Conditional</animation>
					<include content="StripView_Art">
						<param name="target_id" value="$PARAM[target_id]"/>
						<param name="displaytype_label" value="Fanart"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						<param name="top" value="240"/>
						<param name="item_top" value="45"/>
						<param name="item_width" value="960"/>
						<param name="item_height" value="540"/>
						<param name="focus_width" value="1120"/>
						<param name="focus_height" value="630"/>
						<param name="2x_item_width" value="1920"/>
						<param name="2x_item_width_plus_focus_width" value="3040"/>
						<param name="2x_item_width_minus_dropshadow_width" value="1800"/>
						<param name="3x_item_width_plus_focus_width" value="4000"/>
					</include>
				</control>
			</definition>
		</include>

		<include name="StripView_Art_Square">
			<param name="target_id"/>
			<param name="artwork_icon"/>
			<definition>
				<control type="group">
					<animation effect="slide" start="0,0" end="-435,0" time="0" condition="true">Conditional</animation>
					<animation effect="slide" start="0,0" end="75,0" time="0" condition="!$EXP[StripView_Details_Off] + !$EXP[InfoWidget_Display_IsStripView]">Conditional</animation>
					<include content="StripView_Art">
						<param name="target_id" value="$PARAM[target_id]"/>
						<param name="displaytype_label" value="Square"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						<param name="top" value="240"/>
						<param name="item_top" value="45"/>
						<param name="item_width" value="540"/>
						<param name="item_height" value="540"/>
						<param name="focus_width" value="630"/>
						<param name="focus_height" value="630"/>
						<param name="2x_item_width" value="1080"/>
						<param name="2x_item_width_plus_focus_width" value="1710"/>
						<param name="2x_item_width_minus_dropshadow_width" value="960"/>
						<param name="3x_item_width_plus_focus_width" value="2250"/>
						<param name="4x_item_width_plus_focus_width" value="2790"/>
					</include>
				</control>
			</definition>
		</include>

		<include name="GridView_Icon_Unfocused">
			<param name="displaytype_label"/>
			<param name="artwork_icon"/>
			<param name="fallback" default="fallback.png"/>
			<definition>
				<control type="group">
					<visible>$EXP[GridView_IsVisible] + !$EXP[OpaqueDialog_IsVisible] + !$EXP[InfoDialog_IsVisible]</visible>
					<include>Viewtype_Fade_Animation</include>
					<control type="group">
						<visible>$EXP[GridView_Display_Is$PARAM[displaytype_label]] + !$EXP[ContainerSwitching] + !$EXP[OptionsSwitching]</visible>
						<include>Artwork_Fade_Animation</include>
						<control type="group">
							<animation effect="slide" end="12,0" time="0" condition="$EXP[GridView_Display_IsFanart]" reversible="false">Conditional</animation>
							<include content="ListIcon">
								<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
								<param name="fallback" value="$PARAM[fallback]"/>
								<param name="left" value="10"/>
								<param name="width" value="100%"/>
								<param name="height" value="100%"/>
								<param name="visible" value="$EXP[GridView_Display_Is$PARAM[displaytype_label]]"/>
								<param name="showgradient" value="false"/>
								<param name="aspectratio" value="scale"/>
								<param name="artworkmask" value="String.IsEqual(ListItem.Overlay,OverlayWatched.png)"/>
								<param name="artworkmaskdiffuse" value="$VAR[Unwatched_Artwork_Mask]"/>
							</include>
						</control>
					</control>
				</control>
			</definition>
		</include>

		<include name="GridView_Icon_Focused">
			<param name="displaytype_label"/>
			<param name="artwork_icon"/>
			<param name="fallback" default="fallback.png"/>
			<param name="progress_left"/>
			<param name="progress_top"/>
			<param name="progress_width" default="360"/>
			<definition>
				<control type="group">
					<visible>$EXP[GridView_IsVisible] + !$EXP[OpaqueDialog_IsVisible] + !$EXP[InfoDialog_IsVisible]</visible>
					<include>Viewtype_Fade_Animation</include>
					<control type="group">
						<visible>$EXP[GridView_Display_Is$PARAM[displaytype_label]] + !$EXP[ContainerSwitching] + !$EXP[OptionsSwitching]</visible>
						<include>Artwork_Fade_Animation</include>
						<control type="group">
							<animation effect="slide" end="12,0" time="0" condition="$EXP[GridView_Display_IsFanart]" reversible="false">Conditional</animation>
							<left>10</left>
							<width>100%</width>
							<height>100%</height>
							<!-- Dropshadow -->
							<control type="group">
								<visible>!$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(60) + !Control.HasFocus(91100)</visible>
								<include>Content_Fade_Animation</include>
								<!-- Left Side -->
								<include content="DropShadow">
									<param name="left" value="-120"/>
									<param name="top" value="0"/>
									<param name="width" value="120"/>
									<param name="height" value="100%"/>
									<param name="visible" value="$EXP[Grid_Shadow_Left_Visible] + !$EXP[Grid_Shadow_Left_Watched]"/>
								</include>
								<include content="DropShadow">
									<param name="left" value="-120"/>
									<param name="top" value="0"/>
									<param name="width" value="120"/>
									<param name="height" value="100%"/>
									<param name="colordiffuse" value="$VAR[Artwork_Watched_Dropshadow]"/>
									<param name="visible" value="$EXP[Grid_Shadow_Left_Visible] + $EXP[Grid_Shadow_Left_Watched]"/>
								</include>
								<!-- Top Left Corner -->
								<include content="DropShadow">
									<param name="left" value="-120"/>
									<param name="top" value="-120"/>
									<param name="width" value="120"/>
									<param name="height" value="120"/>
									<param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
									<param name="visible" value="$EXP[Grid_Shadow_Top-Left_Visible] + !$EXP[Grid_Shadow_Top-Left_Watched]"/>
								</include>
								<include content="DropShadow">
									<param name="left" value="-120"/>
									<param name="top" value="-120"/>
									<param name="width" value="120"/>
									<param name="height" value="120"/>
									<param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
									<param name="colordiffuse" value="$VAR[Artwork_Watched_Dropshadow]"/>
									<param name="visible" value="$EXP[Grid_Shadow_Top-Left_Visible] + $EXP[Grid_Shadow_Top-Left_Watched]"/>
								</include>
								<!-- Top Side -->
								<include content="DropShadow">
									<param name="left" value="0"/>
									<param name="top" value="-120"/>
									<param name="width" value="100%"/>
									<param name="height" value="120"/>
									<param name="texture" value="views/dropshadow_top_120.png"/>
									<param name="visible" value="$EXP[Grid_Shadow_Top_Visible] + !$EXP[Grid_Shadow_Top_Watched]"/>
								</include>
								<include content="DropShadow">
									<param name="left" value="0"/>
									<param name="top" value="-120"/>
									<param name="width" value="100%"/>
									<param name="height" value="120"/>
									<param name="texture" value="views/dropshadow_top_120.png"/>
									<param name="colordiffuse" value="$VAR[Artwork_Watched_Dropshadow]"/>
									<param name="visible" value="$EXP[Grid_Shadow_Top_Visible] + $EXP[Grid_Shadow_Top_Watched]"/>
								</include>
								<!-- Top Right Corner -->
								<include content="DropShadow">
									<param name="left" value="100%"/>
									<param name="top" value="-120"/>
									<param name="width" value="120"/>
									<param name="height" value="120"/>
									<param name="flipx" value="true"/>
									<param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
									<param name="visible" value="$EXP[Grid_Shadow_Top-Right_Visible] + !$EXP[Grid_Shadow_Top-Right_Watched]"/>
								</include>
								<include content="DropShadow">
									<param name="left" value="100%"/>
									<param name="top" value="-120"/>
									<param name="width" value="120"/>
									<param name="height" value="120"/>
									<param name="flipx" value="true"/>
									<param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
									<param name="colordiffuse" value="$VAR[Artwork_Watched_Dropshadow]"/>
									<param name="visible" value="$EXP[Grid_Shadow_Top-Right_Visible] + $EXP[Grid_Shadow_Top-Right_Watched]"/>
								</include> -->
								<!-- Rigt Side -->
								<include content="DropShadow">
									<param name="left" value="100%"/>
									<param name="top" value="0"/>
									<param name="width" value="120"/>
									<param name="height" value="100%"/>
									<param name="flipx" value="true"/>
									<param name="visible" value="$EXP[Grid_Shadow_Right_Visible] + !$EXP[Grid_Shadow_Right_Watched]"/>
								</include>
								<include content="DropShadow">
									<param name="left" value="100%"/>
									<param name="top" value="0"/>
									<param name="width" value="120"/>
									<param name="height" value="100%"/>
									<param name="flipx" value="true"/>
									<param name="colordiffuse" value="$VAR[Artwork_Watched_Dropshadow]"/>
									<param name="visible" value="$EXP[Grid_Shadow_Right_Visible] + $EXP[Grid_Shadow_Right_Watched]"/>
								</include>
								<!-- Bottom Right Corner -->
								<include content="DropShadow">
									<param name="left" value="100%"/>
									<param name="top" value="100%"/>
									<param name="width" value="120"/>
									<param name="height" value="120"/>
									<param name="flipx" value="true"/>
									<param name="flipy" value="true"/>
									<param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
									<param name="visible" value="$EXP[Grid_Shadow_Bottom-Right_Visible] + !$EXP[Grid_Shadow_Bottom-Right_Watched]"/>
								</include>
								<include content="DropShadow">
									<param name="left" value="100%"/>
									<param name="top" value="100%"/>
									<param name="width" value="120"/>
									<param name="height" value="120"/>
									<param name="flipx" value="true"/>
									<param name="flipy" value="true"/>
									<param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
									<param name="colordiffuse" value="$VAR[Artwork_Watched_Dropshadow]"/>
									<param name="visible" value="$EXP[Grid_Shadow_Bottom-Right_Visible] + $EXP[Grid_Shadow_Bottom-Right_Watched]"/>
								</include>
								<!-- Bottom Side -->
								<include content="DropShadow">
									<param name="left" value="0"/>
									<param name="top" value="100%"/>
									<param name="width" value="100%"/>
									<param name="height" value="120"/>
									<param name="flipy" value="true"/>
									<param name="texture" value="views/dropshadow_top_120.png"/>
									<param name="visible" value="$EXP[Grid_Shadow_Bottom_Visible] + !$EXP[Grid_Shadow_Bottom_Watched]"/>
								</include>
								<include content="DropShadow">
									<param name="left" value="0"/>
									<param name="top" value="100%"/>
									<param name="width" value="100%"/>
									<param name="height" value="120"/>
									<param name="flipy" value="true"/>
									<param name="texture" value="views/dropshadow_top_120.png"/>
									<param name="colordiffuse" value="$VAR[Artwork_Watched_Dropshadow]"/>
									<param name="visible" value="$EXP[Grid_Shadow_Bottom_Visible] + $EXP[Grid_Shadow_Bottom_Watched]"/>
								</include>
								<!-- Bottom Left Corner -->
								<include content="DropShadow">
									<param name="left" value="-120"/>
									<param name="top" value="100%"/>
									<param name="width" value="120"/>
									<param name="height" value="120"/>
									<param name="flipy" value="true"/>
									<param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
									<param name="visible" value="$EXP[Grid_Shadow_Bottom-Left_Visible] + !$EXP[Grid_Shadow_Bottom-Left_Watched]"/>
								</include>
								<include content="DropShadow">
									<param name="left" value="-120"/>
									<param name="top" value="100%"/>
									<param name="width" value="120"/>
									<param name="height" value="120"/>
									<param name="flipy" value="true"/>
									<param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
									<param name="colordiffuse" value="$VAR[Artwork_Watched_Dropshadow]"/>
									<param name="visible" value="$EXP[Grid_Shadow_Bottom-Left_Visible] + $EXP[Grid_Shadow_Bottom-Left_Watched]"/>
								</include>
							</control>
							<include content="ListIcon">
								<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
								<param name="fallback" value="$PARAM[fallback]"/>
								<param name="width" value="100%"/>
								<param name="height" value="100%"/>
								<param name="visible" value="$EXP[GridView_Display_Is$PARAM[displaytype_label]]"/>
								<param name="showgradient" value="![Container.Content(artists) | Container.Content(albums) | Container.Content(songs)]"/>
								<param name="aspectratio" value="scale"/>
								<param name="artworkmask" value="!$EXP[ContentSwitching] + !$EXP[GridView_Details_Off] + !$EXP[GridView_Details_Breadcrumb] + !$EXP[TransparentDialog_IsVisible] + !$EXP[ListItem(0)_NowPlaying]"/>
								<param name="artworkmaskanimationtype" value="Visible"/>
								<param name="artworkmaskanimationcondition" value="true"/>
								<param name="artworkmaskanimationeffect" value="fade"/>
								<param name="artworkmaskanimationstart" value="0"/>
								<param name="artworkmaskanimationend" value="100"/>
								<param name="artworkmaskanimationdelay" value="540"/>
							</include>
							<!-- border -->
							<control type="group">
								<visible>!$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(60) + !Control.HasFocus(91100)</visible>
								<include>Content_Fade_Animation</include>
								<control type="image">
									<animation effect="slide" end="0,-10" time="0" condition="true" reversible="false">Conditional</animation>
									<left>-10</left>
									<right>-10</right>
									<top>0</top>
									<height>10</height>
									<texture colordiffuse="$VAR[Accent_Color]">views/white_100.png</texture>
								</control>
								<control type="image">
									<left>-10</left>
									<right>-10</right>
									<bottom>-10</bottom>
									<height>10</height>
									<texture colordiffuse="$VAR[Accent_Color]">views/white_100.png</texture>
								</control>
								<control type="image">
									<left>-10</left>
									<width>10</width>
									<top>-10</top>
									<bottom>-10</bottom>
									<texture colordiffuse="$VAR[Accent_Color]">views/white_100.png</texture>
								</control>
								<control type="image">
									<right>-10</right>
									<width>10</width>
									<top>-10</top>
									<bottom>-10</bottom>
									<texture colordiffuse="$VAR[Accent_Color]">views/white_100.png</texture>
								</control>
							</control>
						</control>
					</control>
					<!-- ProgressBar -->
					<control type="group">
						<visible>$EXP[GridView_Display_Is$PARAM[displaytype_label]] + !$EXP[ContainerSwitching] + !$EXP[OptionsSwitching] + !$EXP[ContentSwitching] + !$EXP[TransparentDialog_IsVisible] + !Control.HasFocus(60) + !Control.HasFocus(91100)</visible>
						<include>Delayed_Content_Fade_Animation</include>
						<include content="ProgressBar">
							<param name="left" value="$PARAM[progress_left]"/>
							<param name="top" value="$PARAM[progress_top]"/>
							<param name="width" value="$PARAM[progress_width]"/>
						</include>
					</control>
				</control>
			</definition>
		</include>

		<include name="GridView_Layout_Fanart">
			<param name="artwork_icon"/>
			<definition>
				<itemlayout width="592" height="333" condition="$EXP[GridView_Display_IsFanart]">
					<include content="GridView_Icon_Unfocused">
						<param name="displaytype_label" value="Fanart"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					</include>
				</itemlayout>
				<focusedlayout width="592" height="333" condition="$EXP[GridView_Display_IsFanart]">
					<include>Season_Details</include>
					<include>HiddenFocusButton</include>
					<include>HiddenGridFocusButton</include>
					<include content="GridView_Icon_Focused">
						<param name="displaytype_label" value="Fanart"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						<param name="progress_left" value="116"/>
						<param name="progress_top" value="315"/>
					</include>
				</focusedlayout>
			</definition>
		</include>

		<include name="GridView_Layout_Posters">
			<param name="artwork_icon"/>
			<definition>
				<itemlayout width="360" height="540" condition="$EXP[GridView_Display_IsPosters]">
					<include content="GridView_Icon_Unfocused">
						<param name="displaytype_label" value="Posters"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					</include>
				</itemlayout>
				<focusedlayout width="360" height="540" condition="$EXP[GridView_Display_IsPosters]">
					<include>Season_Details</include>
					<include>HiddenFocusButton</include>
					<include>HiddenGridFocusButton</include>
					<include content="GridView_Icon_Focused">
						<param name="displaytype_label" value="Posters"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						<param name="progress_width" value="240"/>
						<param name="progress_left" value="60"/>
						<param name="progress_top" value="522"/>
					</include>
				</focusedlayout>
			</definition>
		</include>

		<include name="GridView_Layout_Square">
			<param name="artwork_icon"/>
			<definition>
				<itemlayout width="360" height="360" condition="$EXP[GridView_Display_IsSquare]">
					<include content="GridView_Icon_Unfocused">
						<param name="displaytype_label" value="Square"/>
							<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					</include>
				</itemlayout>
				<focusedlayout width="360" height="360" condition="$EXP[GridView_Display_IsSquare]">
					<include>Season_Details</include>
					<include>HiddenFocusButton</include>
					<include>HiddenGridFocusButton</include>
					<include content="GridView_Icon_Focused">
						<param name="displaytype_label" value="Square"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						<param name="progress_width" value="240"/>
						<param name="progress_left" value="60"/>
						<param name="progress_top" value="342"/>
					</include>
				</focusedlayout>
			</definition>
		</include>

		<include name="GridView_Slides_Fanart">
			<animation effect="slide" end="592,0" time="0" condition="$EXP[GridView_Display_IsFanart] + Container.Position(1)" reversible="false">Conditional</animation>
			<animation effect="slide" end="1184,0" time="0" condition="$EXP[GridView_Display_IsFanart] + Container.Position(2)" reversible="false">Conditional</animation>
			<animation effect="slide" end="0,333" time="0" condition="$EXP[GridView_Display_IsFanart] + Container.Position(3)" reversible="false">Conditional</animation>
			<animation effect="slide" end="592,333" time="0" condition="$EXP[GridView_Display_IsFanart] + Container.Position(4)" reversible="false">Conditional</animation>
			<animation effect="slide" end="1184,333" time="0" condition="$EXP[GridView_Display_IsFanart] + Container.Position(5)" reversible="false">Conditional</animation>
		</include>

		<include name="GridView_Slides_Posters">
			<animation effect="slide" end="360,0" time="0" condition="$EXP[GridView_Display_IsPosters] + Container.Position(1)" reversible="false">Conditional</animation>
			<animation effect="slide" end="720,0" time="0" condition="$EXP[GridView_Display_IsPosters] + Container.Position(2)" reversible="false">Conditional</animation>
			<animation effect="slide" end="1080,0" time="0" condition="$EXP[GridView_Display_IsPosters] + Container.Position(3)" reversible="false">Conditional</animation>
			<animation effect="slide" end="1440,0" time="0" condition="$EXP[GridView_Display_IsPosters] + Container.Position(4)" reversible="false">Conditional</animation>
		</include>

		<include name="GridView_Slides_Square">
			<animation effect="slide" end="360,0" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(1)" reversible="false">Conditional</animation>
			<animation effect="slide" end="720,0" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(2)" reversible="false">Conditional</animation>
			<animation effect="slide" end="1080,0" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(3)" reversible="false">Conditional</animation>
			<animation effect="slide" end="1440,0" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(4)" reversible="false">Conditional</animation>
			<animation effect="slide" end="0,360" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(5)" reversible="false">Conditional</animation>
			<animation effect="slide" end="360,360" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(6)" reversible="false">Conditional</animation>
			<animation effect="slide" end="720,360" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(7)" reversible="false">Conditional</animation>
			<animation effect="slide" end="1080,360" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(8)" reversible="false">Conditional</animation>
			<animation effect="slide" end="1440,360" time="0" condition="$EXP[GridView_Display_IsSquare] + Container.Position(9)" reversible="false">Conditional</animation>
		</include>

		<include name="GridView_Overlay">
			<param name="displaytype_label"/>
			<param name="include_slides" default="true"/>
			<param name="left"/>
			<param name="top" default="180"/>
			<param name="width"/>
			<param name="height"/>
			<param name="edge" default="15"/>
			<param name="title_max_height" default="300"/>
			<param name="title_font" default="Grid_Title"/>
			<param name="info_font" default="Grid_Info"/>
			<definition>
				<control type="group">
					<include condition="$PARAM[include_slides]">GridView_Slides_$PARAM[displaytype_label]</include>
					<left>$PARAM[left]</left>
					<top>$PARAM[top]</top>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<visible>$EXP[GridView_Display_Is$PARAM[displaytype_label]] + [[$EXP[GridView_Details_On] + !$EXP[ListItem(0)_NowPlaying]] | $EXP[GridView_Widget_IsVisible]]</visible>
					<animation effect="fade" start="0" end="100" time="360" delay="360" tween="sine" easing="out" reversible="false">Focus</animation>
					<control type="grouplist">
						<left>$PARAM[edge]</left>
						<right>$PARAM[edge]</right>
						<orientation>vertical</orientation>
						<align>center</align>
						<itemgap>0</itemgap>
						<control type="textbox" id="2010">
							<height max="$PARAM[title_max_height]">auto</height>
							<font>$PARAM[title_font]</font>
							<textcolor>$VAR[Light_Color]</textcolor>
							<label>$VAR[Title_Label]</label>
							<align>center</align>
						</control>
						<control type="label">
							<visible>$EXP[GridView_Details_Info] | $EXP[GridView_Widget_IsVisible]</visible>
							<height>35</height>
							<font>$PARAM[info_font]</font>
							<textcolor>$VAR[Light_Color]</textcolor>
							<label>$VAR[Info_Label]</label>
							<align>center</align>
						</control>
					</control>
				</control>
			</definition>
		</include>

		<include name="GridView_Art">
			<param name="target_id"/>
			<param name="displaytype_label"/>
			<param name="artwork_icon"/>
			<param name="fallback"/>
			<param name="top"/>
			<param name="item_top"/>
			<param name="item_width"/>
			<param name="item_width_minus_dropshadow_width"/>
			<param name="item_width_plus_dropshadow_width"/>
			<param name="item_height"/>
			<param name="focus_width"/>
			<param name="focus_height"/>
			<param name="show_gradient" default="![Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | [Control.HasFocus(50) + !Container.Content(sets)]]"/>
			<param name="2x_item_width"/>
			<param name="2x_item_width_plus_focus_width"/>
			<param name="3x_item_width_plus_focus_width"/>
			<param name="4x_item_width_plus_focus_width"/>
			<param name="5x_item_width_plus_focus_width"/>
			<param name="6x_item_width_plus_focus_width"/>
			<param name="2x_item_width_minus_dropshadow_width"/>
			<param name="gridview_details_fade"/>
			<definition>
				<control type="group">
					<animation effect="slide" start="0,0" end="60,0" time="0" condition="true">Conditional</animation>
					<include content="Artwork_Static">
						<param name="target_id" value="$PARAM[target_id]"/>
						<param name="viewtype_label" value="Grid"/>
						<param name="displaytype_label" value="$PARAM[displaytype_label]"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						<param name="fallback" value="$PARAM[fallback]"/>
						<param name="position_-1" value="true"/>
						<param name="position_1" value="true"/>
						<param name="position_2" value="true"/>
						<param name="position_3" value="true"/>
						<param name="position_4" value="!$EXP[GridView_Display_IsFanart]"/>
						<param name="position_5" value="!$EXP[GridView_Display_IsFanart]"/>
						<param name="top" value="$PARAM[top]"/>
						<param name="item_width" value="$PARAM[item_width]"/>
						<param name="item_top" value="0"/>
						<param name="item_height" value="$PARAM[item_height]"/>
						<param name="focus_width" value="$PARAM[focus_width]"/>
						<param name="focus_height" value="$PARAM[focus_height]"/>
						<param name="focus_border_visible" value="true"/>
						<param name="focus_border_edge" value="-10"/>
						<param name="focus_border_size" value="11"/>
						<param name="focus_border_color" value="$VAR[Accent_Color]"/>
						<param name="focus_border_texture" value="views/border_10px.png"/>
						<param name="show_gradient" value="$PARAM[show_gradient]"/>
						<param name="unfocused_overlay" value="false"/>
						<param name="artworkmask" value="false"/>
						<param name="2x_item_width" value="$PARAM[2x_item_width]"/>
						<param name="2x_item_width_plus_focus_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
						<param name="3x_item_width_plus_focus_width" value="$PARAM[3x_item_width_plus_focus_width]"/>
						<param name="4x_item_width_plus_focus_width" value="$PARAM[4x_item_width_plus_focus_width]"/>
						<param name="5x_item_width_plus_focus_width" value="$PARAM[5x_item_width_plus_focus_width]"/>
						<param name="6x_item_width_plus_focus_width" value="$PARAM[6x_item_width_plus_focus_width]"/>
						<param name="2x_item_width_minus_dropshadow_width" value="$PARAM[2x_item_width_minus_dropshadow_width]"/>
						<param name="gridview_details_fade" value="$PARAM[gridview_details_fade]"/>
					</include>
					<include content="Artwork_Transition_Slide">
						<param name="target_id" value="$PARAM[target_id]"/>
						<param name="viewtype_label" value="Grid"/>
						<param name="displaytype_label" value="$PARAM[displaytype_label]"/>
						<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
						<param name="fallback" value="$PARAM[fallback]"/>
						<param name="focus_width" value="$PARAM[focus_width]"/>
						<param name="focus_height" value="$PARAM[focus_height]"/>
						<param name="focus_border_visible" value="true"/>
						<param name="focus_border_edge" value="-10"/>
						<param name="focus_border_size" value="11"/>
						<param name="focus_border_color" value="$VAR[Accent_Color]"/>
						<param name="focus_border_texture" value="views/border_10px.png"/>
						<param name="item_top" value="$PARAM[top]"/>
						<param name="item_height" value="$PARAM[item_height]"/>
						<param name="item_width" value="$PARAM[item_width]"/>
						<param name="item_width_minus_dropshadow_width" value="$PARAM[item_width_minus_dropshadow_width]"/>
						<param name="item_width_plus_dropshadow_width" value="$PARAM[item_width_plus_dropshadow_width]"/>
						<param name="2x_item_width" value="$PARAM[2x_item_width]"/>
						<param name="2x_item_width_plus_focus_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
						<param name="3x_item_width" value="$PARAM[2x_item_width_plus_focus_width]"/>
						<param name="4x_item_width" value="$PARAM[3x_item_width_plus_focus_width]"/>
						<param name="5x_item_width" value="$PARAM[4x_item_width_plus_focus_width]"/>
						<param name="6x_item_width" value="$PARAM[5x_item_width_plus_focus_width]"/>
						<param name="showgradient" value="$PARAM[show_gradient]"/>
						<param name="artworkmask" value="false"/>
					</include>
				</control>
			</definition>
		</include>

		<include name="GridView_Art_Posters">
			<param name="target_id"/>
			<param name="artwork_icon"/>
			<param name="gridview_details_fade"/>
			<definition>
				<include content="GridView_Art">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="displaytype_label" value="Posters"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="top" value="270"/>
					<param name="item_height" value="540"/>
					<param name="focus_height" value="540"/>
					<param name="item_width" value="360"/>
					<param name="focus_width" value="360"/>
					<param name="item_width_minus_dropshadow_width" value="240"/>
					<param name="item_width_plus_dropshadow_width" value="480"/>
					<param name="2x_item_width" value="720"/>
					<param name="2x_item_width_plus_focus_width" value="1080"/>
					<param name="3x_item_width_plus_focus_width" value="1440"/>
					<param name="4x_item_width_plus_focus_width" value="1800"/>
					<param name="5x_item_width_plus_focus_width" value="2160"/>
					<param name="6x_item_width_plus_focus_width" value="2520"/>
					<param name="2x_item_width_minus_dropshadow_width" value="600"/>
					<param name="gridview_details_fade" value="$PARAM[gridview_details_fade]"/>
				</include>
			</definition>
		</include>

		<include name="GridView_Art_Fanart">
			<param name="target_id"/>
			<param name="artwork_icon"/>
			<param name="gridview_details_fade"/>
			<definition>
				<include content="GridView_Art">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="displaytype_label" value="Fanart"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="top" value="374"/>
					<param name="item_height" value="333"/>
					<param name="focus_height" value="333"/>
					<param name="focus_width" value="592"/>
					<param name="item_width" value="592"/>
					<param name="item_width_minus_dropshadow_width" value="472"/>
					<param name="item_width_plus_dropshadow_width" value="712"/>
					<param name="2x_item_width" value="1184"/>
					<param name="2x_item_width_plus_focus_width" value="1776"/>
					<param name="3x_item_width_plus_focus_width" value="2368"/>
					<param name="4x_item_width_plus_focus_width" value="2960"/>
					<param name="2x_item_width_minus_dropshadow_width" value="1064"/>
					<param name="gridview_details_fade" value="$PARAM[gridview_details_fade]"/>
				</include>
			</definition>
		</include>

		<include name="GridView_Art_Square">
			<param name="target_id"/>
			<param name="artwork_icon"/>
			<param name="gridview_details_fade"/>
			<definition>
				<include content="GridView_Art">
					<param name="target_id" value="$PARAM[target_id]"/>
					<param name="displaytype_label" value="Square"/>
					<param name="artwork_icon" value="$PARAM[artwork_icon]"/>
					<param name="top" value="360"/>
					<param name="item_height" value="360"/>
					<param name="focus_height" value="360"/>
					<param name="item_width" value="360"/>
					<param name="focus_width" value="360"/>
					<param name="item_width_minus_dropshadow_width" value="240"/>
					<param name="item_width_plus_dropshadow_width" value="480"/>
					<param name="2x_item_width" value="720"/>
					<param name="2x_item_width_plus_focus_width" value="1080"/>
					<param name="3x_item_width_plus_focus_width" value="1440"/>
					<param name="4x_item_width_plus_focus_width" value="1800"/>
					<param name="5x_item_width_plus_focus_width" value="2160"/>
					<param name="6x_item_width_plus_focus_width" value="2520"/>
					<param name="2x_item_width_minus_dropshadow_width" value="600"/>
					<param name="gridview_details_fade" value="$PARAM[gridview_details_fade]"/>
				</include>
			</definition>
		</include>


		<include name="Common_Details">
			<param name="viewtype_label" default="Billboard"/>
			<param name="left" default="120"/>
			<param name="bottom" default="0"/>
			<param name="width" default="1680"/>
			<param name="height" default="100%"/>
			<param name="align" default="center"/>
	    <param name="itemgap" default="0"/>
			<param name="labeltype" default="textbox"/>
			<param name="logopath" default="$VAR[Logo_Path]"/>
			<param name="titlelabel" default="$VAR[Title_Label]"/>
			<param name="titlescroll" default="true"/>
			<param name="titleheight" default="146"/>
	    <param name="titlecolor" default="$VAR[List_Text_Color]"/>
			<param name="titlealign" default="left"/>
			<param name="infolabel" default="$VAR[Info_Label]"/>
	    <param name="infogap" default="0"/>
	    <param name="infoheight" default="35"/>
			<param name="plotlabel" default="$VAR[Plot_Label]"/>
	    <param name="plotfont" default="Body"/>
			<param name="plotmaxheight" default="103"/>
	    <param name="plotgap" default="60"/>
	    <param name="plotcolor" default="$VAR[Plot_Color]"/>
			<definition>
				<control type="group">
					<animation effect="slide" start="0,0" end="180,0" time="0" condition="$EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Display_IsSquare]">Conditional</animation>
					<animation effect="slide" start="0,0" end="80,0" time="0" condition="$EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Logo_IsVisible] + !$EXP[ShowcaseView_Details_Plot_IsVisible]">Conditional</animation>
					<visible>[!$EXP[$PARAM[viewtype_label]View_Details_Off] + ![$EXP[StripView_IsVisible] + $EXP[StripView_Details_Title] + !$EXP[StripView_Details_Logo_IsOn]]] | Window.IsVisible(home) | VideoPlayer.IsFullscreen | $EXP[InfoWidget_HasFocus]</visible>
					<left>$PARAM[left]</left>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<bottom>$PARAM[bottom]</bottom>
					<control type="group">
						<visible>![Control.HasFocus(4501) + $EXP[Secondary_List_ContentSwitching]]</visible>
						<include>Delayed_Content_Fade_Animation</include>
						<control type="grouplist">
							<orientation>vertical</orientation>
							<align>$PARAM[align]</align>
							<itemgap>$PARAM[itemgap]</itemgap>
			        <usecontrolcoords>true</usecontrolcoords>
							<!-- Logo -->
							<control type="image">
								<visible>[!$EXP[InfoWidget_HasFocus] + $EXP[$PARAM[viewtype_label]View_Details_Logo_IsVisible]] | [Control.HasFocus(4501) + !String.IsEmpty(Container(4501).ListItem.Art(clearlogo))]</visible>
								<width>560</width>
								<height>237</height>
								<animation effect="slide" start="0,0" end="20,0" time="0" condition="[$EXP[StripView_IsVisible] + !$EXP[StripView_Details_Info_IsVisible] + !$EXP[StripView_Details_Plot_IsVisible]]">Conditional</animation>
								<animation effect="slide" start="0,0" end="-60,371" time="0" condition="$EXP[BillboardView_IsVisible] + !$EXP[BillboardView_Details_Info_IsVisible] + !$EXP[BillboardView_Details_Plot_IsVisible]">Conditional</animation>
								<animation effect="slide" start="0,0" end="0,-10" time="0" condition="$EXP[$PARAM[viewtype_label]View_Details_Info_IsVisible] | $EXP[$PARAM[viewtype_label]View_Details_Plot_IsVisible]">Conditional</animation>
								<aspectratio>keep</aspectratio>
								<texture background="true">$PARAM[logopath]</texture>
							</control>
							<!-- Title -->
							<control type="textbox">
								<visible>[!$EXP[$PARAM[viewtype_label]View_Details_Logo_IsVisible] + ![Control.HasFocus(4501) + !String.IsEmpty(Container(4501).ListItem.Art(clearlogo))]] | $EXP[InfoWidget_HasFocus]</visible>
								<height max="$PARAM[titleheight]">auto</height>
								<font>$PARAM[viewtype_label]_Title</font>
								<textcolor>$PARAM[titlecolor]</textcolor>
								<label>$PARAM[titlelabel]</label>
								<align>$PARAM[titlealign]</align>
								<scroll>$PARAM[titlescroll]</scroll>
								<scrollsuffix> / </scrollsuffix>
							</control>
							<!-- Info -->
							<control type="$PARAM[labeltype]">
			          <top>$PARAM[infogap]</top>
			          <visible>[$EXP[$PARAM[viewtype_label]View_Details_Info_IsVisible] + !String.IsEmpty(Control.GetLabel(917))] | Window.IsActive(home) | VideoPlayer.IsFullscreen | Window.IsActive(visualisation) | $EXP[InfoWidget_HasFocus]</visible>
			          <height max="$PARAM[infoheight]">auto</height>
								<font>$PARAM[viewtype_label]_Info</font>
								<textcolor>$PARAM[titlecolor]</textcolor>
								<label>$PARAM[infolabel]</label>
								<align>$PARAM[titlealign]</align>
								<scroll>true</scroll>
								<scrollsuffix> / </scrollsuffix>
							</control>
							<!-- Plot -->
							<control type="textbox">
			          <top>$PARAM[plotgap]</top>
								<height max="$PARAM[plotmaxheight]">auto</height>
								<visible>[$EXP[$PARAM[viewtype_label]View_Details_Plot_IsVisible] | VideoPlayer.IsFullscreen] + !String.IsEmpty(Control.GetLabel(916)) + !$EXP[InfoWidget_HasFocus]</visible>
								<visible>![Control.HasFocus(4501) + Container.Content(tvshows)]</visible>
								<font>$PARAM[plotfont]</font>
								<textcolor>$PARAM[plotcolor]</textcolor>
								<label>$PARAM[plotlabel]</label>
								<align>$PARAM[titlealign]</align>
								<autoscroll delay="5000" time="1500" repeat="2000">true</autoscroll>
							</control>
						</control>
					</control>
				</control>
			</definition>
		</include>

		<include name="Breadcrumb_Label">
			<param name="visible" default="true"/>
			<param name="left" default="60"/>
			<param name="right" default="60"/>
			<param name="top" default="60"/>
			<param name="title_label_id" default="980"/>
			<param name="title_label" default="$VAR[Breadcrumb_Title_Label]"/>
			<param name="maxtitlelabelwidth" default="1200"/>
			<param name="haspath" default="false"/>
			<param name="label_color" default="$VAR[Overlay_Text_Color]"/>
			<param name="info_label_id" default=""/>
			<param name="info_label" default="$VAR[Breadcrumb_Info_Label]"/>
			<param name="info_label_visible" default="true"/>
			<param name="maxinfolabelwidth" default="600"/>
			<definition>
				<control type="group">
					<visible>$PARAM[visible]</visible>
					<include>Content_Fade_Animation</include>
					<control type="grouplist">
						<left>$PARAM[left]</left>
						<right>$PARAM[right]</right>
						<top>$PARAM[top]</top>
						<height>60</height>
						<orientation>horizontal</orientation>
						<itemgap>12</itemgap>
						<usecontrolcoords>true</usecontrolcoords>
						<control type="label" id="$PARAM[title_label_id]">
							<height>60</height>
							<width max="$PARAM[maxtitlelabelwidth]">auto</width>
							<label>$PARAM[title_label]</label>
							<font>Breadcrumb_Title_Label</font>
							<textcolor>$PARAM[label_color]</textcolor>
							<haspath>$PARAM[haspath]</haspath>
						</control>
						<control type="label" id="$PARAM[info_label_id]">
							<width max="$PARAM[maxinfolabelwidth]">auto</width>
							<height>35</height>
							<top>16</top>
							<label>$PARAM[info_label]</label>
							<font>Breadcrumb_Info_Label</font>
							<textcolor>$PARAM[label_color]</textcolor>
							<visible>$PARAM[info_label_visible]</visible>
							<visible>!String.IsEmpty(Control.GetLabel($PARAM[title_label_id]))</visible>
						</control>
					</control>
				</control>
			</definition>
		</include>

		<include name="Description_Label">
			<param name="id" default=""/>
			<param name="type" default="label"/>
			<param name="visible" default="true"/>
			<param name="textcolor" default="$VAR[Overlay_Text_Color]"/>
			<param name="label" default=""/>
			<param name="left" default="60"/>
			<param name="right" default="240"/>
			<param name="height" default="120"/>
			<param name="haspath" default="false"/>
			<param name="bottom" default="0"/>
			<definition>
				<control type="$PARAM[type]" id="$PARAM[id]">
					<include>Content_Fade_Animation</include>
					<visible>$PARAM[visible]</visible>
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<height>$PARAM[height]</height>
					<bottom>$PARAM[bottom]</bottom>
					<label>$PARAM[label]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>Breadcrumb_Info_Label</font>
					<textcolor>$PARAM[textcolor]</textcolor>
					<haspath>$PARAM[haspath]</haspath>
				</control>
			</definition>
		</include>


		<include name="ProgressBar_Template">
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<!-- Movie/Episode Resumable -->
				<control type="progress">
					<width>100%</width>
					<height>100%</height>
					<visible>$PARAM[resumable_visible]</visible>
					<texturebg colordiffuse="$PARAM[background_color]">views/white_100.png</texturebg>
					<lefttexture></lefttexture>
					<midtexture colordiffuse="$PARAM[focus_color]">views/white_100.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture></overlaytexture>
					<info>$PARAM[resumable_info]</info>
				</control>
				<!-- ListItem Watched -->
				<control type="image">
					<width>100%</width>
					<height>100%</height>
					<visible>$PARAM[watched_visible]</visible>
					<texture colordiffuse="$PARAM[focus_color]">views/white_100.png</texture>
				</control>
				<!-- Calculated -->
	      <control type="group">
					<animation effect="slide" start="0,0" end="0,6" time="0" condition="Skin.HasSetting(Unwatched_Indicator) + $EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off]">Conditional</animation>
	        <visible>$PARAM[calculated_visible]</visible>
					<control type="group">
						<visible>!Window.IsVisible(1125)</visible>
						<include>Content_Fade_Animation</include>
		        <!-- Background -->
		        <control type="image">
							<width>100%</width>
							<height>100%</height>
							<texture colordiffuse="$PARAM[background_color]">views/white_100.png</texture>
						</control>
		        <!-- Focus -->
		        <control type="image">
							<animation effect="zoom" end="0,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsEqual($NUMBER[Window(home).Property(WatchedPercentage)],0)">Conditional</animation>
							<animation effect="zoom" end="5,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],0) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],5)">Conditional</animation>
		          <animation effect="zoom" end="10,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],5) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],10)">Conditional</animation>
		          <animation effect="zoom" end="15,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],10) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],15)">Conditional</animation>
		          <animation effect="zoom" end="20,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],15) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],20)">Conditional</animation>
		          <animation effect="zoom" end="25,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],20) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],25)">Conditional</animation>
		          <animation effect="zoom" end="30,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],25) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],30)">Conditional</animation>
		          <animation effect="zoom" end="35,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],30) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],35)">Conditional</animation>
		          <animation effect="zoom" end="40,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],35) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],40)">Conditional</animation>
		          <animation effect="zoom" end="45,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],40) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],45)">Conditional</animation>
		          <animation effect="zoom" end="50,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],45) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],50)">Conditional</animation>
		          <animation effect="zoom" end="55,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],50) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],55)">Conditional</animation>
		          <animation effect="zoom" end="60,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],55) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],60)">Conditional</animation>
		          <animation effect="zoom" end="65,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],60) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],65)">Conditional</animation>
		          <animation effect="zoom" end="70,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],65) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],70)">Conditional</animation>
		          <animation effect="zoom" end="75,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],70) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],75)">Conditional</animation>
		          <animation effect="zoom" end="80,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],75) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],80)">Conditional</animation>
		          <animation effect="zoom" end="85,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],80) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],85)">Conditional</animation>
		          <animation effect="zoom" end="90,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],85) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],90)">Conditional</animation>
		          <animation effect="zoom" end="95,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],90) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],95)">Conditional</animation>
		          <animation effect="zoom" end="97.5,100" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],95) + Integer.IsLess($NUMBER[Window(home).Property(WatchedPercentage)],100)">Conditional</animation>
							<animation effect="zoom" end="0,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],0)">Conditional</animation>
							<animation effect="zoom" end="5,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],0) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],5)">Conditional</animation>
							<animation effect="zoom" end="10,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],5) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],10)">Conditional</animation>
							<animation effect="zoom" end="15,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],10) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],15)">Conditional</animation>
							<animation effect="zoom" end="20,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],15) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],20)">Conditional</animation>
							<animation effect="zoom" end="25,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],20) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],25)">Conditional</animation>
							<animation effect="zoom" end="30,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],25) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],30)">Conditional</animation>
							<animation effect="zoom" end="35,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],30) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],35)">Conditional</animation>
							<animation effect="zoom" end="40,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],35) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],40)">Conditional</animation>
							<animation effect="zoom" end="45,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],40) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],45)">Conditional</animation>
							<animation effect="zoom" end="50,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],45) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],50)">Conditional</animation>
							<animation effect="zoom" end="55,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],50) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],55)">Conditional</animation>
							<animation effect="zoom" end="60,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],55) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],60)">Conditional</animation>
							<animation effect="zoom" end="65,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],60) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],65)">Conditional</animation>
							<animation effect="zoom" end="70,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],65) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],70)">Conditional</animation>
							<animation effect="zoom" end="75,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],70) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],75)">Conditional</animation>
							<animation effect="zoom" end="80,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],75) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],80)">Conditional</animation>
							<animation effect="zoom" end="85,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],80) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],85)">Conditional</animation>
							<animation effect="zoom" end="90,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],85) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],90)">Conditional</animation>
							<animation effect="zoom" end="95,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],90) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],95)">Conditional</animation>
							<animation effect="zoom" end="97.5,100" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],95) + Integer.IsLess($NUMBER[Window(home).Property(WidgetWatchedPercentage)],100)">Conditional</animation>
							<width>100%</width>
							<height>100%</height>
							<texture colordiffuse="$PARAM[focus_color]">views/white_100.png</texture>
						</control>
						<!-- Unwatched Indicator -->
						<control type="group">
							<visible>Skin.HasSetting(Unwatched_Indicator)</visible>
							<visible>![Control.HasFocus(8030) + Integer.IsEqual(Container(8030).ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<visible>![Control.HasFocus(8060) + Integer.IsEqual(Container(8060).ListItem.Property(UnWatchedEpisodes),0)]</visible>
							<animation effect="slide" end="165" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsEqual($NUMBER[Window(home).Property(WatchedPercentage)],0)">Conditional</animation>
							<animation effect="slide" end="174" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],0) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],5)">Conditional</animation>
							<animation effect="slide" end="183" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],5) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],10)">Conditional</animation>
							<animation effect="slide" end="192" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],10) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],15)">Conditional</animation>
							<animation effect="slide" end="201" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],15) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],20)">Conditional</animation>
							<animation effect="slide" end="210" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],20) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],25)">Conditional</animation>
							<animation effect="slide" end="219" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],25) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],30)">Conditional</animation>
							<animation effect="slide" end="228" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],30) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],35)">Conditional</animation>
		          <animation effect="slide" end="237" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],35) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],40)">Conditional</animation>
		          <animation effect="slide" end="246" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],40) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],45)">Conditional</animation>
		          <animation effect="slide" end="255" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],45) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],50)">Conditional</animation>
		          <animation effect="slide" end="264" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],50) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],55)">Conditional</animation>
		          <animation effect="slide" end="273" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],55) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],60)">Conditional</animation>
		          <animation effect="slide" end="282" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],60) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],65)">Conditional</animation>
		          <animation effect="slide" end="291" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],65) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],70)">Conditional</animation>
		          <animation effect="slide" end="300" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],70) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],75)">Conditional</animation>
		          <animation effect="slide" end="309" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],75) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],80)">Conditional</animation>
		          <animation effect="slide" end="318" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],80) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],85)">Conditional</animation>
		          <animation effect="slide" end="327" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],85) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],90)">Conditional</animation>
		          <animation effect="slide" end="336" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],90) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],95)">Conditional</animation>
		          <animation effect="slide" end="345" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],95) + Integer.IsLess($NUMBER[Window(home).Property(WatchedPercentage)],100)">Conditional</animation>

							<animation effect="slide" end="105" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsEqual($NUMBER[Window(home).Property(WatchedPercentage)],0)">Conditional</animation>
							<animation effect="slide" end="111" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],0) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],5)">Conditional</animation>
							<animation effect="slide" end="117" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],5) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],10)">Conditional</animation>
							<animation effect="slide" end="123" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],10) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],15)">Conditional</animation>
							<animation effect="slide" end="129" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],15) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],20)">Conditional</animation>
							<animation effect="slide" end="135" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],20) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],25)">Conditional</animation>
							<animation effect="slide" end="141" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],25) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],30)">Conditional</animation>
							<animation effect="slide" end="147" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],30) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],35)">Conditional</animation>
							<animation effect="slide" end="153" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],35) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],40)">Conditional</animation>
							<animation effect="slide" end="159" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],40) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],45)">Conditional</animation>
							<animation effect="slide" end="165" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],45) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],50)">Conditional</animation>
							<animation effect="slide" end="171" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],50) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],55)">Conditional</animation>
							<animation effect="slide" end="177" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],55) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],60)">Conditional</animation>
							<animation effect="slide" end="183" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],60) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],65)">Conditional</animation>
							<animation effect="slide" end="189" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],65) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],70)">Conditional</animation>
							<animation effect="slide" end="195" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],70) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],75)">Conditional</animation>
							<animation effect="slide" end="201" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],75) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],80)">Conditional</animation>
							<animation effect="slide" end="207" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],80) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],85)">Conditional</animation>
							<animation effect="slide" end="213" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],85) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],90)">Conditional</animation>
							<animation effect="slide" end="219" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],90) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WatchedPercentage)],95)">Conditional</animation>
							<animation effect="slide" end="225" time="0" condition="![Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],95) + Integer.IsLess($NUMBER[Window(home).Property(WatchedPercentage)],100)">Conditional</animation>

							<animation effect="slide" end="165" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],0)">Conditional</animation>
							<animation effect="slide" end="174" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],0) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],5)">Conditional</animation>
							<animation effect="slide" end="183" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],5) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],10)">Conditional</animation>
							<animation effect="slide" end="192" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],10) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],15)">Conditional</animation>
							<animation effect="slide" end="201" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],15) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],20)">Conditional</animation>
							<animation effect="slide" end="210" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],20) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],25)">Conditional</animation>
							<animation effect="slide" end="219" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],25) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],30)">Conditional</animation>
							<animation effect="slide" end="228" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],30) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],35)">Conditional</animation>
							<animation effect="slide" end="237" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],35) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],40)">Conditional</animation>
							<animation effect="slide" end="246" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],40) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],45)">Conditional</animation>
							<animation effect="slide" end="255" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],45) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],50)">Conditional</animation>
							<animation effect="slide" end="264" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],50) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],55)">Conditional</animation>
							<animation effect="slide" end="273" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],55) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],60)">Conditional</animation>
							<animation effect="slide" end="282" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],60) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],65)">Conditional</animation>
							<animation effect="slide" end="291" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],65) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],70)">Conditional</animation>
							<animation effect="slide" end="300" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],70) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],75)">Conditional</animation>
							<animation effect="slide" end="309" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],75) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],80)">Conditional</animation>
							<animation effect="slide" end="318" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],80) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],85)">Conditional</animation>
							<animation effect="slide" end="327" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],85) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],90)">Conditional</animation>
							<animation effect="slide" end="336" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],90) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],95)">Conditional</animation>
							<animation effect="slide" end="345" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + ![$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],95) + Integer.IsLess($NUMBER[Window(home).Property(WidgetWatchedPercentage)],100)">Conditional</animation>

							<animation effect="slide" end="105" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],0)">Conditional</animation>
							<animation effect="slide" end="111" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],0) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],5)">Conditional</animation>
							<animation effect="slide" end="117" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],5) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],10)">Conditional</animation>
							<animation effect="slide" end="123" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],10) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],15)">Conditional</animation>
							<animation effect="slide" end="129" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],15) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],20)">Conditional</animation>
							<animation effect="slide" end="135" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],20) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],25)">Conditional</animation>
							<animation effect="slide" end="141" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],25) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],30)">Conditional</animation>
							<animation effect="slide" end="147" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],30) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],35)">Conditional</animation>
							<animation effect="slide" end="153" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],35) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],40)">Conditional</animation>
							<animation effect="slide" end="159" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],40) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],45)">Conditional</animation>
							<animation effect="slide" end="165" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],45) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],50)">Conditional</animation>
							<animation effect="slide" end="171" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],50) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],55)">Conditional</animation>
							<animation effect="slide" end="177" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],55) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],60)">Conditional</animation>
							<animation effect="slide" end="183" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],60) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],65)">Conditional</animation>
							<animation effect="slide" end="189" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],65) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],70)">Conditional</animation>
							<animation effect="slide" end="195" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],70) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],75)">Conditional</animation>
							<animation effect="slide" end="201" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],75) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],80)">Conditional</animation>
							<animation effect="slide" end="207" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],80) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],85)">Conditional</animation>
							<animation effect="slide" end="213" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],85) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],90)">Conditional</animation>
							<animation effect="slide" end="219" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],90) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(WidgetWatchedPercentage)],95)">Conditional</animation>
							<animation effect="slide" end="225" time="0" condition="[Control.HasFocus(8020) | Control.HasFocus(8030) | Control.HasFocus(8060)] + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]] + Integer.IsGreater($NUMBER[Window(home).Property(WidgetWatchedPercentage)],95) + Integer.IsLess($NUMBER[Window(home).Property(WidgetWatchedPercentage)],100)">Conditional</animation>
							<width>30</width>
							<height>30</height>
							<centertop>50%</centertop>
							<left>0</left>
							<control type="image">
								<texture colordiffuse="$VAR[Unwatched_Indicator_Background_Color]">views/white_100.png</texture>
							</control>
							<control type="label">
								<align>center</align>
								<aligny>center</aligny>
								<font>Unwatched_Indicator</font>
								<textcolor>$VAR[Unwatched_Indicator_Label_Color]</textcolor>
								<label>$PARAM[unwatched_label]</label>
							</control>
						</control>
					</control>
				</control>
			</control>
		</include>



		<include name="ProgressBar">
			<param name="left" default="780"/>
			<param name="top" default="1047"/>
			<param name="width" default="360"/>
			<param name="height" default="6"/>
			<param name="background_color" default="$VAR[Progress_Background_Color]"/>
			<param name="focus_color" default="$VAR[Progress_Focused_Color]"/>
			<definition>
				<include content="ProgressBar_Template">
					<param name="left" value="$PARAM[left]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="width" value="$PARAM[width]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="background_color" value="$PARAM[background_color]"/>
					<param name="focus_color" value="$PARAM[focus_color]"/>
					<param name="visible" value="!Control.HasFocus(4501) + !Control.HasFocus(8020) + !Control.HasFocus(8030) + !Control.HasFocus(8060)"/>
					<param name="resumable_info" value="Container.ListItem.PercentPlayed"/>
					<param name="resumable_visible" value="Container.ListItem.IsResumable"/>
					<param name="watched_visible" value="!Container.ListItem.IsResumable + String.IsEqual(Container.ListItem.Overlay,OverlayWatched.png) + !$EXP[ListView_IsVisible]"/>
					<param name="calculated_visible" value="[String.IsEqual(Container.ListItem.DBType,tvshow) | String.IsEqual(Container.ListItem.DBType,season)] + !String.IsEqual(Container.ListItem.Overlay,OverlayWatched.png) + [Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],0) | Skin.HasSetting(Unwatched_Indicator)]"/>
					<param name="unwatched_label" value="$INFO[Container.ListItem.Property(UnWatchedEpisodes)]"/>
				</include>
				<include content="ProgressBar_Template">
					<param name="left" value="$PARAM[left]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="width" value="$PARAM[width]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="background_color" value="$PARAM[background_color]"/>
					<param name="focus_color" value="$PARAM[focus_color]"/>
					<param name="visible" value="Control.HasFocus(4501)"/>
					<param name="resumable_info" value="Container(4501).ListItem.PercentPlayed"/>
					<param name="resumable_visible" value="Container(4501).ListItem.IsResumable"/>
					<param name="watched_visible" value="!Container(4501).ListItem.IsResumable + String.IsEqual(Container(4501).ListItem.Overlay,OverlayWatched.png)"/>
					<param name="calculated_visible" value="Container.Content(tvshows) + !String.IsEqual(Container(4501).ListItem.Overlay,OverlayWatched.png) + [Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],0) | Skin.HasSetting(Unwatched_Indicator)]"/>
					<param name="unwatched_label" value="$INFO[Container(4501).ListItem.Property(UnWatchedEpisodes)]"/>
				</include>
				<include content="ProgressBar_Template">
					<param name="left" value="$PARAM[left]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="width" value="$PARAM[width]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="background_color" value="$PARAM[background_color]"/>
					<param name="focus_color" value="$PARAM[focus_color]"/>
					<param name="visible" value="Control.HasFocus(8020)"/>
					<param name="resumable_info" value="0"/>
					<param name="resumable_visible" value="false"/>
					<param name="watched_visible" value="String.IsEqual(Container(8020).ListItem.Overlay,OverlayWatched.png)"/>
					<param name="calculated_visible" value="String.IsEqual(Container(8020).ListItem.DBType,season) + !String.IsEqual(Container(8020).ListItem.Overlay,OverlayWatched.png) + Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],0)"/>
					<param name="unwatched_label" value="$INFO[Container(8020).ListItem.Property(UnWatchedEpisodes)]"/>
				</include>
				<include content="ProgressBar_Template">
					<param name="left" value="$PARAM[left]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="width" value="$PARAM[width]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="background_color" value="$PARAM[background_color]"/>
					<param name="focus_color" value="$PARAM[focus_color]"/>
					<param name="visible" value="Control.HasFocus(8030)"/>
					<param name="resumable_info" value="Container(8030).ListItem.PercentPlayed"/>
					<param name="resumable_visible" value="Container(8030).ListItem.IsResumable"/>
					<param name="watched_visible" value="String.IsEqual(Container(8030).ListItem.DBType,movie) + Integer.IsGreater(Container(8030).ListItem.PlayCount,0)"/>
					<param name="calculated_visible" value="String.IsEqual(Container(8030).ListItem.DBType,tvshow) + [Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],0) | Skin.HasSetting(Unwatched_Indicator)]"/>
					<param name="unwatched_label" value="$INFO[Container(8030).ListItem.Property(UnWatchedEpisodes)]"/>
				</include>
				<include content="ProgressBar_Template">
					<param name="left" value="$PARAM[left]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="width" value="$PARAM[width]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="background_color" value="$PARAM[background_color]"/>
					<param name="focus_color" value="$PARAM[focus_color]"/>
					<param name="visible" value="Control.HasFocus(8060)"/>
					<param name="resumable_info" value="Container(8060).ListItem.PercentPlayed"/>
					<param name="resumable_visible" value="Container(8060).ListItem.IsResumable"/>
					<param name="watched_visible" value="String.IsEqual(Container(8060).ListItem.DBType,movie) + Integer.IsGreater(Container(8060).ListItem.PlayCount,0)"/>
					<param name="calculated_visible" value="String.IsEqual(Container(8060).ListItem.DBType,tvshow) + [Integer.IsGreater($NUMBER[Window(home).Property(WatchedPercentage)],0) | Skin.HasSetting(Unwatched_Indicator)]"/>
					<param name="unwatched_label" value="$INFO[Container(8060).ListItem.Property(UnWatchedEpisodes)]"/>
				</include>
			</definition>
		</include>

		<include name="MediaFlags">
			<param name="groupvisible" default="[$EXP[ListView_Flags_IsOn] | $EXP[BillboardView_Flags_IsOn] | $EXP[ShowcaseView_Flags_IsOn] | $EXP[StripView_Flags_IsOn]]"/>
			<definition>
				<control type="group">
					<visible>$PARAM[groupvisible]</visible>
					<animation effect="slide" end="-60" time="0" condition="$EXP[ListView_Display_IsThumbnails]">Conditional</animation>

					<control type="group">
						<!-- Studio -->
						<control type="image">
							<visible>$EXP[ListView_Flags_Studio_IsVisible] | $EXP[BillboardView_Flags_Studio_IsVisible] | $EXP[ShowcaseView_Flags_Studio_IsVisible] | $EXP[StripView_Flags_Studio_IsVisible]</visible>
							<left>1605</left>
							<top>960</top>
							<width>90</width>
							<height>60</height>
							<aspectratio>keep</aspectratio>
							<texture colordiffuse="$VAR[View_Furniture_Color]" fallback="flags/blank.png">$VAR[Studio_Label]</texture>
							<animation effect="slide" start="0,0" end="180,0" time="0" condition="$EXP[ListView_Flags_Studio_Shift] | $EXP[BillboardView_Flags_Studio_Shift] | $EXP[ShowcaseView_Flags_Studio_Shift] | $EXP[StripView_Flags_Studio_Shift]">Conditional</animation>
							<animation effect="slide" start="0,0" end="-1560,0" time="0" condition="$EXP[StripView_IsVisible] + $EXP[StripView_Details_Title] + !$EXP[StripView_Details_Logo_IsOn] + !$EXP[StripView_Flags_Studio_Shift]">Conditional</animation>
						</control>
						<!-- MPAA flag -->
						<control type="image">
							<visible>$EXP[ListView_Flags_Rating_IsVisible] | $EXP[BillboardView_Flags_Rating_IsVisible] | $EXP[ShowcaseView_Flags_Rating_IsVisible] | $EXP[StripView_Flags_Rating_IsVisible]</visible>
							<left>1785</left>
							<top>960</top>
							<width>90</width>
							<height>60</height>
							<aspectratio>keep</aspectratio>
							<texture colordiffuse="$VAR[View_Furniture_Color]" fallback="flags/blank.png">$VAR[MPAA_Label]</texture>
						</control>
					</control>
				</control>
			</definition>
		</include>

	</includes>
