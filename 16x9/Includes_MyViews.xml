	<includes>

	<include name="AddonBrowser_Controls">
		<control type="radiobutton" id="5">
			<description>Enable auto update</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="radiobutton" id="6">
			<description>Enable addon notifications</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="radiobutton" id="7">
			<description>Enable language filter</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="radiobutton" id="8">
			<description>Hide broken addons</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="9">
			<description>Check for repo updates</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
	</include>

	<include name="MyMusicNav_Controls">
		<control type="edit" id="8">
			<description>Search for a string anywhere in the Kodi music database</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="radiobutton" id="16">
			<description>Start party mode (randomly play songs from your entire music collection)</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="edit" id="19">
			<description>Filter the media files to only show items that include the specified string in the name</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="20">
			<description>Update library</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
	</include>

	<include name="MyPics_Controls">
		<control type="button" id="6">
			<description>Start a picture slideshow</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="7">
			<description>Start a recursive picture slideshow</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="radiobutton" id="9">
			<onup>SetFocus(3000)</onup>
			<ondown>0</ondown>
			<onback>3001</onback>
			<onleft>3001</onleft>
			<onright>3001</onright>
			<description>Randomize the picture slideshow</description>
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>ClearProperty(Scrollbars,home)</onfocus>
			<onfocus>SetProperty(OptionsMenu,Active,home)</onfocus>
			<onunfocus>ClearProperty(OptionsMenu,home)</onunfocus>
		</control>

		<include content="Hidden_List">
			<param name="visible" value="ListItem.IsFolder"/>
			<param name="sortby" value="date"/>
			<param name="sortorder" value="descending"/>
		</include>

	</include>

	<include name="MyPlaylist_Controls">
		<control type="radiobutton" id="20">
			<description>Shuffle the playlist</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="21">
			<description>Save the playlist</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="22">
			<description>Clear the playlist</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="23">
			<description>Play the playlist</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="24">
			<description>Play next item in playlist</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="25">
			<description>Play previous item in playlist</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="26">
			<description>Put the playlist on repeat</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
	</include>

	<include name="MyVideoNav_Controls">
		<control type="edit" id="8">
			<description>Search for a string anywhere in the Kodi music database</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="14">
			<description>Show only unwatched or all videos</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="edit" id="19">
			<description>Filter the media files to only show items that include the specified string in the name</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="20">
			<description>Update library</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>

		<!-- Flag checkers -->
		<control type="image" id="914">
			<left>-100</left>
			<width>10</width>
			<height>10</height>
			<texture fallback="flags/blank.png">$VAR[Studio_Flag]</texture>
		</control>
		<control type="image" id="915">
			<left>-100</left>
			<width>10</width>
			<height>10</height>
			<texture fallback="flags/blank.png">$VAR[MPAA_Flag]</texture>
		</control>

		<include content="Hidden_List">
			<param name="visible" value="ListItem.IsCollection + !Skin.HasSetting(Secondary_List_Enabled)"/>
			<param name="sortby" value="year"/>
			<param name="sortorder" value="ascending"/>
		</include>
	</include>


	<include name="MyViews_Hidden_Controls">

		<!-- Hidden buttons for all windows -->
		<control type="button" id="2">
			<description>Select viewtype</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="button" id="3">
			<description>Select sort method</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>
		<control type="togglebutton" id="4">
			<description>Select sortmode (ascending or descending)</description>
			<visible allowhiddenfocus="true">false</visible>
		</control>

		<!-- Close Options Menu -->
		<control type="button" id="3001">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>SetFocus(50)</onfocus>
		</control>

		<!-- Open Scrollbars -->
		<control type="button" id="61">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>SetProperty(Scrollbars,true,home)</onfocus>
			<onfocus>SetFocus(60)</onfocus>
		</control>

		<!-- Close Scrollbars -->
		<control type="button" id="62">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>ClearProperty(Scrollbars,home)</onfocus>
			<onfocus>SetFocus(50)</onfocus>
		</control>

		<!-- Hidden Music Player Controls -->
		<include condition="Skin.HasSetting(Music_Player_Enabled)" content="Music_Player_Buttons"/>

		<!-- Hidden Controls for animation trigger on menu switching and resetting multiart if enabled-->
		<control type="button" id="940">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>SetProperty(OptionsSwitching,Active,Home)</onfocus>
			<onfocus>SetFocus(50)</onfocus>
			<onfocus>SetFocus(3000)</onfocus>
			<include condition="Skin.HasSetting(Multiart_Slideshow) + [Window.Is(videos) | Window.Is(music)]" content="Multiart_Setter"/>
		</control>
		<control type="group" id="941">
			<visible>Control.HasFocus(940)</visible>
			<animation effect="slide" end="0,0" time="360" reversible="false">Hidden</animation>
		</control>

		<!-- OnPrevious delay -->
		<control type="group" id="5001">
			<visible>Container.OnPrevious</visible>
			<animation effect="slide" end="0,0" time="360" reversible="false">Hidden</animation>
		</control>

		<!-- OnNext delay -->
		<control type="group" id="5002">
			<visible>Container.OnNext</visible>
			<animation effect="slide" end="0,0" time="360" reversible="false">Hidden</animation>
		</control>

		<!-- Container Update Bounce Test For Dialog_Info_Label -->
		<control type="button" id="5003">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus condition="Container.IsUpdating">SetFocus(5004)</onfocus>
			<onfocus condition="!Container.IsUpdating">SetFocus(50)</onfocus>
			<onfocus condition="!Container.IsUpdating">Action(Info)</onfocus>
		</control>

		<control type="button" id="5004">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus condition="Container.IsUpdating">SetFocus(5003)</onfocus>
			<onfocus condition="!Container.IsUpdating">SetFocus(50)</onfocus>
			<onfocus condition="!Container.IsUpdating">Action(Info)</onfocus>
		</control>
	</include>

	<include name="MyViews_Main">
		<!-- To fix audiostutter on navigation during video playback -->
		<control type="videowindow">
			<visible>![Skin.HasSetting(Trailer_Autoplay) + String.IsEqual(Window(home).Property(Trailer_Autoplay),true)] | $EXP[GridView_IsVisible]</visible>
			<include>Hidden_Control</include>
		</control>

		<!-- Trailer autoplay -->
		<include condition="Skin.HasSetting(Trailer_Autoplay)" content="Trailer_Autoplay_Function"/>

		<control type="group">
			<include condition="Skin.HasSetting(Trailer_Autoplay)" content="Trailer_Autoplay_Fade_Animation"/>

			<!-- Light view gradient -->
			<control type="image">
				<visible>Skin.String(Theme,Light)</visible>
				<width>100%</width>
				<bottom>0</bottom>
				<height>50%</height>
				<texture colordiffuse="$VAR[Light_Grey_Color]">views/gradient_light-background.png</texture>
			</control>

			<control type="group">
				<visible>!$EXP[InfoDialog_IsVisible]</visible>
				<include>Viewtype_Fade_Animation</include>

				<!-- Embedded Lists -->
				<include condition="Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
					<param name="visible" value="Control.HasFocus(505) + Container.Content(sets)"/>
					<param name="layout" value="Hidden"/>
				</include>

				<control type="group">
					<visible>$EXP[ListView_IsVisible] | $EXP[BillboardView_IsVisible] | $EXP[ShowcaseView_IsVisible]</visible>
					<include>Delayed_Content_Fade_Animation</include>
					<include condition="Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
						<param name="visible" value="[$EXP[ListView_Display_IsThumbnails] | $EXP[ShowcaseView_Display_IsPosters]] + $EXP[Secondary_List_Video_Conditions]"/>
					</include>
					<include condition="Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
						<param name="visible" value="$EXP[ListView_Display_IsThumbnails] + Container.Content(artists)"/>
						<param name="top" value="180"/>
						<param name="height" value="720"/>
						<param name="layout" value="720x720"/>
					</include>
					<include condition="Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
						<param name="visible" value="[$EXP[ListView_Display_IsBackground] | $EXP[BillboardView_IsVisible]] + $EXP[Secondary_List_Video_Conditions] + !Container.Content(artists)"/>
						<param name="width" value="1920"/>
						<param name="layout" value="1920x1080"/>
					</include>
				</control>

				<control type="group">
					<visible>$EXP[ShowcaseView_IsVisible]</visible>
					<include>Delayed_Content_Fade_Animation</include>
					<include condition="Skin.HasSetting(ShowcaseView_Enabled) + Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
						<param name="visible" value="$EXP[ShowcaseView_Display_IsSquare] + $EXP[Secondary_List_Video_Conditions]"/>
						<param name="width" value="1080"/>
						<param name="layout" value="1080x1080"/>
					</include>
					<include condition="Skin.HasSetting(ShowcaseView_Enabled) + Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
						<param name="visible" value="$EXP[ShowcaseView_Display_IsSquare] + Container.Content(artists)"/>
						<param name="width" value="1080"/>
						<param name="layout" value="1080x1080"/>
					</include>
				</control>

				<control type="group">
					<visible>$EXP[StripView_IsVisible]</visible>
					<include>Delayed_Content_Fade_Animation</include>
					<include condition="Skin.HasSetting(StripView_Enabled) + Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
						<param name="visible" value="$EXP[StripView_Display_IsPosters] + $EXP[Secondary_List_Video_Conditions]"/>
						<param name="width" value="480"/>
						<param name="left" value="720"/>
						<param name="height" value="720"/>
						<param name="top" value="900"/>
						<param name="layout" value="480x720"/>
					</include>
					<include condition="Skin.HasSetting(StripView_Enabled) + Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
						<param name="visible" value="$EXP[StripView_Display_IsFanart] + $EXP[Secondary_List_Video_Conditions]"/>
						<param name="width" value="1120"/>
						<param name="left" value="400"/>
						<param name="height" value="630"/>
						<param name="top" value="870"/>
						<param name="layout" value="1120x630"/>
					</include>
					<include condition="Skin.HasSetting(StripView_Enabled) + Skin.HasSetting(Secondary_List_Enabled)" content="Secondary_List">
						<param name="visible" value="$EXP[StripView_Display_IsSquare] + Container.Content(artists)"/>
						<param name="width" value="630"/>
						<param name="left" value="645"/>
						<param name="height" value="630"/>
						<param name="top" value="870"/>
						<param name="layout" value="630x630"/>
					</include>
				</control>

				<!-- Primary Views -->
				<include content="ListView_Display"/>
				<include content="ListView_Container"/>
				<include condition="Skin.HasSetting(BillboardView_Enabled)" content="BillboardView_Container"/>
				<include condition="Skin.HasSetting(BillboardView_Enabled)" content="BillboardView_Display"/>
				<include condition="Skin.HasSetting(BillboardView_Enabled)" content="BillboardView_Details"/>
				<include condition="Skin.HasSetting(ShowcaseView_Enabled)" content="ShowcaseView_Container"/>
				<include condition="Skin.HasSetting(ShowcaseView_Enabled)" content="ShowcaseView_Display"/>
				<include condition="Skin.HasSetting(ShowcaseView_Enabled)" content="ShowcaseView_Details"/>
				<include condition="Skin.HasSetting(StripView_Enabled)" content="StripView_Container"/>
				<include condition="Skin.HasSetting(StripView_Enabled)" content="StripView_Display"/>
				<include condition="Skin.HasSetting(StripView_Enabled)" content="StripView_Details"/>
				<include condition="Skin.HasSetting(Music_Player_Enabled)" content="Shared_Dialog_Layouts"/>
				<include condition="Skin.HasSetting(GridView_Enabled)" content="GridView_Container"/>
				<include content="MediaFlags"/>

				<!-- Busy spinner for transition between infodialogs -->
				<control type="image">
					<visible>String.IsEqual(Window(home).Property(InfoDialog_Transition),true)</visible>
					<include>Dialog_Fade_Animation</include>
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>90</width>
					<height>90</height>
					<texture colordiffuse="$VAR[Primary_Color]">views/dialogs/busy.png</texture>
					<animation effect="rotate" start="0" end="-360" center="auto" time="1800" loop="true" tween="cubic" easing="out" condition="true">Conditional</animation>
				</control>
			</control>
		</control>
	</include>

	<include name="MyViews_ListOnly">
		<control type="group">
			<!-- To fix audiostutter on navigation during video playback -->
			<control type="videowindow">
				<include>Hidden_Control</include>
			</control>
			<!-- Light view gradient -->
			<control type="image">
				<visible>Skin.String(Theme,Light)</visible>
				<width>100%</width>
				<bottom>0</bottom>
				<height>50%</height>
				<texture colordiffuse="$VAR[Light_Grey_Color]">views/gradient_light-background.png</texture>
			</control>
			<control type="group">
				<visible>!$EXP[InfoDialog_IsVisible]</visible>
				<include>Viewtype_Fade_Animation</include>
				<include>ListView_Display</include>
				<include>ListView_Container</include>
				<include condition="Skin.HasSetting(Music_Player_Enabled)" content="Shared_Dialog_Layouts"/>
			</control>
		</control>
	</include>

	<include name="MyViews_Addons">
		<control type="group">
			<!-- To fix audiostutter on navigation during video playback -->
			<control type="videowindow">
				<include>Hidden_Control</include>
			</control>
			<!-- Light view gradient -->
			<control type="image">
				<visible>Skin.String(Theme,Light)</visible>
				<width>100%</width>
				<bottom>0</bottom>
				<height>50%</height>
				<texture colordiffuse="$VAR[Light_Grey_Color]">views/gradient_light-background.png</texture>
			</control>
			<control type="group">
				<visible>Window.Is(addonbrowser) + !Container.Content(addons)</visible>
				<include>Dialog_Fade_Animation</include>
				<include condition="!Skin.HasSetting(Global_Fanart_Slideshow_Disabled)" content="Global_Fanart_Slideshow"/>
			</control>
			<control type="group">
				<visible>!$EXP[InfoDialog_IsVisible] + !Window.IsVisible(addonsettings) + ![Window.Is(addonbrowser) + Window.IsVisible(selectdialog)]</visible>
				<include>Viewtype_Fade_Animation</include>
				<include>ListView_Display</include>
				<include>ListView_Container</include>
				<include condition="Skin.HasSetting(Music_Player_Enabled)" content="Shared_Dialog_Layouts"/>
				<include condition="Skin.HasSetting(GridView_Enabled)">GridView_Container</include>
			</control>
		</control>
	</include>

	<include name="MyViews_Menu_and_Scrollbars">
		<param name="left" default="120"/>
		<param name="top" default="230"/>
		<definition>
			<include content="Scrollbars"/>

			<control type="group">
				<visible>String.IsEqual(Window(home).Property(OptionsMenu),Active) | [Window.IsVisible(pictures) + Control.HasFocus(9)]</visible>
				<include>Options_Menu_Fade_Animation</include>
					<control type="image">
						<texture colordiffuse="$VAR[Transparent_Dialog_Mask]">views/white_100.png</texture>
					</control>
			</control>

			<control type="group">
				<visible>String.IsEqual(Window(home).Property(OptionsMenu),Active) | [Window.IsVisible(pictures) + Control.HasFocus(9)]</visible>
				<include>Delayed_Dialog_Fade_Animation</include>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>

				<control type="group">
					<visible>!Window.IsVisible(shutdownmenu) + !Window.IsVisible(virtualkeyboard)</visible>
					<include>Content_Fade_Animation</include>
					<!-- dummy labels for Random button on pictures -->
					<control type="label">
						<top>220</top>
						<include>ContextMenuLabelFocused</include>
						<label>$VAR[Pictures_RandomButton_Focused_Label]</label>
						<visible>Window.IsVisible(pictures) + !Control.HasFocus(3000)</visible>
					</control>
					<control type="label">
						<top>220</top>
						<include>ContextMenuLabelUnfocused</include>
						<label>$VAR[Pictures_RandomButton_Unfocused_Label]</label>
						<visible>Window.IsVisible(pictures) + Control.HasFocus(3000)</visible>
					</control>
				</control>

				<control type="fixedlist" id="3000">
					<viewtype label="535">list</viewtype>
					<visible allowhiddenfocus="true">!Window.IsVisible(shutdownmenu) + !Window.IsVisible(virtualkeyboard)</visible>
					<include>Content_Fade_Animation</include>
					<description>Options menu</description>
					<width>1080</width>
					<height>675</height>
					<onup>0</onup>
					<onback>3001</onback>
					<onfocus>ClearProperty(Scrollbars,home)</onfocus>
					<onfocus>SetProperty(OptionsMenu,Active,home)</onfocus>
					<onunfocus>ClearProperty(OptionsMenu,home)</onunfocus>
					<ondown condition="Window.Is(pictures)">SetFocus(9)</ondown>
					<ondown condition="!Window.Is(pictures)">0</ondown>
					<onleft condition="String.IsEmpty(Container(3000).ListItem.Property(ActionLeft))">3001</onleft>
					<onright condition="String.IsEmpty(Container(3000).ListItem.Property(ActionRight))">3001</onright>
					<onleft condition="!String.IsEmpty(Container(3000).ListItem.Property(ActionLeft))">$INFO[Container(3000).ListItem.Property(ActionLeft)]</onleft>
					<onright condition="!String.IsEmpty(Container(3000).ListItem.Property(ActionRight))">$INFO[Container(3000).ListItem.Property(ActionRight)]</onright>
					<onleft condition="!String.IsEmpty(Container(3000).ListItem.Property(ActionLeft2))">$INFO[Container(3000).ListItem.Property(ActionLeft2)]</onleft>
					<onright condition="!String.IsEmpty(Container(3000).ListItem.Property(ActionRight2))">$INFO[Container(3000).ListItem.Property(ActionRight2)]</onright>
					<!-- Reset multiart on viewchange -->
					<onleft condition="Container(3000).HasFocus(939)">SetFocus(940)</onleft>
					<onright condition="Container(3000).HasFocus(939)">SetFocus(940)</onright>
					<!-- Transition on left or right -->
					<onleft condition="Container(3000).HasFocus(942)">SetFocus(940)</onleft>
					<onright condition="Container(3000).HasFocus(942)">SetFocus(940)</onright>
					<!-- Transition on left only -->
					<onleft condition="Container(3000).HasFocus(943)">SetFocus(940)</onleft>
					<!-- Transition on right only -->
					<onright condition="Container(3000).HasFocus(944)">SetFocus(940)</onright>
					<!-- Showcase: Turn off Logos & transition on left only -->
					<onleft condition="Container(3000).HasFocus(947) + Container.Content(movies)">Skin.SetString(ShowcaseView_Logo_Movies,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(947) + Container.Content(sets)">Skin.SetString(ShowcaseView_Logo_Sets,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(947) + Container.Content(tvshows)">Skin.SetString(ShowcaseView_Logo_TVShows,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(947) + Container.Content(artists)">Skin.SetString(ShowcaseView_Logo_Artists,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(947)">SetFocus(940)</onleft>
					<!-- Showcase: Turn off Logos & transition on right only -->
					<onright condition="Container(3000).HasFocus(948) + Container.Content(movies)">Skin.SetString(ShowcaseView_Logo_Movies,Off)</onright>
					<onright condition="Container(3000).HasFocus(948) + Container.Content(sets)">Skin.SetString(ShowcaseView_Logo_Sets,Off)</onright>
					<onright condition="Container(3000).HasFocus(948) + Container.Content(tvshows)">Skin.SetString(ShowcaseView_Logo_TVShows,Off)</onright>
					<onright condition="Container(3000).HasFocus(948) + Container.Content(artists)">Skin.SetString(ShowcaseView_Logo_Artists,Off)</onright>
					<onright condition="Container(3000).HasFocus(948)">SetFocus(940)</onright>
					<!-- Strip: Turn off Logos & transition on right only -->
					<onright condition="Container(3000).HasFocus(946) + Container.Content(movies)">Skin.SetString(StripView_Logo_Movies,Off)</onright>
					<onright condition="Container(3000).HasFocus(946) + Container.Content(sets)">Skin.SetString(StripView_Logo_Sets,Off)</onright>
					<onright condition="Container(3000).HasFocus(946) + Container.Content(tvshows)">Skin.SetString(StripView_Logo_TVShows,Off)</onright>
					<onright condition="Container(3000).HasFocus(946) + Container.Content(artists)">Skin.SetString(StripView_Logo_Artists,Off)</onright>
					<onright condition="Container(3000).HasFocus(946)">SetFocus(940)</onright>
					<!-- Strip: Turn off Logos & transition on left only -->
					<onleft condition="Container(3000).HasFocus(949) + Container.Content(movies)">Skin.SetString(StripView_Logo_Movies,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(949) + Container.Content(sets)">Skin.SetString(StripView_Logo_Sets,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(949) + Container.Content(tvshows)">Skin.SetString(StripView_Logo_TVShows,Off)</onleft>
					<onright condition="Container(3000).HasFocus(949) + Container.Content(artists)">Skin.SetString(StripView_Logo_Artists,Off)</onright>
					<onleft condition="Container(3000).HasFocus(949)">SetFocus(940)</onleft>
					<!-- Strip: Turn off Logos on left only -->
					<onleft condition="Container(3000).HasFocus(950) + Container.Content(movies)">Skin.SetString(StripView_Logo_Movies,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(950) + Container.Content(sets)">Skin.SetString(StripView_Logo_Sets,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(950) + Container.Content(tvshows)">Skin.SetString(StripView_Logo_TVShows,Off)</onleft>
					<onleft condition="Container(3000).HasFocus(950) + Container.Content(artists)">Skin.SetString(StripView_Logo_Artists,Off)</onleft>
					<!-- Strip: Turn off Logos on right only -->
					<onright condition="Container(3000).HasFocus(945) + Container.Content(movies)">Skin.SetString(StripView_Logo_Movies,Off)</onright>
					<onright condition="Container(3000).HasFocus(945) + Container.Content(sets)">Skin.SetString(StripView_Logo_Sets,Off)</onright>
					<onright condition="Container(3000).HasFocus(945) + Container.Content(tvshows)">Skin.SetString(StripView_Logo_TVShows,Off)</onright>
					<onright condition="Container(3000).HasFocus(945) + Container.Content(artists)">Skin.SetString(StripView_Logo_Artists,Off)</onright>
					<!--Grid: Transition from keyart to poster -->
					<onleft condition="Container(3000).HasFocus(951)">SetFocus(505)</onleft>
					<onleft condition="Container(3000).HasFocus(951)">SetFocus(940)</onleft>
					<onright condition="Container(3000).HasFocus(952)">SetFocus(505)</onright>
					<onright condition="Container(3000).HasFocus(952)">SetFocus(940)</onright>

					<orientation>vertical</orientation>
					<focusposition>0</focusposition>
					<movement>12</movement>
					<defaultcontrol>1</defaultcontrol>
					<scrolltime tween="sine" easing="inout">380</scrolltime>
					<itemlayout height="55" width="1080">
						<include content="Common_List_Layout">
							<param name="nowplayingvisible" value="false"/>
							<param name="iconvisible" value="false"/>
							<param name="label" value="$INFO[ListItem.Label2]"/>
							<param name="labelleft" value="0"/>
							<param name="labelmaxwidth" value="100%"/>
							<param name="textcolor" value="$VAR[Light_Color]"/>
							<param name="tracknumber" value="false"/>
						</include>
					</itemlayout>
					<focusedlayout height="60" width="1080">
						<include content="Common_List_Layout">
							<param name="visible" value="![Window.Is(pictures) + !Control.HasFocus(3000)]"/>
							<param name="nowplayingvisible" value="false"/>
							<param name="iconvisible" value="false"/>
							<param name="label" value="$INFO[ListItem.Label]"/>
							<param name="labelleft" value="0"/>
							<param name="labelmaxwidth" value="100%"/>
							<param name="font" value="List_Title_Focused"/>
							<param name="textcolor" value="$VAR[Light_Color]"/>
							<param name="tracknumber" value="false"/>
						</include>
						<include content="Common_List_Layout">
							<param name="visible" value="Window.Is(pictures) + !Control.HasFocus(3000)"/>
							<param name="nowplayingvisible" value="false"/>
							<param name="iconvisible" value="false"/>
							<param name="label" value="$INFO[ListItem.Label]"/>
							<param name="labelleft" value="0"/>
							<param name="labelmaxwidth" value="100%"/>
							<param name="textcolor" value="$VAR[Light_Color]"/>
							<param name="tracknumber" value="false"/>
						</include>
					</focusedlayout>
					<content>

						<!-- Layout -->
						<item id="939">
							<description>Layout / List</description>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[31201] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31224] $LOCALIZE[31116] $LOCALIZE[31201]</label2>
							<property name="ActionLeft">Container.PreviousViewMode</property>
							<property name="ActionRight">Container.NextViewMode</property>
							<visible>Integer.IsGreater(Container.ViewCount,1) + Control.IsVisible(50)</visible>
						</item>
						<item id="939">
							<description>Layout / Billboard</description>
							<onclick>SetFocus(501)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[31202] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31224] $LOCALIZE[31116] $LOCALIZE[31202]</label2>
							<property name="ActionLeft">Container.PreviousViewMode</property>
							<property name="ActionRight">Container.NextViewMode</property>
							<visible>Integer.IsGreater(Container.ViewCount,1) + Control.IsVisible(501)</visible>
						</item>
						<item id="939">
							<description>Layout / Showcase</description>
							<onclick>SetFocus(502)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[31203] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31224] $LOCALIZE[31116] $LOCALIZE[31203]</label2>
							<property name="ActionLeft">Container.PreviousViewMode</property>
							<property name="ActionRight">Container.NextViewMode</property>
							<visible>Integer.IsGreater(Container.ViewCount,1) + Control.IsVisible(502)</visible>
						</item>
						<item id="939">
							<description>Layout / Strip</description>
							<onclick>SetFocus(504)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[31204] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31224] $LOCALIZE[31116] $LOCALIZE[31204]</label2>
							<property name="ActionLeft">Container.PreviousViewMode</property>
							<property name="ActionRight">Container.NextViewMode</property>
							<visible>Integer.IsGreater(Container.ViewCount,1) + Control.IsVisible(504)</visible>
						</item>
						<item id="939">
							<description>Layout / Strip</description>
							<onclick>SetFocus(505)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[31205] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31224] $LOCALIZE[31116] $LOCALIZE[31205]</label2>
							<property name="ActionLeft">Container.PreviousViewMode</property>
							<property name="ActionRight">Container.NextViewMode</property>
							<visible>Integer.IsGreater(Container.ViewCount,1) + Control.IsVisible(505)</visible>
						</item>

						<!-- View Opions -->
						<include content="ListView_Menu_Options"/>
						<include condition="Skin.HasSetting(BillboardView_Enabled) + [Window.Is(videos) | Window.Is(music)]" content="BillboardView_Menu_Options"/>
						<include condition="Skin.HasSetting(ShowcaseView_Enabled) + [Window.Is(videos) | Window.Is(music)]" content="ShowcaseView_Menu_Options"/>
						<include condition="Skin.HasSetting(StripView_Enabled) + [Window.Is(videos) | Window.Is(music)]" content="StripView_Menu_Options"/>
						<include condition="Skin.HasSetting(GridView_Enabled) + !Window.Is(musicplaylisteditor) + !Window.Is(pictures) + !Window.Is(musicplaylist) + !Window.Is(videoplaylist)" content="GridView_Menu_Options"/>

						<!-- Trailer Auto Playback -->
						<item>
							<description>Trailer Autoplay (Movies) / Off</description>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[591] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31053] $LOCALIZE[31116] $LOCALIZE[591]</label2>
							<property name="ActionLeft">Skin.SetString(Trailer_Autoplay_Movies_Enabled,true)</property>
							<property name="ActionRight">Skin.SetString(Trailer_Autoplay_Movies_Enabled,true)</property>
							<visible>Skin.HasSetting(Trailer_Autoplay) + Container.Content(movies) + !Control.IsVisible(505) + !Skin.String(Trailer_Autoplay_Movies_Enabled,true)</visible>
						</item>
						<item>
							<description>Trailer Autoplay (Movies) / On</description>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[34222] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31053] $LOCALIZE[31116] $LOCALIZE[34222]</label2>
							<property name="ActionLeft">Skin.SetString(Trailer_Autoplay_Movies_Enabled,false)</property>
							<property name="ActionRight">Skin.SetString(Trailer_Autoplay_Movies_Enabled,false)</property>
							<visible>Skin.HasSetting(Trailer_Autoplay) + Container.Content(movies) + !Control.IsVisible(505) + Skin.String(Trailer_Autoplay_Movies_Enabled,true)</visible>
						</item>
						<item>
							<description>Trailer Autoplay (TV Shows) / Off</description>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[591] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31053] $LOCALIZE[31116] $LOCALIZE[591]</label2>
							<property name="ActionLeft">Skin.SetString(Trailer_Autoplay_TVShows_Enabled,true)</property>
							<property name="ActionRight">Skin.SetString(Trailer_Autoplay_TVShows_Enabled,true)</property>
							<visible>Skin.HasSetting(Trailer_Autoplay) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !Control.IsVisible(505) + !Skin.String(Trailer_Autoplay_TVShows_Enabled,true)</visible>
						</item>
						<item>
							<description>Trailer Autoplay (Shows) / On</description>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[34222] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[31053] $LOCALIZE[31116] $LOCALIZE[34222]</label2>
							<property name="ActionLeft">Skin.SetString(Trailer_Autoplay_TVShows_Enabled,false)</property>
							<property name="ActionRight">Skin.SetString(Trailer_Autoplay_TVShows_Enabled,false)</property>
							<visible>Skin.HasSetting(Trailer_Autoplay) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + !Control.IsVisible(505) + Skin.String(Trailer_Autoplay_TVShows_Enabled,true)</visible>
						</item>

						<!-- Shared -->
						<!-- Sort -->
						<item id="942">
						  <onclick>SetFocus(50)</onclick>
						  <label>$LOCALIZE[31130] $INFO[Container.SortMethod] $LOCALIZE[31131]</label>
						  <label2>$LOCALIZE[32118] $LOCALIZE[31116] $INFO[Container.SortMethod]</label2>
						  <property name="ActionLeft">Container.PreviousSortMethod</property>
						  <property name="ActionRight">Container.NextSortMethod</property>
						  <visible>Control.IsEnabled(3)</visible>
						</item>

						<!-- Sort mode -->
						<item id="942">
							<description>Order / Ascending</description>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[584] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[32119] $LOCALIZE[31116] $LOCALIZE[584]</label2>
							<property name="ActionLeft">Container.SetSortDirection</property>
							<property name="ActionRight">Container.SetSortDirection</property>
							<visible>Control.IsEnabled(4) + Container.SortDirection(ascending)</visible>
						</item>
						<item id="942">
							<description>Order / Descending</description>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[585] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[32119] $LOCALIZE[31116] $LOCALIZE[585]</label2>
							<property name="ActionLeft">Container.SetSortDirection</property>
							<property name="ActionRight">Container.SetSortDirection</property>
							<visible>Control.IsEnabled(4) + Container.SortDirection(descending)</visible>
						</item>

						<!-- Show only unwatched or all videos -->
						<item id="942">
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[16100]$INFO[Container.NumItems, (,)] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[32120] $LOCALIZE[31116] $LOCALIZE[16100]$INFO[Container.NumItems, (,)]</label2>
							<property name="ActionLeft">SendClick(14)</property>
							<property name="ActionRight">SendClick(14)</property>
							<visible>Window.Is(videos) + Control.IsEnabled(14) + !System.Setting(hidewatched) + !Container.Content(actors) + !Container.Content(sets)</visible>
						</item>
						<item id="942">
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[16101]$INFO[Container.TotalUnWatched, (,)] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[32120] $LOCALIZE[31116] $LOCALIZE[16101]$INFO[Container.TotalUnWatched, (,)]</label2>
							<property name="ActionLeft">SendClick(14)</property>
							<property name="ActionRight">SendClick(14)</property>
							<visible>Window.Is(videos) + Control.IsEnabled(14) + System.Setting(hidewatched) + !Container.Content(actors) + !Container.Content(sets)</visible>
						</item>

						<!-- Party mode -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<onclick>SendClick(16)</onclick>
							<label>$LOCALIZE[589]</label>
							<label2>$LOCALIZE[589]</label2>
							<visible>Control.IsEnabled(16) + !MusicPartyMode.Enabled</visible>
						</item>

						<!-- Filter -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<onclick condition="Container.CanFilterAdvanced">Filter</onclick>
							<label>$LOCALIZE[587]</label>
							<label2>$LOCALIZE[587]</label2>
							<visible>Container.CanFilterAdvanced</visible>
						</item>

						<!-- Search -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<onclick>SendClick(8)</onclick>
							<label>$LOCALIZE[137]</label>
							<label2>$LOCALIZE[137]</label2>
							<visible>Control.IsEnabled(8) + !Window.Is(addonbrowser) + !Window.Is(programs)</visible>
						</item>

						<!-- Current playlist -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<onclick>ActivateWindow(videoplaylist)</onclick>
							<label>$LOCALIZE[13350]</label>
							<label2>$LOCALIZE[13350]</label2>
							<visible>Window.Is(videos) + !String.IsEqual(Playlist.Length(video),0)</visible>
						</item>
						<item>
							<onclick>SetFocus(50)</onclick>
							<onclick>ActivateWindow(musicplaylist)</onclick>
							<label>$LOCALIZE[13350]</label>
							<label2>$LOCALIZE[13350]</label2>
							<visible>Window.Is(music) + !String.IsEqual(Playlist.Length(music),0)</visible>
						</item>

						<!-- Update Library -->
						<item>
							<description>Update Library</description>
							<onclick>SetFocus(50)</onclick>
							<onclick>SendClick(20)</onclick>
							<label>$LOCALIZE[653]</label>
							<label2>$LOCALIZE[653]</label2>
							<visible>Control.IsEnabled(20) + !Library.IsScanningVideo + !Library.IsScanningMusic</visible>
						</item>
						<item>
							<description>Cancel Update</description>
							<onclick>SetFocus(50)</onclick>
							<onclick>SendClick(20)</onclick>
							<label>$LOCALIZE[13353]</label>
							<label2>$LOCALIZE[13353]</label2>
							<visible>Control.IsEnabled(20) + Library.IsScanningVideo | Library.IsScanningMusic</visible>
						</item>

						<!-- Playlist -->
						<!-- Shuffle playlist -->
						<!-- Off -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[591] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[191] $LOCALIZE[31116] $LOCALIZE[591]</label2>
							<property name="ActionLeft">SendClick(20)</property>
							<property name="ActionRight">SendClick(20)</property>
							<visible>Window.Is(musicplaylist) + Control.IsEnabled(20) + String.Contains(Playlist.Random,$LOCALIZE[591])</visible>
						</item>
						<!-- On -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[34222] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[191] $LOCALIZE[31116] $LOCALIZE[34222]</label2>
							<property name="ActionLeft">SendClick(20)</property>
							<property name="ActionRight">SendClick(20)</property>
							<visible>Window.Is(musicplaylist) + Control.IsEnabled(20) + String.Contains(Playlist.Random,$LOCALIZE[34222])</visible>
						</item>
						<!-- Repeat playlist -->
						<!-- Off -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[591] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[486] $LOCALIZE[31116] $LOCALIZE[591]</label2>
							<property name="ActionLeft">SendClick(26)</property>
							<property name="ActionLeft2">SendClick(26)</property>
							<property name="ActionRight">SendClick(26)</property>
							<visible>Window.Is(musicplaylist) + Control.IsEnabled(26) + String.Contains(Playlist.Repeat,$LOCALIZE[591])</visible>
						</item>
						<!-- One -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[592] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[486] $LOCALIZE[31116] $LOCALIZE[592]</label2>
							<property name="ActionLeft">SendClick(26)</property>
							<property name="ActionLeft2">SendClick(26)</property>
							<property name="ActionRight">SendClick(26)</property>
							<visible>Window.Is(musicplaylist) + Control.IsEnabled(26) + String.Contains(Playlist.Repeat,$LOCALIZE[592])</visible>
						</item>
						<!-- All -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[593] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[486] $LOCALIZE[31116] $LOCALIZE[593]</label2>
							<property name="ActionLeft">SendClick(26)</property>
							<property name="ActionLeft2">SendClick(26)</property>
							<property name="ActionRight">SendClick(26)</property>
							<visible>Window.Is(musicplaylist) + Control.IsEnabled(26) + String.Contains(Playlist.Repeat,$LOCALIZE[593])</visible>
						</item>
						<!-- Save playlist -->
						<item>
							<onclick>SendClick(21)</onclick>
							<label>$LOCALIZE[190]</label>
							<label2>$LOCALIZE[190]</label2>
							<visible>[Window.Is(musicplaylist) | Window.Is(videoplaylist)] + Control.IsEnabled(21)</visible>
						</item>
						<!-- Clear playlist -->
						<item>
							<onclick>SendClick(22)</onclick>
							<onclick>SetFocus(50)</onclick>
							<onclick>ReplaceWindow(Videos)</onclick>
							<label>$LOCALIZE[192]</label>
							<label2>$LOCALIZE[192]</label2>
							<visible>[Window.Is(musicplaylist) | Window.Is(videoplaylist)] + Control.IsEnabled(22)</visible>
						</item>

						<!-- Pictures -->
						<!-- Start slideshow -->
						<item>
							<onclick>SendClick(6)</onclick>
							<label>$LOCALIZE[13317]</label>
							<label2>$LOCALIZE[13317]</label2>
							<visible>Window.Is(pictures) + Control.IsEnabled(6)</visible>
						</item>
						<!-- Recursive slideshow -->
						<item>
							<onclick>SendClick(7)</onclick>
							<label>$LOCALIZE[13318]</label>
							<label2>$LOCALIZE[13318]</label2>
							<visible>Window.Is(pictures) + Control.IsEnabled(7)</visible>
						</item>

						<!-- Addon Browser -->
						<!-- Settings -->
						<item>
							<onclick>SendClick(5)</onclick>
							<label>$LOCALIZE[10004]</label>
							<label2>$LOCALIZE[10004]</label2>
							<visible>Window.Is(addonbrowser) + Control.IsEnabled(5)</visible>
						</item>
						<!-- Broken -->
						<item>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[16039] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[24999] $LOCALIZE[31116] $LOCALIZE[16039]</label2>
							<property name="ActionLeft">SendClick(8)</property>
							<property name="ActionLeft2">Skin.SetString(AddonBroken,on)</property>
							<property name="ActionRight">SendClick(8)</property>
							<property name="ActionRight2">Skin.SetString(AddonBroken,on)</property>
							<visible>Window.Is(addonbrowser) + Control.IsEnabled(8) + String.Contains(Skin.String(AddonBroken),off)</visible>
						</item>
						<item>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[31130] $LOCALIZE[16041] $LOCALIZE[31131]</label>
							<label2>$LOCALIZE[24999] $LOCALIZE[31116] $LOCALIZE[16041]</label2>
							<property name="ActionLeft">SendClick(8)</property>
							<property name="ActionLeft2">Skin.SetString(AddonBroken,off)</property>
							<property name="ActionRight">SendClick(8)</property>
							<property name="ActionRight2">Skin.SetString(AddonBroken,off)</property>
							<visible>Window.Is(addonbrowser) + Control.IsEnabled(8) + String.Contains(Skin.String(AddonBroken),on)</visible>
						</item>
						<!-- Check updates -->
						<item>
							<onclick>SendClick(9)</onclick>
							<onclick>SetFocus(50)</onclick>
							<label>$LOCALIZE[24034]</label>
							<label2>$LOCALIZE[24034]</label2>
							<visible>Window.Is(addonbrowser) + Control.IsEnabled(9)</visible>
						</item>

					</content>
				</control>

			</control>
		</definition>
	</include>

</includes>
