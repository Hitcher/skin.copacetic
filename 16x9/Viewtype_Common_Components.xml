<includes>

	<include name="Hidden_List">
		<param name="id" default="4500"/>
		<param name="visible"/>
		<param name="sortby"/>
		<param name="sortorder"/>
		<definition>
			<control type="list" id="4500">
				<visible>ListItem.IsFolder</visible>
				<width>0</width>
				<height>0</height>
				<orientation>vertical</orientation>
				<itemlayout />
				<focusedlayout />
				<content sortby="date" sortorder="descending">$INFO[ListItem.FolderPath]</content>
			</control>
		</definition>
	</include>

	<include name="HiddenFocusButton">
		<control type="button">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus>SetProperty(Next_Art,$INFO[Container.ListItemNoWrap(1).Label],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + String.IsEqual(Window(home).Property(Multiart_Fadeout),true)">ClearProperty(Multiart_Fadeout,home)</onfocus>
			<onfocus condition="$EXP[GridView_IsVisible]">SetProperty(GridView_Column,$INFO[Container.Column],home)</onfocus>
			<onfocus condition="$EXP[GridView_IsVisible]">SetProperty(GridView_Row,$INFO[Container.Row],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),thumb) + !String.IsEmpty(ListItem.Art(thumb))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(thumb)],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),keyart) + !String.IsEmpty(ListItem.Art(keyart))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(keyart)],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),poster) + !String.IsEmpty(ListItem.Art(poster))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(poster)],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),fanart) + !String.IsEmpty(ListItem.Art(fanart))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(fanart)],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),square) + !String.IsEmpty(ListItem.Art(square))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(square)],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),tvshow.keyart) + !String.IsEmpty(ListItem.Art(tvshow.keyart))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(tvshow.keyart)],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),tvshow.poster) + !String.IsEmpty(ListItem.Art(tvshow.poster))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(tvshow.poster)],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),tvshow.fanart) + !String.IsEmpty(ListItem.Art(tvshow.fanart))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(tvshow.fanart)],home)</onfocus>
			<onfocus condition="Skin.HasSetting(Multiart_Slideshow) + !Window.IsVisible(1126) + String.IsEqual(Control.GetLabel(38000),tvshow.square) + !String.IsEmpty(ListItem.Art(tvshow.square))">SetProperty(Multiart_0,$ESCINFO[Container.ListItem.Art(tvshow.square)],home)</onfocus>
			<onunfocus condition="String.IsEqual(Window(home).Property(Trailer_Autoplay),true) + Player.HasVideo">PlayerControl(Stop)</onunfocus>
			<onunfocus condition="String.IsEqual(Window(home).Property(Trailer_Autoplay),true)">ClearProperty(Trailer_Autoplay,home)</onunfocus>
		</control>
	</include>

	<include name="Multiart_Resetter">
		<control type="button">
			<animation effect="slide" end="0,0" time="360" reversible="false">Focus</animation>
			<visible allowhiddenfocus="true">false</visible>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_1,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_2,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_3,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_4,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_5,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_6,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_7,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_8,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_9,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_10,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_11,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_12,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_13,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_14,home)</onfocus>
			<onfocus condition="!Window.IsVisible(1126)">ClearProperty(Multiart_15,home)</onfocus>
		</control>
	</include>

	<include name="Custom_List">
		<param name="type" default="fixedlist"/>
		<param name="id"/>
		<param name="viewtype_label"/>
		<param name="viewtype"/>
		<param name="visible"/>
		<param name="orientation"/>
		<definition>
			<control type="$PARAM[type]" id="$PARAM[id]">
				<width>1920</width>
				<viewtype label="$PARAM[viewtype_label]">$PARAM[viewtype]</viewtype>
				<visible>$PARAM[visible]</visible>
				<focusposition>0</focusposition>
				<include>$PARAM[viewtype_label]_Navigation</include>
				<pagecontrol>60</pagecontrol>
				<preloaditems>2</preloaditems>
				<orientation>$PARAM[orientation]</orientation>
				<scrolltime tween="sine" easing="inout">360</scrolltime>
				<focusedlayout width="480">
					<include>HiddenFocusButton</include>
					<include condition="Skin.HasSetting(Multiart_Slideshow)" content="Multiart_Resetter"/>
				</focusedlayout>
				<itemlayout width="480"/>
			</control>
		</definition>
	</include>

	<include name="Common_List_Layout">
		<param name="visible" default="true"/>
		<param name="nowplayingtop" default="-34"/>
		<param name="nowplayingvisible" default="true"/>
		<param name="icontop" default="-3"/>
		<param name="icontexture" default="Check_unfocused"/>
		<param name="iconvisible" default="String.IsEqual(ListItem.Overlay,OverlayWatched.png)"/>
		<param name="labelleft" default="120"/>
		<param name="labelheight" default="55"/>
		<param name="labelmaxwidth" default="720"/>
		<param name="label" default="$VAR[Title_Label]"/>
		<param name="font" default="List_Title_Unfocused"/>
		<param name="textcolor" default="$VAR[Common_List_Label_Color]"/>
		<param name="selectedcolor" default="$VAR[Common_List_Label_Color]"/>
		<param name="tracknumber" default="true"/>
		<param name="tracknumbercolor" default="$VAR[Common_List_Label_Color]"/>
		<param name="scroll" default="false"/>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<width>100%</width>
				<height>$PARAM[labelheight]</height>
				<control type="group">
					<width>120</width>
					<height>120</height>
					<left>0</left>
					<top>$PARAM[nowplayingtop]</top>
					<visible>$PARAM[nowplayingvisible]</visible>
					<include content="Now_Playing_Icon">
						<param name="visible" value="$EXP[ListItem(0)_NowPlaying]"/>
						<param name="color" default="$PARAM[tracknumbercolor]"/>
					</include>
				</control>
				<control type="group">
					<visible>!$EXP[ListItem(0)_NowPlaying]</visible>
					<visible>$PARAM[iconvisible]</visible>
					<width>60</width>
					<height>60</height>
					<left>30</left>
					<top>$PARAM[icontop]</top>
					<include content="$PARAM[icontexture]">
						<param name="color" value="$PARAM[tracknumbercolor]"/>
					</include>
				</control>
				<control type="label">
					<height>$PARAM[labelheight]</height>
					<width>120</width>
					<left>0</left>
					<align>center</align>
					<aligny>center</aligny>
					<font>$PARAM[font]</font>
					<textcolor>$PARAM[tracknumbercolor]</textcolor>
					<disabledcolor>$VAR[Light_Grey_Color]</disabledcolor>
					<selectedcolor>$PARAM[selectedcolor]</selectedcolor>
					<label>$VAR[TrackNumber_Label]</label>
					<visible>!ListItem.IsPlaying + !Window.Is(videoplaylist)</visible>
					<visible>$PARAM[tracknumber]</visible>
				</control>
				<control type="label">
					<left>$PARAM[labelleft]</left>
					<width max="$PARAM[labelmaxwidth]">auto</width>
					<height>$PARAM[labelheight]</height>
					<aligny>center</aligny>
					<font>$PARAM[font]</font>
					<textcolor>$PARAM[textcolor]</textcolor>
					<disabledcolor>$VAR[Light_Grey_Color]</disabledcolor>
					<selectedcolor>$PARAM[selectedcolor]</selectedcolor>
					<label>$PARAM[label]</label>
					<scroll>$PARAM[scroll]</scroll>
					<scrollsuffix> / </scrollsuffix>
				</control>
			</control>
		</definition>
	</include>

	<include name="Common_List_Unfocused">
		<param name="selectedcolor" default="$VAR[Common_List_Label_Color]"/>
		<definition>
			<param name="selectedcolor"/>
			<include content="Common_List_Layout">
				<param name="icontexture" value="Check_unfocused"/>
				<param name="iconvisible" value="String.IsEqual(ListItem.Overlay,OverlayWatched.png)"/>
				<param name="tracknumbercolor" value="$VAR[Common_List_Label_Color]"/>
				<param name="label" value="$VAR[Unfocused_Title_Label]"/>
				<param name="textcolor" value="$VAR[Common_List_Label_Color]"/>
				<param name="selectedcolor" value="$PARAM[selectedcolor]"/>
			</include>
		</definition>
	</include>

	<include name="Common_List_Focused">
		<param name="labelmaxwidth"/>
		<param name="selectedcolor" default="$VAR[Common_List_Label_Color]"/>
		<definition>
			<control type="group">
				<include>HiddenFocusButton</include>
				<include condition="Skin.HasSetting(Multiart_Slideshow)" content="Multiart_Resetter"/>
				<include content="Common_List_Layout">
					<param name="nowplayingtop" value="-30"/>
					<param name="icontop" value="0"/>
					<param name="icontexture" value="Check_focused"/>
					<param name="iconvisible" value="String.IsEqual(ListItem.Overlay,OverlayWatched.png)"/>
					<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
					<param name="label" value="$VAR[Title_Label]"/>
					<param name="labelheight" value="60"/>
					<param name="labelmaxwidth" value="$PARAM[labelmaxwidth]"/>
					<param name="font" value="List_Title_Focused"/>
					<param name="textcolor" value="$VAR[Common_List_Label_Color]"/>
					<param name="selectedcolor" value="$PARAM[selectedcolor]"/>
				</include>
			</control>
		</definition>
	</include>

	<include name="Common_List_Info_Label">
		<param name="visible" default="$EXP[$PARAM[viewtype_label]View_Display_IsBackground] + $EXP[$PARAM[viewtype_label]View_Details_Info_IsVisible]"/>
		<param name="width" default="1680"/>
		<param name="left" default="120"/>
		<param name="hiddenlabel" default="$VAR[Title_Label]"/>
		<param name="hiddenlabelmaxwidth" default="1200"/>
		<param name="infolabel" default="$VAR[Info_Label,$LOCALIZE[31115] ]"/>
		<param name="infolabelwidth" default="180"/>
		<definition>
			<control type="group">
				<animation effect="slide" start="0,0" end="-120,0" time="0" condition="true">Conditional</animation>
				<visible>$PARAM[visible]</visible>
				<visible>Control.HasFocus(4501)</visible>
				<width>120</width>
				<height>120</height>
				<left>$PARAM[left]</left>
				<centertop>50%</centertop>
				<include content="Now_Playing_Icon">
					<param name="visible" value="$EXP[ListItem(0)_NowPlaying]"/>
					<param name="color" default="$VAR[Common_List_Label_Color]"/>
				</include>
				<control type="group">
					<visible>!$EXP[ListItem(0)_NowPlaying]</visible>
					<visible>String.IsEqual(Container(4501).ListItem.Overlay,OverlayWatched.png)</visible>
					<include content="Check_focused">
						<param name="color" value="$VAR[Common_List_Label_Color]"/>
					</include>
				</control>
			</control>
			<control type="grouplist">
				<visible>$PARAM[visible]</visible>
				<left>$PARAM[left]</left>
				<top>500</top>
				<width>$PARAM[width]</width>
				<height>80</height>
				<itemgap>12</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<!-- Title Gap -->
				<control type="label">
					<width max="$PARAM[hiddenlabelmaxwidth]">auto</width>
					<height>80</height>
					<aligny>center</aligny>
					<font>List_Title_Focused</font>
					<textcolor>$VAR[Common_List_Info_Label_Color]</textcolor>
					<label>$PARAM[hiddenlabel]</label>
				</control>
				<!-- Abbreviated Details -->
				<control type="label">
					<width max="$PARAM[infolabelwidth]">auto</width>
					<top>30</top>
					<height>35</height>
					<font>List_Info</font>
					<textcolor>$VAR[Light_Color]</textcolor>
					<label>$PARAM[infolabel]</label>
					<aligny>center</aligny>
				</control>
			</control>
		</definition>
	</include>

	<include name="Simple_List">
		<param name="id"/>
		<param name="visible" default="true"/>
		<param name="animation" default="Blank_Include"/>
		<param name="orientation" default="vertical"/>
		<param name="left" default="780"/>
		<param name="right" default="120"/>
		<param name="height" default="500"/>
		<param name="focusposition" default="4"/>
		<param name="nowplayingvisible" default="false"/>
		<param name="labelleft" default="0"/>
		<param name="label" default="$INFO[ListItem.Label]"/>
		<param name="labelmaxwidth" default="1020"/>
		<param name="textcolor" default="$VAR[Light_Color]"/>
		<param name="selectedcolor" default="$VAR[Accent_Color]"/>
		<param name="focusedinclude" default="Blank_Include"/>
		<param name="include" default="Blank_Include"/>
    <definition>
      <control type="fixedlist" id="$PARAM[id]">
				<viewtype label="List">list</viewtype>
				<visible allowhiddenfocus="true">$PARAM[visible]</visible>
				<include>$PARAM[animation]</include>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<centertop>50%</centertop>
				<height>$PARAM[height]</height>
				<include>Simple_List_Navigation</include>
				<onup>$PARAM[id]</onup>
				<ondown>$PARAM[id]</ondown>
				<onclick condition="Window.Is(musicinformation) + System.AddonIsEnabled(script.embuary.helper)">RunScript(script.embuary.helper,action=playall,id=4500,type=music,method=fromhere)</onclick>
				<preloaditems>2</preloaditems>
				<focusposition>$PARAM[focusposition]</focusposition>
				<orientation>vertical</orientation>
				<scrolltime tween="sine" easing="inout">360</scrolltime>
				<itemlayout height="55" width="100%">
					<control type="image">
						<texture>views/white_100.png,</texture>
						<width>200</width>
					</control>
					<include content="Common_List_Layout">
						<param name="nowplayingvisible" value="$PARAM[nowplayingvisible]"/>
						<param name="iconvisible" value="false"/>
						<param name="labelleft" value="$PARAM[labelleft]"/>
            <param name="label" value="$PARAM[label]"/>
						<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
						<param name="textcolor" value="$PARAM[textcolor]"/>
						<param name="selectedcolor" value="$PARAM[selectedcolor]"/>
          </include>
				</itemlayout>
				<focusedlayout height="60" width="100%" condition="Control.HasFocus($PARAM[id])">
					<include content="Common_List_Layout">
						<param name="nowplayingvisible" value="$PARAM[nowplayingvisible]"/>
						<param name="iconvisible" value="false"/>
						<param name="labelleft" value="$PARAM[labelleft]"/>
            <param name="label" value="$PARAM[label]"/>
						<param name="labelmaxwidth" value="$PARAM[labelmaxwidth]"/>
						<param name="font" value="List_Title_Focused"/>
						<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
						<param name="textcolor" value="$PARAM[textcolor]"/>
						<param name="selectedcolor" value="$PARAM[selectedcolor]"/>
					</include>
					<include>$PARAM[focusedinclude]</include>
				</focusedlayout>
				<focusedlayout height="60" width="100%" condition="!Control.HasFocus($PARAM[id])">
					<control type="group">
						<top>5</top>
						<include content="Common_List_Layout">
							<param name="nowplayingvisible" value="$PARAM[nowplayingvisible]"/>
							<param name="iconvisible" value="false"/>
							<param name="labelleft" value="$PARAM[labelleft]"/>
	            <param name="label" value="$PARAM[label]"/>
							<param name="labelmaxwidth" value="$PARAM[labelmaxwidth]"/>
							<param name="tracknumbercolor" value="$PARAM[textcolor]"/>
							<param name="textcolor" value="$PARAM[textcolor]"/>
							<param name="selectedcolor" value="$PARAM[selectedcolor]"/>
						</include>
					</control>
					<include>$PARAM[focusedinclude]</include>
				</focusedlayout>
				<include>$PARAM[include]</include>
			</control>
    </definition>
  </include>

	<include name="Common_Details">
		<param name="viewtype_label" default="Billboard"/>
		<param name="left" default="120"/>
		<param name="bottom" default="0"/>
		<param name="width" default="1680"/>
		<param name="height" default="100%"/>
		<param name="align" default="center"/>
    <param name="itemgap" default="0"/>
		<param name="labeltype" default="textbox"/>
		<param name="logopath" default="$VAR[Logo_Path]"/>
		<param name="titlelabel" default="$VAR[Title_Label]"/>
		<param name="titlescroll" default="true"/>
		<param name="titleheight" default="146"/>
    <param name="titlecolor" default="$VAR[Common_List_Label_Color]"/>
		<param name="titlealign" default="left"/>
		<param name="infolabel" default="$VAR[Info_Label]"/>
    <param name="infogap" default="0"/>
    <param name="infoheight" default="35"/>
		<param name="plotlabel" default="$VAR[Plot_Label]"/>
    <param name="plotfont" default="Body"/>
		<param name="plotmaxheight" default="103"/>
    <param name="plotgap" default="60"/>
    <param name="plotcolor" default="$VAR[Plot_Color]"/>
		<definition>

			<!-- Hidden Label empty checkers -->
			<control type="label" id="916">
				<visible>false</visible>
				<label>$VAR[Plot_Label]</label>
			</control>
			<control type="label" id="917">
				<visible>false</visible>
				<label>$VAR[Info_Label]</label>
			</control>

			<control type="group">
				<animation effect="slide" start="0,0" end="180,0" time="0" condition="$EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Display_IsSquare]">Conditional</animation>
				<animation effect="slide" start="0,0" end="80,0" time="0" condition="$EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Logo_IsVisible] + !$EXP[ShowcaseView_Details_Plot_IsVisible]">Conditional</animation>
				<visible>[!$EXP[$PARAM[viewtype_label]View_Details_Off] + ![$EXP[StripView_IsVisible] + $EXP[StripView_Details_Title] + !$EXP[StripView_Details_Logo_IsOn]]] | Window.IsVisible(home) | VideoPlayer.IsFullscreen | $EXP[InfoWidget_HasFocus]</visible>
				<left>$PARAM[left]</left>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bottom>$PARAM[bottom]</bottom>
				<control type="group">
					<visible>![Control.HasFocus(4501) + $EXP[Secondary_List_ContentSwitching]]</visible>
					<include>Delayed_Content_Fade_Animation</include>
					<control type="grouplist">
						<orientation>vertical</orientation>
						<align>$PARAM[align]</align>
						<itemgap>$PARAM[itemgap]</itemgap>
		        <usecontrolcoords>true</usecontrolcoords>
						<!-- Logo -->
						<control type="image">
							<visible>[!$EXP[InfoWidget_HasFocus] + $EXP[$PARAM[viewtype_label]View_Details_Logo_IsVisible]] | [Control.HasFocus(4501) + !String.IsEmpty(Container(4501).ListItem.Art(clearlogo))]</visible>
							<width>560</width>
							<height>237</height>
							<animation effect="slide" start="0,0" end="20,0" time="0" condition="[$EXP[StripView_IsVisible] + !$EXP[StripView_Details_Info_IsVisible] + !$EXP[StripView_Details_Plot_IsVisible]]">Conditional</animation>
							<animation effect="slide" start="0,0" end="-60,371" time="0" condition="$EXP[BillboardView_IsVisible] + !$EXP[BillboardView_Details_Info_IsVisible] + !$EXP[BillboardView_Details_Plot_IsVisible]">Conditional</animation>
							<animation effect="slide" start="0,0" end="0,-10" time="0" condition="$EXP[$PARAM[viewtype_label]View_Details_Info_IsVisible] | $EXP[$PARAM[viewtype_label]View_Details_Plot_IsVisible]">Conditional</animation>
							<aspectratio>keep</aspectratio>
							<texture background="true">$PARAM[logopath]</texture>
						</control>
						<!-- Title -->
						<control type="textbox">
							<visible>[!$EXP[$PARAM[viewtype_label]View_Details_Logo_IsVisible] + ![Control.HasFocus(4501) + !String.IsEmpty(Container(4501).ListItem.Art(clearlogo))]] | $EXP[InfoWidget_HasFocus]</visible>
							<visible>![$EXP[ShowcaseView_IsVisible] + !$EXP[ShowcaseView_Details_Info_IsVisible] + !$EXP[ShowcaseView_Details_Plot_IsVisible]] | Window.IsVisible(home)</visible>
							<height max="$PARAM[titleheight]">auto</height>
							<font>$PARAM[viewtype_label]_Title</font>
							<textcolor>$PARAM[titlecolor]</textcolor>
							<label>$PARAM[titlelabel]</label>
							<align>$PARAM[titlealign]</align>
							<scroll>$PARAM[titlescroll]</scroll>
							<scrollsuffix> / </scrollsuffix>
						</control>
						<control type="textbox">
							<visible>[!$EXP[$PARAM[viewtype_label]View_Details_Logo_IsVisible] + ![Control.HasFocus(4501) + !String.IsEmpty(Container(4501).ListItem.Art(clearlogo))]] | $EXP[InfoWidget_HasFocus]</visible>
							<visible>$EXP[ShowcaseView_IsVisible] + !$EXP[ShowcaseView_Details_Info_IsVisible] + !$EXP[ShowcaseView_Details_Plot_IsVisible] + !Window.IsVisible(home)</visible>
							<height max="$PARAM[titleheight]">auto</height>
							<font>$PARAM[viewtype_label]_Title</font>
							<textcolor>$PARAM[titlecolor]</textcolor>
							<label>$PARAM[titlelabel]</label>
							<align>center</align>
							<scroll>$PARAM[titlescroll]</scroll>
							<scrollsuffix> / </scrollsuffix>
						</control>
						<!-- Info -->
						<control type="$PARAM[labeltype]">
		          <top>$PARAM[infogap]</top>
		          <visible>[$EXP[$PARAM[viewtype_label]View_Details_Info_IsVisible] + !String.IsEmpty(Control.GetLabel(917))] | Window.IsActive(home) | VideoPlayer.IsFullscreen | Window.IsActive(visualisation) | $EXP[InfoWidget_HasFocus]</visible>
		          <height max="$PARAM[infoheight]">auto</height>
							<font>$PARAM[viewtype_label]_Info</font>
							<textcolor>$PARAM[titlecolor]</textcolor>
							<label>$PARAM[infolabel]</label>
							<align>$PARAM[titlealign]</align>
							<scroll>true</scroll>
							<scrollsuffix> / </scrollsuffix>
						</control>
						<!-- Plot -->
						<control type="textbox">
							<visible>[$EXP[$PARAM[viewtype_label]View_Details_Plot_IsVisible] | VideoPlayer.IsFullscreen] + !String.IsEmpty(Control.GetLabel(916)) + !$EXP[InfoWidget_HasFocus]</visible>
							<visible>![Control.HasFocus(4501) + Container.Content(tvshows)]</visible>
							<top>$PARAM[plotgap]</top>
							<height max="$PARAM[plotmaxheight]">auto</height>
							<font>$PARAM[plotfont]</font>
							<textcolor>$PARAM[plotcolor]</textcolor>
							<label>$PARAM[plotlabel]</label>
							<align>$PARAM[titlealign]</align>
							<autoscroll delay="5000" time="1500" repeat="2000">true</autoscroll>
						</control>
					</control>
				</control>
			</control>
		</definition>
	</include>

	<include name="Variable_Title_Label">
		<param name="visible" default="true"/>
		<param name="label"/>
		<definition>
			<control type="grouplist">
				<visible>$PARAM[visible]</visible>
				<width>1200</width>
				<height>270</height>
				<top>-270</top>
				<orientation>vertical</orientation>
				<align>left</align>
				<itemgap>0</itemgap>
				<control type="textbox" id="38501">
					<height>66</height>
					<font>Strip_Title</font>
					<textcolor>$VAR[Blank_Color]</textcolor>
					<label>$PARAM[label]</label>
					<align>center</align>
					<aligny>center</aligny>
					<autoscroll>false</autoscroll>
				</control>
				<control type="textbox" id="38502">
					<height>90</height>
					<font>Breadcrumb_Title_Label</font>
					<textcolor>$VAR[Blank_Color]</textcolor>
					<label>$PARAM[label]</label>
					<align>center</align>
					<aligny>center</aligny>
					<autoscroll>false</autoscroll>
				</control>
				<control type="textbox" id="38503">
					<height>90</height>
					<font>MusicPlayer_Title</font>
					<textcolor>$VAR[Blank_Color]</textcolor>
					<label>$PARAM[label]</label>
					<align>center</align>
					<aligny>center</aligny>
					<autoscroll>false</autoscroll>
				</control>
			</control>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<nested/>
				<centerleft>50%</centerleft>
				<width>1200</width>
				<bottom>45</bottom>
				<height>90</height>
				<animation effect="slide" end="0,-15" time="0" condition="$EXP[StripView_Display_IsSquare] | [$EXP[StripView_Display_IsFanart] + !$EXP[StripView_Flags_IsOn]]">Conditional</animation>
				<animation effect="slide" end="0,-17" time="0" condition="Window.Is(visualisation)">Conditional</animation>
				<control type="label">
					<visible>!Container(38501).HasNext</visible>
					<font>Strip_Title</font>
					<textcolor>$VAR[Primary_Color]</textcolor>
					<label>$PARAM[label]</label>
					<align>center</align>
					<aligny>center</aligny>
					<scroll>false</scroll>
				</control>
				<control type="label">
					<visible>Container(38501).HasNext + !Container(38502).HasNext</visible>
					<font>Breadcrumb_Title_Label</font>
					<textcolor>$VAR[Primary_Color]</textcolor>
					<label>$PARAM[label]</label>
					<wrapmultiline>true</wrapmultiline>
					<align>center</align>
					<aligny>center</aligny>
					<scroll>false</scroll>
				</control>
				<control type="label">
					<visible>Container(38501).HasNext + Container(38502).HasNext + !Container(38503).HasNext</visible>
					<font>MusicPlayer_Title</font>
					<textcolor>$VAR[Primary_Color]</textcolor>
					<label>$PARAM[label]</label>
					<wrapmultiline>true</wrapmultiline>
					<align>center</align>
					<aligny>center</aligny>
					<scroll>true</scroll>
				</control>

			</control>
		</definition>
	</include>

	<include name="Breadcrumb_Label">
		<param name="visible" default="true"/>
		<param name="bar" default="true"/>
		<param name="left" default="60"/>
		<param name="right" default="60"/>
		<param name="top" default="60"/>
		<param name="title_label_id" default="980"/>
		<param name="title_label" default="$VAR[Breadcrumb_Title_Label]"/>
		<param name="maxtitlelabelwidth" default="960"/>
		<param name="haspath" default="false"/>
		<param name="label_color" default="$VAR[Common_Overlay_Label_Color]"/>
		<param name="info_label_id" default=""/>
		<param name="info_label" default="$VAR[Breadcrumb_Info_Label]"/>
		<param name="info_label_visible" default="true"/>
		<param name="maxinfolabelwidth" default="600"/>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<include>Content_Fade_Animation</include>
				<nested/>
				<control type="grouplist">
					<left>$PARAM[left]</left>
					<right>$PARAM[right]</right>
					<top>$PARAM[top]</top>
					<height>60</height>
					<orientation>horizontal</orientation>
					<align>left</align>
					<itemgap>12</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="image">
						<visible>$PARAM[bar]</visible>
						<visible>!String.IsEmpty(Control.GetLabel($PARAM[title_label_id]))</visible>
						<top>6</top>
						<height>48</height>
						<width>6</width>
						<texture colordiffuse="$VAR[Accent_Color]">views/white_100.png</texture>
					</control>
					<control type="label" id="$PARAM[title_label_id]">
						<height>60</height>
						<width max="$PARAM[maxtitlelabelwidth]">auto</width>
						<label>$PARAM[title_label]</label>
						<font>Breadcrumb_Title_Label</font>
						<textcolor>$PARAM[label_color]</textcolor>
						<haspath>$PARAM[haspath]</haspath>
					</control>
					<control type="label" id="$PARAM[info_label_id]">
						<width max="$PARAM[maxinfolabelwidth]">auto</width>
						<height>35</height>
						<top>16</top>
						<label>$PARAM[info_label]</label>
						<font>Breadcrumb_Info_Label</font>
						<textcolor>$PARAM[label_color]</textcolor>
						<visible>$PARAM[info_label_visible]</visible>
						<visible>!String.IsEmpty(Control.GetLabel($PARAM[title_label_id]))</visible>
					</control>
				</control>
			</control>
		</definition>
	</include>

	<include name="Description_Label">
		<param name="id" default=""/>
		<param name="type" default="label"/>
		<param name="visible" default="true"/>
		<param name="textcolor" default="$VAR[Common_Overlay_Label_Color]"/>
		<param name="label" default=""/>
		<param name="left" default="150"/>
		<param name="right" default="240"/>
		<param name="height" default="180"/>
		<param name="haspath" default="false"/>
		<param name="bottom" default="0"/>
		<definition>
			<control type="$PARAM[type]" id="$PARAM[id]">
				<include>Content_Fade_Animation</include>
				<visible>$PARAM[visible]</visible>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>$PARAM[height]</height>
				<bottom>$PARAM[bottom]</bottom>
				<label>$PARAM[label]</label>
				<align>left</align>
				<aligny>center</aligny>
				<font>Description</font>
				<textcolor>$PARAM[textcolor]</textcolor>
				<haspath>$PARAM[haspath]</haspath>
			</control>
		</definition>
	</include>

	<include name="Progress_Template">
		<param name="id" default="50"/>
		<param name="background_color" default="$VAR[Progress_Background_Color]"/>
		<param name="focus_color" default="$VAR[Progress_Focused_Color]"/>
		<param name="unwatched_indicator_background" default="$VAR[Unwatched_Indicator_Background_Color]"/>
		<param name="slides" default="Default"/>
		<definition>
			<control type="group">
				<visible>Control.HasFocus($PARAM[id])</visible>
				<visible>!String.IsEqual(Container($PARAM[id]).ListItem.DBType,artist) + !String.IsEqual(Container($PARAM[id]).ListItem.DBType,album) + !String.IsEqual(Container($PARAM[id]).ListItem.DBType,song) + ![$EXP[InfoDialog_IsVisible] + Control.HasFocus(50)]</visible>
				<!-- Movie/Episode Resumable -->
				<control type="progress">
					<width>100%</width>
					<height>100%</height>
					<visible>Container($PARAM[id]).ListItem.IsResumable</visible>
					<texturebg colordiffuse="$PARAM[background_color]">views/white_100.png</texturebg>
					<lefttexture></lefttexture>
					<midtexture colordiffuse="$PARAM[focus_color]">views/white_100.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture></overlaytexture>
					<info>Container($PARAM[id]).ListItem.PercentPlayed</info>
				</control>
				<!-- ListItem Watched -->
				<control type="image">
					<width>100%</width>
					<height>100%</height>
					<visible>!Container($PARAM[id]).ListItem.IsResumable + [String.IsEqual(Container($PARAM[id]).ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(Container($PARAM[id]).ListItem.PlayCount,0)] + ![$EXP[ListView_IsVisible] + !$EXP[InfoDialog_IsVisible]]</visible>
					<texture colordiffuse="$PARAM[focus_color]">views/white_100.png</texture>
				</control>
				<!-- TV show / Season not watched -->
	      <control type="group">
					<animation effect="slide" start="0,0" end="0,6" time="0" condition="Skin.HasSetting(Unwatched_Indicator) + $EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Details_Off]">Conditional</animation>
	        <visible>[String.IsEqual(Container($PARAM[id]).ListItem.DBType,tvshow) | String.IsEqual(Container($PARAM[id]).ListItem.DBType,season)] + !String.IsEqual(Container($PARAM[id]).ListItem.Overlay,OverlayWatched.png) + !Integer.IsGreater(Container($PARAM[id]).ListItem.PlayCount,0) + !Control.IsVisible(92200)</visible>
					<!-- 0 -->
					<control type="image">
						<visible>Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),0) + Integer.IsGreater(Container($PARAM[id]).ListItem.Property(UnwatchedEpisodes),0)</visible>
						<width>100%</width>
						<height>100%</height>
						<texture colordiffuse="$PARAM[background_color]">views/white_100.png</texture>
					</control>
					<!--- Greater than 0 -->
					<control type="progress">
						<visible>Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),0)</visible>
						<info>Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent)</info>
						<width>100%</width>
						<height>100%</height>
						<texturebg colordiffuse="$PARAM[background_color]">views/white_100.png</texturebg>
						<lefttexture></lefttexture>
						<midtexture colordiffuse="$PARAM[focus_color]">views/white_100.png</midtexture>
						<righttexture></righttexture>
						<overlaytexture></overlaytexture>
					</control>
					<!-- Unwatched Indicator -->
					<include condition="Skin.HasSetting(Unwatched_Indicator)" content="Progress_Unwatched_Indicator">
						<param name="id" value="$PARAM[id]"/>
						<param name="slides" value="$PARAM[slides]"/>
						<param name="unwatched_indicator_background" value="$PARAM[unwatched_indicator_background]"/>
					</include>
				</control>
			</control>
		</definition>
	</include>

	<include name="Progress_Unwatched_Indicator">
		<control type="group">
			<visible>!Integer.IsEqual(Container($PARAM[id]).ListItem.Property(UnWatchedEpisodes),0)</visible>
			<include content="Progress_Slides_$PARAM[slides]">
				<param name="id" value="$PARAM[id]"/>
			</include>
			<width>30</width>
			<height>30</height>
			<centertop>50%</centertop>
			<left>0</left>
			<control type="image">
				<texture colordiffuse="$PARAM[unwatched_indicator_background]">views/white_100.png</texture>
			</control>
			<control type="label">
				<width>100%</width>
				<height>100%</height>
				<align>center</align>
				<aligny>center</aligny>
				<font>Unwatched_Indicator</font>
				<textcolor>$VAR[Unwatched_Indicator_Label_Color]</textcolor>
				<label>$INFO[Container($PARAM[id]).ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>

	<include name="Progress_Slides_Default">
		<param name="id"/>
		<definition>
			<animation effect="slide" end="165" time="0" condition="Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),0)">Conditional</animation>
			<animation effect="slide" end="174" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),0) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),5)">Conditional</animation>
			<animation effect="slide" end="183" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),5) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),10)">Conditional</animation>
			<animation effect="slide" end="192" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),10) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),15)">Conditional</animation>
			<animation effect="slide" end="201" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),15) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),20)">Conditional</animation>
			<animation effect="slide" end="210" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),20) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),25)">Conditional</animation>
			<animation effect="slide" end="219" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),25) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),30)">Conditional</animation>
			<animation effect="slide" end="228" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),30) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),35)">Conditional</animation>
			<animation effect="slide" end="237" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),35) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),40)">Conditional</animation>
			<animation effect="slide" end="246" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),40) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),45)">Conditional</animation>
			<animation effect="slide" end="255" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),45) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),50)">Conditional</animation>
			<animation effect="slide" end="264" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),50) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),55)">Conditional</animation>
			<animation effect="slide" end="273" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),55) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),60)">Conditional</animation>
			<animation effect="slide" end="282" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),60) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),65)">Conditional</animation>
			<animation effect="slide" end="291" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),65) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),70)">Conditional</animation>
			<animation effect="slide" end="300" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),70) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),75)">Conditional</animation>
			<animation effect="slide" end="309" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),75) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),80)">Conditional</animation>
			<animation effect="slide" end="318" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),80) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),85)">Conditional</animation>
			<animation effect="slide" end="327" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),85) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),90)">Conditional</animation>
			<animation effect="slide" end="336" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),90) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),95)">Conditional</animation>
			<animation effect="slide" end="345" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),95) + Integer.IsLess(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),100)">Conditional</animation>
		</definition>
	</include>

	<include name="Progress_Slides_Narrow">
		<param name="id"/>
		<definition>
			<animation effect="slide" end="105" time="0" condition="Integer.IsEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),0)">Conditional</animation>
			<animation effect="slide" end="111" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),0) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),5)">Conditional</animation>
			<animation effect="slide" end="117" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),5) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),10)">Conditional</animation>
			<animation effect="slide" end="123" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),10) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),15)">Conditional</animation>
			<animation effect="slide" end="129" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),15) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),20)">Conditional</animation>
			<animation effect="slide" end="135" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),20) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),25)">Conditional</animation>
			<animation effect="slide" end="141" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),25) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),30)">Conditional</animation>
			<animation effect="slide" end="147" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),30) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),35)">Conditional</animation>
			<animation effect="slide" end="153" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),35) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),40)">Conditional</animation>
			<animation effect="slide" end="159" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),40) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),45)">Conditional</animation>
			<animation effect="slide" end="165" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),45) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),50)">Conditional</animation>
			<animation effect="slide" end="171" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),50) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),55)">Conditional</animation>
			<animation effect="slide" end="177" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),55) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),60)">Conditional</animation>
			<animation effect="slide" end="183" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),60) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),65)">Conditional</animation>
			<animation effect="slide" end="189" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),65) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),70)">Conditional</animation>
			<animation effect="slide" end="195" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),70) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),75)">Conditional</animation>
			<animation effect="slide" end="201" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),75) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),80)">Conditional</animation>
			<animation effect="slide" end="207" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),80) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),85)">Conditional</animation>
			<animation effect="slide" end="213" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),85) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),90)">Conditional</animation>
			<animation effect="slide" end="219" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),90) + Integer.IsLessOrEqual(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),95)">Conditional</animation>
			<animation effect="slide" end="225" time="0" condition="Integer.IsGreater(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),95) + Integer.IsLess(Container($PARAM[id]).ListItem.Property(WatchedEpisodePercent),100)">Conditional</animation>
		</definition>
	</include>

	<include name="Progress">
		<param name="id"/>
		<param name="width" default="360"/>
		<param name="height" default="6"/>
		<param name="bottom" default="27"/>
		<definition>
			<control type="group">
				<visible>!$EXP[ContainerSwitching] + !$EXP[ContentSwitching] + !$EXP[TransparentDialog_IsVisible] + !$EXP[Scrollbar_HasFocus]</visible>
				<visible>![Control.HasFocus(4501) + Window.IsVisible(1121)] + !$EXP[Secondary_List_ContainerSwitching] + !$EXP[Secondary_List_ContentSwitching]</visible>
				<include>Delayed_Content_Fade_Animation</include>
				<nested/>
				<centerleft>50%</centerleft>
				<bottom>$PARAM[bottom]</bottom>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<include content="Progress_Template">
					<param name="id" value="$PARAM[id]"/>
				</include>
				<include condition="Skin.HasSetting(Secondary_List_Enabled) + Window.Is(videos)" content="Progress_Template">
					<param name="id" value="4501"/>
				</include>
			</control>
		</definition>
	</include>

	<include name="Progress_Grid">
		<param name="id"/>
		<param name="left" default="0"/>
		<param name="width" default="360"/>
		<param name="height" default="6"/>
		<param name="bottom" default="12"/>
		<param name="slides" default="Narrow"/>
		<definition>
			<control type="group">
				<visible>!$EXP[ContainerSwitching] + !$EXP[ContentSwitching] + !$EXP[TransparentDialog_IsVisible] + !$EXP[Scrollbar_HasFocus]</visible>
				<include>Delayed_Content_Fade_Animation</include>
				<left>$PARAM[left]</left>
				<bottom>$PARAM[bottom]</bottom>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<include content="Progress_Template">
					<param name="id" value="$PARAM[id]"/>
					<param name="unwatched_indicator_background" value="$VAR[Accent_Color]"/>
					<param name="slides" value="$PARAM[slides]"/>
				</include>
			</control>
		</definition>
	</include>

	<include name="MediaFlags">
		<param name="groupvisible" default="[$EXP[ListView_Flags_IsOn] | $EXP[BillboardView_Flags_IsOn] | $EXP[ShowcaseView_Flags_IsOn] | $EXP[StripView_Flags_IsOn]]"/>
		<definition>
			<control type="group">
				<visible>$PARAM[groupvisible]</visible>
				<animation effect="slide" end="-60" time="0" condition="$EXP[ListView_Display_IsThumbnails]">Conditional</animation>
				<control type="group">
					<visible>!$EXP[ContainerSwitching] + !$EXP[ContentSwitching] + !$EXP[TransparentDialog_IsVisible] + !$EXP[Scrollbar_HasFocus] + !$EXP[InfoDialog_IsVisible] + !Window.Is(pictureinfo)</visible>
					<include>Delayed_Content_Fade_Animation</include>
					<!-- Studio -->
					<control type="image">
						<visible>$EXP[ListView_Flags_Studio_IsVisible] | [$EXP[BillboardView_Flags_Studio_IsVisible] + !$EXP[BillboardView_Details_Off]] | [$EXP[ShowcaseView_Flags_Studio_IsVisible] + !$EXP[ShowcaseView_Details_Off]] | [$EXP[StripView_Flags_Studio_IsVisible] + [!$EXP[StripView_Details_Off] | $EXP[StripView_Details_Title]]]</visible>
						<left>1605</left>
						<top>960</top>
						<width>90</width>
						<height>60</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[Flag_Color]" fallback="flags/blank.png">$VAR[Studio_Flag]</texture>
						<animation effect="slide" start="0,0" end="180,0" time="0" condition="$EXP[ListView_Flags_Studio_Shift] | $EXP[BillboardView_Flags_Studio_Shift] | $EXP[ShowcaseView_Flags_Studio_Shift] | $EXP[StripView_Flags_Studio_Shift]">Conditional</animation>
						<animation effect="slide" start="0,0" end="-1560,0" time="0" condition="$EXP[StripView_IsVisible] + $EXP[StripView_Details_Title] + !$EXP[StripView_Details_Logo_IsOn] + !$EXP[StripView_Flags_Studio_Shift]">Conditional</animation>
					</control>
					<!-- MPAA flag -->
					<control type="image">
						<visible>$EXP[ListView_Flags_Rating_IsVisible] | [$EXP[BillboardView_Flags_Rating_IsVisible] + !$EXP[BillboardView_Details_Off]] | [$EXP[ShowcaseView_Flags_Rating_IsVisible] + !$EXP[ShowcaseView_Details_Off]] | [$EXP[StripView_Flags_Studio_IsVisible] + [!$EXP[StripView_Details_Off] | $EXP[StripView_Details_Title]]]</visible>
						<left>1785</left>
						<top>960</top>
						<width>90</width>
						<height>60</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[Flag_Color]" fallback="flags/blank.png">$VAR[MPAA_Flag]</texture>
					</control>
				</control>
			</control>
		</definition>
	</include>

</includes>
